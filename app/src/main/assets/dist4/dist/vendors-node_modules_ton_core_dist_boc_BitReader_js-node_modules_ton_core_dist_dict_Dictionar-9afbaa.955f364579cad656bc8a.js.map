{"version":3,"file":"vendors-node_modules_ton_core_dist_boc_BitReader_js-node_modules_ton_core_dist_dict_Dictionar-9afbaa.955f364579cad656bc8a.js","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,kBAAkB,mBAAO,CAAC,4EAAoB;AAC9C,0BAA0B,mBAAO,CAAC,4FAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqwBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;;;ACjdJ;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,kBAAkB,mBAAO,CAAC,4EAAoB;AAC9C,kBAAkB,mBAAO,CAAC,oEAAgB;AAC1C,eAAe,mBAAO,CAAC,8DAAa;AACpC,oBAAoB,mBAAO,CAAC,wEAAkB;AAC9C,8BAA8B,mBAAO,CAAC,wFAAuB;AAC7D,+BAA+B,mBAAO,CAAC,0FAAwB;AAC/D,oBAAoB,mBAAO,CAAC,oEAAa;AACzC,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD,gCAAgC,mBAAO,CAAC,wGAA+B;AACvkBAAkB;AACliBAAiB,MAAM;AACvvkBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,eAAe,gBAAgB,gBAAgB;;;;;;;;;;;;AClBpC;;AAEZ,kBAAkB;AAClB,mBAAmB;AACnB,qBAAqB;;AAErB;AACA;AACA;;AAEA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,UAAU;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACrJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,eAAe,mBAAO,CAAC,oDAAW;AAClC,gBAAgB,mBAAO,CAAC,gDAAS;AACjC;AACA;AACA;AACA;;AAEA,cAAc;AACd,yBAAkB;AAClB,yBAAyB;;AAEzB;AACA,yBAAkB;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,eAAe;AACxC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yBAAyB,QAAQ;AACjC;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,qBAAqB,WAAW,GAAG,IAAI;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA,gBAAgB,WAAW,GAAG,IAAI,KAAK,aAAa;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,KAAK,mDAAmD,cAAc;AACzF,GAAG;AACH;AACA;AACA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,aAAa,SAAS;AACtD;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB,cAAc,oBAAoB,EAAE,IAAI;AACxC;AACA,YAAY,gBAAgB,EAAE,IAAI;AAClC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG,SAAS,GAAG,KAAK,qBAAqB,EAAE,EAAE;AACpE,QAAQ;AACR,yBAAyB,GAAG,KAAK,yBAAyB,EAAE,EAAE;AAC9D,mBAAmB,yBAAyB,EAAE,EAAE;AAChD;AACA,MAAM;AACN,oBAAoB,IAAI,EAAE,GAAG,SAAS,IAAI,EAAE,EAAE;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0CAA0C,cAAc,SAAS,OAAO;AACxE;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,QAAQ;AAC1B;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACzjEA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA;AACA,SAAS,WAAW;;AAEpB;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA,SAAS,WAAW;;AAEpB;AACA;AACA,SAAS,UAAU;;AAEnB;AACA;;;;;;;;;;;;;ACpFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6C,EAAE,aAAa,CAAC;AAC7D,WAAW,GAAG,kBAAkB,GAAG,yBAAmB,GAAG,yBAA8B,GAAG,yBAAiB,GAAG,yBAA8B,GAAG,yBAAuB,GAAG,yBAAyB,GAAG,yBAAuB,GAAG,yBAAuB,GAAG,yBAAqB;AAC9Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oBAAoB,yBAAqB,qBAAqB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB,yBAAuB,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB,yBAAuB,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wBAAwB,yBAAyB,yBAAyB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB,yBAAuB,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA,CAAC,6BAA6B,yBAA8B,8BAA8B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB,yBAAiB,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA,CAAC,6BAA6B,yBAA8B,8BAA8B;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kBAAkB,yBAAmB,mBAAmB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW,GAAG,0DAA0D,MAAM,GAAG;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,yBAAyB,SAAS;AAClC;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,oDAAoD;AACpD,yCAAyC;AACzC,sDAAsD;AACtD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0EAA0E;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,8BAA8B,EAAE,KAAK,EAAE,kBAAkB,YAAY,OAAO;AAC/G;AACA;AACA,+CAA+C;AAC/C,8DAA8D,uBAAuB,IAAI;AACzF,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA,iDAAiD;AACjD,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE;AACA,sEAAsE;AACtE,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE;AACA,sEAAsE;AACtE,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE;AACA,4EAA4E;AAC5E,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE;AACA,oEAAoE;AACpE,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oDAAoD,kBAAkB;AACtE;AACA,uEAAuE;AACvE,gDAAgD,iBAAiB;AACjE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA,6DAA6D;AAC7D,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,6DAA6D;AAC7D,iDAAiD,cAAc;AAC/D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA,kEAAkE;AAClE,6CAA6C,MAAM;AACnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,wDAAwD;AACxD,6CAA6C,UAAU;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,wEAAwE;AACxE,6CAA6C,UAAU;AACvD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW,UAAU;AACtE;AACA,qFAAqF;AACrF,6CAA6C,UAAU,WAAW,WAAW;AAC7E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,yDAAyD;AACzD,6CAA6C,UAAU;AACvD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA,0EAA0E;AAC1E,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA,6CAA6C;AAC7C,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,2CAA2C;AAC3C,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,sDAAsD;AACtD,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,iEAAiE;AACjE,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,gEAAgE;AAChE,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,UAAU,UAAU;AACrE;AACA,6EAA6E;AAC7E,kCAAkC,UAAU,WAAW,SAAS;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,0DAA0D;AAC1D,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,wDAAwD;AACxD,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,SAAS;AAC1D;AACA,gEAAgE;AAChE,kCAAkC,UAAU,UAAU,QAAQ;AAC9D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,wDAAwD;AACxD,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,wDAAwD;AACxD,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA,+CAA+C;AAC/C,kCAAkC,UAAU;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,6DAA6D;AAC7D,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,oDAAoD;AACpD,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,sDAAsD;AACtD,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,4DAA4D;AAC5D,kCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,iDAAiD;AACjD,0CAA0C,UAAU;AACpD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,8DAA8D;AAC9D,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA,oDAAoD;AACpD,8BAA8B,UAAU;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW;AAC7C;AACA,yDAAyD;AACzD,8BAA8B,UAAU;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,4CAA4C;AAC5C,6BAA6B,WAAW;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA,4CAA4C;AAC5C,6BAA6B,WAAW;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,YAAY;AAC7C;AACA,+CAA+C;AAC/C,6BAA6B,WAAW;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,uCAAuC;AACvC,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,uCAAuC;AACvC,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,8DAA8D;AAC9D,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,qEAAqE;AACrE,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mDAAmD,WAAW,eAAe,OAAO;AACpF;AACA,qFAAqF;AACrF,+CAA+C,UAAU,gBAAgB,OAAO;AAChF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA,8CAA8C;AAC9C,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA,wDAAwD;AACxD,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA,+CAA+C;AAC/C,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,0DAA0D;AAC1D,2CAA2C,UAAU;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,mDAAmD;AACnD,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA,sDAAsD;AACtD,sCAAsC,UAAU;AAChD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA,sDAAsD;AACtD,iCAAiC,UAAU;AAC3C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA,gDAAgD;AAChD,gCAAgC,UAAU;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,oDAAoD;AACpD,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA,yDAAyD;AACzD,8CAA8C,QAAQ;AACtD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,iEAAiE;AACjE,qDAAqD,QAAQ;AAC7D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA,0DAA0D;AAC1D,sDAAsD,UAAU;AAChE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,qDAAqD;AACrD,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA,kDAAkD;AAClD,wDAAwD,QAAQ;AAChE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,0DAA0D;AAC1D,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA,iEAAiE;AACjE,4DAA4D,QAAQ;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA,kDAAkD;AAClD,mDAAmD,QAAQ;AAC3D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA,oDAAoD;AACpD,0DAA0D,QAAQ;AAClE;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,WAAW;;;;;;;;;;;ACt+CX,eAAe,KAAiD,oBAAoB,CAAwJ,CAAC,kBAAkB,YAAY,OAAO,cAAc,aAAa,aAAa,kBAAkB,6BAA6B,aAAa,WAAW,cAAc,SAAS,cAAc,2BAA2B,2CAA2C,OAAO,qhBAAqhB,oBAAoB,4HAA4H,sBAAsB,UAAU,QAAQ,IAAI,qBAAqB,oBAAoB,oBAAoB,qBAAqB,oBAAoB,qBAAqB,oBAAoB,mBAAmB,g+BAAg+B,KAAK,qvBAAqvB,spCAAspC,UAAU,oBAAoB,mBAAmB,g6BAAg6B,KAAK,qvBAAqvB,sgBAAsgB,UAAU,iFAAiF,0BAA0B,kDAAkD,QAAQ,KAAK,WAAW,QAAQ,IAAI,cAAc,KAAK,MAAM,EAAE,mBAAmB,KAAK,uBAAuB,YAAY,KAAK,uCAAuC,kBAAkB,0BAA0B,IAAI,uBAAuB,SAAS,sBAAsB,kDAAkD,QAAQ,KAAK,WAAW,QAAQ,IAAI,cAAc,KAAK,MAAM,EAAE,mBAAmB,KAAK,gBAAgB,YAAY,KAAK,uCAAuC,YAAY,0BAA0B,IAAI,gBAAgB,SAAS,sBAAsB,yBAAyB,WAAW,gCAAgC,IAAI,iBAAiB,oBAAoB,0BAA0B,yBAAyB,WAAW,gCAAgC,IAAI,iBAAiB,wBAAwB,kBAAkB,oBAAoB,q4BAAq4B,wBAAwB,eAAe,uCAAuC,wBAAwB,yBAAyB,iCAAiC,sBAAsB,MAAM,iBAAiB,6CAA6C,KAAK,WAAW,SAAS,sBAAsB,2BAA2B,iBAAiB,kDAAkD,yBAAyB,KAAK,WAAW,SAAS,gBAAgB,MAAM,QAAQ,KAAK,gBAAgB,cAAc,YAAY,QAAQ,KAAK,wDAAwD,mBAAmB,kBAAkB,uBAAuB,KAAK,oCAAoC,gBAAgB,sBAAsB,QAAQ,KAAK,cAAc,uBAAuB,IAAI,KAAK,wBAAwB,KAAK,iDAAiD,sEAAsE,QAAQ,KAAK,qCAAqC,gBAAgB,8CAA8C,gCAAgC,cAAc,yBAAyB,qBAAqB,gBAAgB,MAAM,QAAQ,KAAK,8BAA8B,aAAa,kBAAkB,YAAY,KAAK,mBAAmB,kBAAkB,YAAY,KAAK,mBAAmB,kBAAkB,0PAA0P,4kHAA4kH,gBAAgB,SAAS,gBAAgB,YAAY,QAAQ,KAAK,cAAc,UAAU,KAAK,kCAAkC,QAAQ,KAAK,cAAc,gBAAgB,YAAY,QAAQ,KAAK,cAAc,UAAU,KAAK,2BAA2B,QAAQ,KAAK,cAAc,kBAAkB,wFAAwF,QAAQ,KAAK,cAAc,4CAA4C,KAAK,+BAA+B,sBAAsB,KAAK,qNAAqN,QAAQ,KAAK,wDAAwD,sCAAsC,gCAAgC,gBAAgB,gBAAgB,gBAAgB,sBAAsB,kBAAkB,yBAAyB,2BAA2B,mCAAmC,gTAAgT,MAAM,2tDAA2tD,wHAAwH,kCAAkC,kCAAkC,kBAAkB,uCAAuC,KAAK,qBAAqB,yCAAyC,yCAAyC,KAAK,kDAAkD,2JAA2J,KAAK,4CAA4C,6BAA6B,KAAK,YAAY,aAAa,KAAK,+BAA+B,waAAwa,IAAI,6DAA6D,sZAAsZ,oCAAoC,QAAQ,kBAAkB,sCAAsC,IAAI,wCAAwC,sDAAsD,8CAA8C,qDAAqD,QAAQ,IAAI,wCAAwC,mBAAmB,0sDAA0sD,oBAAoB,0NAA0N,OAAO,EAAE,QAAQ,KAAK,oGAAoG,QAAQ,KAAK,wgCAAwgC,KAAK,kfAAkf,83CAA83C,SAAS,kBAAkB,wEAAwE,uRAAuR,IAAI,kBAAkB,uFAAuF,IAAI,uBAAuB,SAAS,gBAAgB,0DAA0D,kNAAkN,kBAAkB,MAAM,QAAQ,IAAI,mBAAmB,iBAAiB,sBAAsB,wDAAwD,mBAAmB,QAAQ,kDAAkD,KAAK,sDAAsD,iBAAiB,wBAAwB,oDAAoD,mBAAmB,+CAA+C,4EAA4E,KAAK,iBAAiB,SAAS,sHAAsH,iBAAiB,YAAY,SAAS,MAAM,KAAK,sBAAsB,IAAI,0EAA0E,eAAe,YAAY,KAAK,iDAAiD,QAAQ,KAAK,kBAAkB,QAAQ,KAAK,kCAAkC,eAAe,6BAA6B,QAAQ,KAAK,cAAc,QAAQ,KAAK,WAAW,QAAQ,qBAAqB,kHAAkH,yCAAyC,WAAW,QAAQ,IAAI,iBAAiB,QAAQ,KAAK,oBAAoB,wDAAwD,KAAK,cAAc,0BAA0B,KAAK,WAAW,QAAQ,KAAK,cAAc,QAAQ,KAAK,YAAY,KAAK,sBAAsB,8BAA8B,qBAAqB,wFAAwF,iBAAiB,iBAAiB,8CAA8C,6RAA6R,eAAe,QAAQ,IAAI,cAAc,QAAQ,KAAK,iBAAiB,kFAAkF,QAAQ,IAAI,WAAW,SAAS,QAAQ,IAAI,iBAAiB,SAAS,yBAAyB,iBAAiB,iDAAiD,mDAAmD,cAAc,YAAY,mBAAmB,mGAAmG,eAAe,YAAY,WAAW,WAAW,YAAY,0WAA0W,yBAAyB,6BAA6B,uCAAuC,yBAAyB,6BAA6B,6qBAA6qB,2BAA2B,wBAAwB,gBAAgB,6BAA6B,kBAAkB,qEAAqE,WAAW,iBAAiB,0CAA0C,kCAAkC,kBAAkB,qEAAqE,WAAW,iBAAiB,gEAAgE,8GAA8G,uDAAuD,+CAA+C,yBAAyB,kBAAkB,+BAA+B,qDAAqD,yBAAyB,gBAAgB,yFAAyF,wBAAwB,0BAA0B,4BAA4B,sBAAsB,wDAAwD,wDAAwD,MAAM,yBAAyB,kBAAkB,sDAAsD,wBAAwB,+BAA+B,4DAA4D,8CAA8C,eAAe,yBAAyB,yCAAyC,8DAA8D,yBAAyB,eAAe,yCAAyC,sKAAsK,gEAAgE,kCAAkC,4BAA4B,2BAA2B,gEAAgE,oDAAoD,mBAAmB,gCAAgC,WAAW,cAAc,SAAS,+BAA+B,+CAA+C,WAAW,cAAc,SAAS,wCAAwC,iEAAiE,wDAAwD,kEAAkE,QAAQ,KAAK,cAAc,QAAQ,WAAW,iBAAiB,6BAA6B,2BAA2B,8CAA8C,gBAAgB,yBAAyB,0CAA0C,8DAA8D,iCAAiC,WAAW,iBAAiB,OAAO,yCAAyC,qCAAqC,wDAAwD,sDAAsD,KAAK,cAAc,mBAAmB,yBAAyB,uHAAuH,MAAM,yBAAyB,yBAAyB,6CAA6C,wFAAwF,uBAAuB,IAAI,4GAA4G,0BAA0B,QAAQ,IAAI,iEAAiE,QAAQ,IAAI,cAAc,MAAM,wDAAwD,0BAA0B,QAAQ,IAAI,cAAc,MAAM,GAAG,4CAA4C,EAAE,WAAW,MAAM,cAAc,WAAW,+BAA+B,YAAY,YAAY,qCAAqC,QAAQ,0CAA0C,cAAc,IAAI,IAAI,aAAa,+DAA+D,uBAAuB,EAAE,8DAA8D,4FAA4F,eAAe,wCAAwC,SAAS,GAAG,SAAS,YAAY,aAAa,cAAc,wJAAwJ,EAAE,SAAS,cAAc,QAAQ,EAAE,SAAS,cAAc,qCAAqC,EAAE,o1hBAAo1hB,oBAAoB,6EAA6E,yBAAyB,oBAAoB,iCAAiC,iEAAiE,2BAA2B,mDAAmD,kCAAkC,MAAM,wBAAwB,wDAAwD,cAAc,iDAAiD,iDAAiD,QAAQ,yBAAyB,kBAAkB,QAAQ,UAAU,uDAAuD,MAAM,0DAA0D,MAAM,0DAA0D,MAAM,qDAAqD,EAAE,GAAG,uBAAuB,IAAI,yBAAyB,gCAAgC,oBAAoB,sBAAsB,+BAA+B,oDAAoD,iBAAiB,gCAAgC,aAAa,MAAM,EAAE,UAAU,8CAA8C,YAAY,IAAI,yBAAyB,4DAA4D,SAAS,sBAAsB,yBAAyB,qBAAqB,sDAAsD,yBAAyB,qBAAqB,oCAAoC,6BAA6B,6CAA6C,yDAAyD,MAAM,IAAI;AACt1lD;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA,MAAM,KAA6B;AACnC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;AACA,8BAA8B,EAAE,eAAe,EAAE,oBAAoB,EAAE,kBAAkB,EAAE;AAC3F;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;;AAEA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;;AAEA;AACA;;AAEA,eAAe,MAAM;AACrB;AACA,2CAA2C;AAC3C,iBAAiB,MAAM;AACvB;;AAEA;AACA;AACA,yDAAyD,MAAM;AAC/D;;AAEA,MAAM;AACN;AACA,2CAA2C;AAC3C,oBAAoB,MAAM;AAC1B;;AAEA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;;AAEA,IAAI;AACJ;;AAEA;AACA;AACA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;;AAEA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;;;;;;;AChFiC;AACH;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D;AAC/D;AACA;AACA;AACA;AACA,CAAC,4DAA4D;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;;AAEzD;AACA;AACA;AACA;AACA,CAAC,sBAAsB;;AAEvB;AACA,oBAAoB,wDAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,sDAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAe;AAClC,SAAS;AACT;AACA;AACA,kCAAkC,sDAAe;AACjD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAkB;AACjC;AACA;AACA;AACA;AACA,0BAA0B,0CAAU;AACpC;AACA;AACA;AACA;AACA,0BAA0B,+CAAe;AACzC;AACA,6DAA6D,oBAAoB,oBAAoB,4BAA4B,qBAAqB,mCAAmC,wBAAwB,kCAAkC;AACnP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsP;AACtP;;;;;;;;;;;;;;;;;;;;;;;AClyH","sources":["webpack://mytonwallet/./node_modules/@ton/core/dist/boc/BitReader.js","webpack://mytonwallet/./node_modules/@ton/core/dist/dict/Dictionary.js","webpack://mytonwallet/./node_modules/@ton/core/dist/types/SendMode.js","webpack://mytonwallet/./node_modules/base64-js/index.js","webpack://mytonwallet/./node_modules/buffer/index.js","webpack://mytonwallet/./node_modules/ieee754/index.js","webpack://mytonwallet/./node_modules/tonapi-sdk-js/dist/index.js","webpack://mytonwallet/./node_modules/tonweb-mnemonic/dist/web/index.js","webpack://mytonwallet/./node_modules/tweetnacl-util/nacl-util.js","webpack://mytonwallet/./node_modules/@tonconnect/protocol/lib/esm/index.mjs","webpack://mytonwallet/./node_modules/idb-keyval/dist/index.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitReader = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst ExternalAddress_1 = require(\"../address/ExternalAddress\");\n/**\n * Class for reading bit strings\n */\nclass BitReader {\n    constructor(bits, offset = 0) {\n        this._checkpoints = [];\n        this._bits = bits;\n        this._offset = offset;\n    }\n    /**\n     * Offset in source bit string\n     */\n    get offset() {\n        return this._offset;\n    }\n    /**\n     * Number of bits remaining\n     */\n    get remaining() {\n        return this._bits.length - this._offset;\n    }\n    /**\n     * Skip bits\n     * @param bits number of bits to skip\n     */\n    skip(bits) {\n        if (bits < 0 || this._offset + bits > this._bits.length) {\n            throw new Error(`Index ${this._offset + bits} is out of bounds`);\n        }\n        this._offset += bits;\n    }\n    /**\n     * Reset to the beginning or latest checkpoint\n     */\n    reset() {\n        if (this._checkpoints.length > 0) {\n            this._offset = this._checkpoints.pop();\n        }\n        else {\n            this._offset = 0;\n        }\n    }\n    /**\n     * Save checkpoint\n     */\n    save() {\n        this._checkpoints.push(this._offset);\n    }\n    /**\n     * Load a single bit\n     * @returns true if the bit is set, false otherwise\n     */\n    loadBit() {\n        let r = this._bits.at(this._offset);\n        this._offset++;\n        return r;\n    }\n    /**\n     * Preload bit\n     * @returns true if the bit is set, false otherwise\n     */\n    preloadBit() {\n        return this._bits.at(this._offset);\n    }\n    /**\n     * Load bit string\n     * @param bits number of bits to read\n     * @returns new bitstring\n     */\n    loadBits(bits) {\n        let r = this._bits.substring(this._offset, bits);\n        this._offset += bits;\n        return r;\n    }\n    /**\n     * Preload bit string\n     * @param bits number of bits to read\n     * @returns new bitstring\n     */\n    preloadBits(bits) {\n        return this._bits.substring(this._offset, bits);\n    }\n    /**\n     * Load buffer\n     * @param bytes number of bytes\n     * @returns new buffer\n     */\n    loadBuffer(bytes) {\n        let buf = this._preloadBuffer(bytes, this._offset);\n        this._offset += bytes * 8;\n        return buf;\n    }\n    /**\n     * Preload buffer\n     * @param bytes number of bytes\n     * @returns new buffer\n     */\n    preloadBuffer(bytes) {\n        return this._preloadBuffer(bytes, this._offset);\n    }\n    /**\n     * Load uint value\n     * @param bits uint bits\n     * @returns read value as number\n     */\n    loadUint(bits) {\n        return Number(this.loadUintBig(bits));\n    }\n    /**\n     * Load uint value as bigint\n     * @param bits uint bits\n     * @returns read value as bigint\n     */\n    loadUintBig(bits) {\n        let loaded = this.preloadUintBig(bits);\n        this._offset += bits;\n        return loaded;\n    }\n    /**\n     * Preload uint value\n     * @param bits uint bits\n     * @returns read value as number\n     */\n    preloadUint(bits) {\n        return Number(this._preloadUint(bits, this._offset));\n    }\n    /**\n     * Preload uint value as bigint\n     * @param bits uint bits\n     * @returns read value as bigint\n     */\n    preloadUintBig(bits) {\n        return this._preloadUint(bits, this._offset);\n    }\n    /**\n     * Load int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    loadInt(bits) {\n        let res = this._preloadInt(bits, this._offset);\n        this._offset += bits;\n        return Number(res);\n    }\n    /**\n     * Load int value as bigint\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    loadIntBig(bits) {\n        let res = this._preloadInt(bits, this._offset);\n        this._offset += bits;\n        return res;\n    }\n    /**\n     * Preload int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    preloadInt(bits) {\n        return Number(this._preloadInt(bits, this._offset));\n    }\n    /**\n     * Preload int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    preloadIntBig(bits) {\n        return this._preloadInt(bits, this._offset);\n    }\n    /**\n     * Load varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarUint(bits) {\n        let size = Number(this.loadUint(bits));\n        return Number(this.loadUintBig(size * 8));\n    }\n    /**\n     * Load varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarUintBig(bits) {\n        let size = Number(this.loadUint(bits));\n        return this.loadUintBig(size * 8);\n    }\n    /**\n     * Preload varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarUint(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return Number(this._preloadUint(size * 8, this._offset + bits));\n    }\n    /**\n     * Preload varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarUintBig(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return this._preloadUint(size * 8, this._offset + bits);\n    }\n    /**\n     * Load varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarInt(bits) {\n        let size = Number(this.loadUint(bits));\n        return Number(this.loadIntBig(size * 8));\n    }\n    /**\n     * Load varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarIntBig(bits) {\n        let size = Number(this.loadUint(bits));\n        return this.loadIntBig(size * 8);\n    }\n    /**\n     * Preload varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarInt(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return Number(this._preloadInt(size * 8, this._offset + bits));\n    }\n    /**\n     * Preload varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarIntBig(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return this._preloadInt(size * 8, this._offset + bits);\n    }\n    /**\n     * Load coins value\n     * @returns read value as bigint\n     */\n    loadCoins() {\n        return this.loadVarUintBig(4);\n    }\n    /**\n     * Preload coins value\n     * @returns read value as bigint\n     */\n    preloadCoins() {\n        return this.preloadVarUintBig(4);\n    }\n    /**\n     * Load Address\n     * @returns Address\n     */\n    loadAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address: \" + type);\n        }\n    }\n    /**\n     * Load internal address\n     * @returns Address or null\n     */\n    loadMaybeAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Load external address\n     * @returns ExternalAddress\n     */\n    loadExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Load external address\n     * @returns ExternalAddress or null\n     */\n    loadMaybeExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Read address of any type\n     * @returns Address or ExternalAddress or null\n     */\n    loadAddressAny() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else if (type === 3) {\n            throw Error('Unsupported');\n        }\n        else {\n            throw Error('Unreachable');\n        }\n    }\n    /**\n     * Load bit string that was padded to make it byte alligned. Used in BOC serialization\n     * @param bytes number of bytes to read\n     */\n    loadPaddedBits(bits) {\n        // Check that number of bits is byte alligned\n        if (bits % 8 !== 0) {\n            throw new Error(\"Invalid number of bits\");\n        }\n        // Skip padding\n        let length = bits;\n        while (true) {\n            if (this._bits.at(this._offset + length - 1)) {\n                length--;\n                break;\n            }\n            else {\n                length--;\n            }\n        }\n        // Read substring\n        let r = this._bits.substring(this._offset, length);\n        this._offset += bits;\n        return r;\n    }\n    /**\n     * Clone BitReader\n     */\n    clone() {\n        return new BitReader(this._bits, this._offset);\n    }\n    /**\n     * Preload int from specific offset\n     * @param bits bits to preload\n     * @param offset offset to start from\n     * @returns read value as bigint\n     */\n    _preloadInt(bits, offset) {\n        if (bits == 0) {\n            return 0n;\n        }\n        let sign = this._bits.at(offset);\n        let res = 0n;\n        for (let i = 0; i < bits - 1; i++) {\n            if (this._bits.at(offset + 1 + i)) {\n                res += 1n << BigInt(bits - i - 1 - 1);\n            }\n        }\n        if (sign) {\n            res = res - (1n << BigInt(bits - 1));\n        }\n        return res;\n    }\n    /**\n     * Preload uint from specific offset\n     * @param bits bits to preload\n     * @param offset offset to start from\n     * @returns read value as bigint\n     */\n    _preloadUint(bits, offset) {\n        if (bits == 0) {\n            return 0n;\n        }\n        let res = 0n;\n        for (let i = 0; i < bits; i++) {\n            if (this._bits.at(offset + i)) {\n                res += 1n << BigInt(bits - i - 1);\n            }\n        }\n        return res;\n    }\n    _preloadBuffer(bytes, offset) {\n        // Try to load fast\n        let fastBuffer = this._bits.subbuffer(offset, bytes * 8);\n        if (fastBuffer) {\n            return fastBuffer;\n        }\n        // Load slow\n        let buf = Buffer.alloc(bytes);\n        for (let i = 0; i < bytes; i++) {\n            buf[i] = Number(this._preloadUint(8, offset + i * 8));\n        }\n        return buf;\n    }\n    _loadInternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type !== 2) {\n            throw Error('Invalid address');\n        }\n        // No Anycast supported\n        if (this._preloadUint(1, this._offset + 2) !== 0n) {\n            throw Error('Invalid address');\n        }\n        // Read address\n        let wc = Number(this._preloadInt(8, this._offset + 3));\n        let hash = this._preloadBuffer(32, this._offset + 11);\n        // Update offset\n        this._offset += 267;\n        return new Address_1.Address(wc, hash);\n    }\n    _loadExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type !== 1) {\n            throw Error('Invalid address');\n        }\n        // Load length\n        let bits = Number(this._preloadUint(9, this._offset + 2));\n        // Load address\n        let value = this._preloadUint(bits, this._offset + 11);\n        // Update offset\n        this._offset += 11 + bits;\n        return new ExternalAddress_1.ExternalAddress(value, bits);\n    }\n}\nexports.BitReader = BitReader;\n","\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionary = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst Builder_1 = require(\"../boc/Builder\");\nconst Cell_1 = require(\"../boc/Cell\");\nconst BitString_1 = require(\"../boc/BitString\");\nconst generateMerkleProof_1 = require(\"./generateMerkleProof\");\nconst generateMerkleUpdate_1 = require(\"./generateMerkleUpdate\");\nconst parseDict_1 = require(\"./parseDict\");\nconst serializeDict_1 = require(\"./serializeDict\");\nconst internalKeySerializer_1 = require(\"./utils/internalKeySerializer\");\nclass Dictionary {\n    /**\n     * Create an empty map\n     * @param key key type\n     * @param value value type\n     * @returns Dictionary<K, V>\n     */\n    static empty(key, value) {\n        if (key && value) {\n            return new Dictionary(new Map(), key, value);\n        }\n        else {\n            return new Dictionary(new Map(), null, null);\n        }\n    }\n    /**\n     * Load dictionary from slice\n     * @param key key description\n     * @param value value description\n     * @param src slice\n     * @returns Dictionary<K, V>\n     */\n    static load(key, value, sc) {\n        let slice;\n        if (sc instanceof Cell_1.Cell) {\n            if (sc.isExotic) {\n                return Dictionary.empty(key, value);\n            }\n            slice = sc.beginParse();\n        }\n        else {\n            slice = sc;\n        }\n        let cell = slice.loadMaybeRef();\n        if (cell && !cell.isExotic) {\n            return Dictionary.loadDirect(key, value, cell.beginParse());\n        }\n        else {\n            return Dictionary.empty(key, value);\n        }\n    }\n    /**\n     * Low level method for rare dictionaries from system contracts.\n     * Loads dictionary from slice directly without going to the ref.\n     *\n     * @param key key description\n     * @param value value description\n     * @param sc slice\n     * @returns Dictionary<K, V>\n     */\n    static loadDirect(key, value, sc) {\n        if (!sc) {\n            return Dictionary.empty(key, value);\n        }\n        let slice;\n        if (sc instanceof Cell_1.Cell) {\n            slice = sc.beginParse();\n        }\n        else {\n            slice = sc;\n        }\n        let values = (0, parseDict_1.parseDict)(slice, key.bits, value.parse);\n        let prepare = new Map();\n        for (let [k, v] of values) {\n            prepare.set((0, internalKeySerializer_1.serializeInternalKey)(key.parse(k)), v);\n        }\n        return new Dictionary(prepare, key, value);\n    }\n    constructor(values, key, value) {\n        this._key = key;\n        this._value = value;\n        this._map = values;\n    }\n    get size() {\n        return this._map.size;\n    }\n    get(key) {\n        return this._map.get((0, internalKeySerializer_1.serializeInternalKey)(key));\n    }\n    has(key) {\n        return this._map.has((0, internalKeySerializer_1.serializeInternalKey)(key));\n    }\n    set(key, value) {\n        this._map.set((0, internalKeySerializer_1.serializeInternalKey)(key), value);\n        return this;\n    }\n    delete(key) {\n        const k = (0, internalKeySerializer_1.serializeInternalKey)(key);\n        return this._map.delete(k);\n    }\n    clear() {\n        this._map.clear();\n    }\n    *[Symbol.iterator]() {\n        for (const [k, v] of this._map) {\n            const key = (0, internalKeySerializer_1.deserializeInternalKey)(k);\n            yield [key, v];\n        }\n    }\n    keys() {\n        return Array.from(this._map.keys()).map((v) => (0, internalKeySerializer_1.deserializeInternalKey)(v));\n    }\n    values() {\n        return Array.from(this._map.values());\n    }\n    store(builder, key, value) {\n        if (this._map.size === 0) {\n            builder.storeBit(0);\n        }\n        else {\n            // Resolve serializer\n            let resolvedKey = this._key;\n            if (key !== null && key !== undefined) {\n                resolvedKey = key;\n            }\n            let resolvedValue = this._value;\n            if (value !== null && value !== undefined) {\n                resolvedValue = value;\n            }\n            if (!resolvedKey) {\n                throw Error('Key serializer is not defined');\n            }\n            if (!resolvedValue) {\n                throw Error('Value serializer is not defined');\n            }\n            // Prepare map\n            let prepared = new Map();\n            for (const [k, v] of this._map) {\n                prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);\n            }\n            // Store\n            builder.storeBit(1);\n            let dd = (0, Builder_1.beginCell)();\n            (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, dd);\n            builder.storeRef(dd.endCell());\n        }\n    }\n    storeDirect(builder, key, value) {\n        if (this._map.size === 0) {\n            throw Error('Cannot store empty dictionary directly');\n        }\n        // Resolve serializer\n        let resolvedKey = this._key;\n        if (key !== null && key !== undefined) {\n            resolvedKey = key;\n        }\n        let resolvedValue = this._value;\n        if (value !== null && value !== undefined) {\n            resolvedValue = value;\n        }\n        if (!resolvedKey) {\n            throw Error('Key serializer is not defined');\n        }\n        if (!resolvedValue) {\n            throw Error('Value serializer is not defined');\n        }\n        // Prepare map\n        let prepared = new Map();\n        for (const [k, v] of this._map) {\n            prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);\n        }\n        // Store\n        (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, builder);\n    }\n    generateMerkleProof(key) {\n        return (0, generateMerkleProof_1.generateMerkleProof)(this, key, this._key);\n    }\n    generateMerkleUpdate(key, newValue) {\n        return (0, generateMerkleUpdate_1.generateMerkleUpdate)(this, key, this._key, newValue);\n    }\n}\nexports.Dictionary = Dictionary;\nDictionary.Keys = {\n    /**\n     * Standard address key\n     * @returns DictionaryKey<Address>\n     */\n    Address: () => {\n        return createAddressKey();\n    },\n    /**\n     * Create standard big integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<bigint>\n     */\n    BigInt: (bits) => {\n        return createBigIntKey(bits);\n    },\n    /**\n     * Create integer key\n     * @param bits bits of integer\n     * @returns DictionaryKey<number>\n     */\n    Int: (bits) => {\n        return createIntKey(bits);\n    },\n    /**\n     * Create standard unsigned big integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<bigint>\n     */\n    BigUint: (bits) => {\n        return createBigUintKey(bits);\n    },\n    /**\n     * Create standard unsigned integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<number>\n     */\n    Uint: (bits) => {\n        return createUintKey(bits);\n    },\n    /**\n     * Create standard buffer key\n     * @param bytes number of bytes of a buffer\n     * @returns DictionaryKey<Buffer>\n     */\n    Buffer: (bytes) => {\n        return createBufferKey(bytes);\n    },\n    /**\n     * Create BitString key\n     * @param bits key length\n     * @returns DictionaryKey<BitString>\n     * Point is that Buffer has to be 8 bit aligned,\n     * while key is TVM dictionary doesn't have to be\n     * aligned at all.\n     */\n    BitString: (bits) => {\n        return createBitStringKey(bits);\n    }\n};\nDictionary.Values = {\n    /**\n     * Create standard integer value\n     * @returns DictionaryValue<bigint>\n     */\n    BigInt: (bits) => {\n        return createBigIntValue(bits);\n    },\n    /**\n     * Create standard integer value\n     * @returns DictionaryValue<number>\n     */\n    Int: (bits) => {\n        return createIntValue(bits);\n    },\n    /**\n     * Create big var int\n     * @param bits nubmer of header bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigVarInt: (bits) => {\n        return createBigVarIntValue(bits);\n    },\n    /**\n     * Create standard unsigned integer value\n     * @param bits number of bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigUint: (bits) => {\n        return createBigUintValue(bits);\n    },\n    /**\n     * Create standard unsigned integer value\n     * @param bits number of bits\n     * @returns DictionaryValue<bigint>\n     */\n    Uint: (bits) => {\n        return createUintValue(bits);\n    },\n    /**\n     * Create big var int\n     * @param bits nubmer of header bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigVarUint: (bits) => {\n        return createBigVarUintValue(bits);\n    },\n    /**\n     * Create standard boolean value\n     * @returns DictionaryValue<boolean>\n     */\n    Bool: () => {\n        return createBooleanValue();\n    },\n    /**\n     * Create standard address value\n     * @returns DictionaryValue<Address>\n     */\n    Address: () => {\n        return createAddressValue();\n    },\n    /**\n     * Create standard cell value\n     * @returns DictionaryValue<Cell>\n     */\n    Cell: () => {\n        return createCellValue();\n    },\n    /**\n     * Create Builder value\n     * @param bytes number of bytes of a buffer\n     * @returns DictionaryValue<Builder>\n     */\n    Buffer: (bytes) => {\n        return createBufferValue(bytes);\n    },\n    /**\n     * Create BitString value\n     * @param requested bit length\n     * @returns DictionaryValue<BitString>\n     * Point is that Buffer is not applicable\n     * when length is not 8 bit alligned.\n     */\n    BitString: (bits) => {\n        return createBitStringValue(bits);\n    },\n    /**\n     * Create dictionary value\n     * @param key\n     * @param value\n     */\n    Dictionary: (key, value) => {\n        return createDictionaryValue(key, value);\n    }\n};\n//\n// Keys and Values\n//\nfunction createAddressKey() {\n    return {\n        bits: 267,\n        serialize: (src) => {\n            if (!Address_1.Address.isAddress(src)) {\n                throw Error('Key is not an address');\n            }\n            return (0, Builder_1.beginCell)().storeAddress(src).endCell().beginParse().preloadUintBig(267);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, 267).endCell().beginParse().loadAddress();\n        }\n    };\n}\nfunction createBigIntKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'bigint') {\n                throw Error('Key is not a bigint');\n            }\n            return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadIntBig(bits);\n        }\n    };\n}\nfunction createIntKey(bits) {\n    return {\n        bits: bits,\n        serialize: (src) => {\n            if (typeof src !== 'number') {\n                throw Error('Key is not a number');\n            }\n            if (!Number.isSafeInteger(src)) {\n                throw Error('Key is not a safe integer: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadInt(bits);\n        }\n    };\n}\nfunction createBigUintKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'bigint') {\n                throw Error('Key is not a bigint');\n            }\n            if (src < 0) {\n                throw Error('Key is negative: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        }\n    };\n}\nfunction createUintKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'number') {\n                throw Error('Key is not a number');\n            }\n            if (!Number.isSafeInteger(src)) {\n                throw Error('Key is not a safe integer: ' + src);\n            }\n            if (src < 0) {\n                throw Error('Key is negative: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return Number((0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUint(bits));\n        }\n    };\n}\nfunction createBufferKey(bytes) {\n    return {\n        bits: bytes * 8,\n        serialize: (src) => {\n            if (!Buffer.isBuffer(src)) {\n                throw Error('Key is not a buffer');\n            }\n            return (0, Builder_1.beginCell)().storeBuffer(src).endCell().beginParse().loadUintBig(bytes * 8);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bytes * 8).endCell().beginParse().loadBuffer(bytes);\n        }\n    };\n}\nfunction createBitStringKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (!BitString_1.BitString.isBitString(src))\n                throw Error('Key is not a BitString');\n            return (0, Builder_1.beginCell)().storeBits(src).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadBits(bits);\n        }\n    };\n}\nfunction createIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadInt(bits);\n        }\n    };\n}\nfunction createBigIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadIntBig(bits);\n        }\n    };\n}\nfunction createBigVarIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeVarInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadVarIntBig(bits);\n        }\n    };\n}\nfunction createBigVarUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeVarUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadVarUintBig(bits);\n        }\n    };\n}\nfunction createUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadUint(bits);\n        }\n    };\n}\nfunction createBigUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadUintBig(bits);\n        }\n    };\n}\nfunction createBooleanValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeBit(src);\n        },\n        parse: (src) => {\n            return src.loadBit();\n        }\n    };\n}\nfunction createAddressValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeAddress(src);\n        },\n        parse: (src) => {\n            return src.loadAddress();\n        }\n    };\n}\nfunction createCellValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeRef(src);\n        },\n        parse: (src) => {\n            return src.loadRef();\n        }\n    };\n}\nfunction createDictionaryValue(key, value) {\n    return {\n        serialize: (src, buidler) => {\n            src.store(buidler);\n        },\n        parse: (src) => {\n            return Dictionary.load(key, value, src);\n        }\n    };\n}\nfunction createBufferValue(size) {\n    return {\n        serialize: (src, buidler) => {\n            if (src.length !== size) {\n                throw Error('Invalid buffer size');\n            }\n            buidler.storeBuffer(src);\n        },\n        parse: (src) => {\n            return src.loadBuffer(size);\n        }\n    };\n}\nfunction createBitStringValue(bits) {\n    return {\n        serialize: (src, builder) => {\n            if (src.length !== bits) {\n                throw Error('Invalid BitString size');\n            }\n            builder.storeBits(src);\n        },\n        parse: (src) => {\n            return src.loadBits(bits);\n        }\n    };\n}\n","\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendMode = void 0;\nvar SendMode;\n(function (SendMode) {\n    SendMode[SendMode[\"CARRY_ALL_REMAINING_BALANCE\"] = 128] = \"CARRY_ALL_REMAINING_BALANCE\";\n    SendMode[SendMode[\"CARRY_ALL_REMAINING_INCOMING_VALUE\"] = 64] = \"CARRY_ALL_REMAINING_INCOMING_VALUE\";\n    SendMode[SendMode[\"DESTROY_ACCOUNT_IF_ZERO\"] = 32] = \"DESTROY_ACCOUNT_IF_ZERO\";\n    SendMode[SendMode[\"PAY_GAS_SEPARATELY\"] = 1] = \"PAY_GAS_SEPARATELY\";\n    SendMode[SendMode[\"IGNORE_ERRORS\"] = 2] = \"IGNORE_ERRORS\";\n    SendMode[SendMode[\"NONE\"] = 0] = \"NONE\";\n})(SendMode || (exports.SendMode = SendMode = {}));\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\n/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Api = exports.HttpClient = exports.ContentType = exports.PoolImplementationType = exports.TrustType = exports.JettonVerificationType = exports.BouncePhaseType = exports.ComputeSkipReason = exports.AccStatusChange = exports.TransactionType = exports.AccountStatus = void 0;\n/** @example \"active\" */\nvar AccountStatus;\n(function (AccountStatus) {\n    AccountStatus[\"Nonexist\"] = \"nonexist\";\n    AccountStatus[\"Uninit\"] = \"uninit\";\n    AccountStatus[\"Active\"] = \"active\";\n    AccountStatus[\"Frozen\"] = \"frozen\";\n})(AccountStatus || (exports.AccountStatus = AccountStatus = {}));\n/** @example \"TransOrd\" */\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[\"TransOrd\"] = \"TransOrd\";\n    TransactionType[\"TransTickTock\"] = \"TransTickTock\";\n    TransactionType[\"TransSplitPrepare\"] = \"TransSplitPrepare\";\n    TransactionType[\"TransSplitInstall\"] = \"TransSplitInstall\";\n    TransactionType[\"TransMergePrepare\"] = \"TransMergePrepare\";\n    TransactionType[\"TransMergeInstall\"] = \"TransMergeInstall\";\n    TransactionType[\"TransStorage\"] = \"TransStorage\";\n})(TransactionType || (exports.TransactionType = TransactionType = {}));\n/** @example \"acst_unchanged\" */\nvar AccStatusChange;\n(function (AccStatusChange) {\n    AccStatusChange[\"AcstUnchanged\"] = \"acst_unchanged\";\n    AccStatusChange[\"AcstFrozen\"] = \"acst_frozen\";\n    AccStatusChange[\"AcstDeleted\"] = \"acst_deleted\";\n})(AccStatusChange || (exports.AccStatusChange = AccStatusChange = {}));\n/** @example \"cskip_no_state\" */\nvar ComputeSkipReason;\n(function (ComputeSkipReason) {\n    ComputeSkipReason[\"CskipNoState\"] = \"cskip_no_state\";\n    ComputeSkipReason[\"CskipBadState\"] = \"cskip_bad_state\";\n    ComputeSkipReason[\"CskipNoGas\"] = \"cskip_no_gas\";\n})(ComputeSkipReason || (exports.ComputeSkipReason = ComputeSkipReason = {}));\n/** @example \"cskip_no_state\" */\nvar BouncePhaseType;\n(function (BouncePhaseType) {\n    BouncePhaseType[\"TrPhaseBounceNegfunds\"] = \"TrPhaseBounceNegfunds\";\n    BouncePhaseType[\"TrPhaseBounceNofunds\"] = \"TrPhaseBounceNofunds\";\n    BouncePhaseType[\"TrPhaseBounceOk\"] = \"TrPhaseBounceOk\";\n})(BouncePhaseType || (exports.BouncePhaseType = BouncePhaseType = {}));\nvar JettonVerificationType;\n(function (JettonVerificationType) {\n    JettonVerificationType[\"Whitelist\"] = \"whitelist\";\n    JettonVerificationType[\"Blacklist\"] = \"blacklist\";\n    JettonVerificationType[\"None\"] = \"none\";\n})(JettonVerificationType || (exports.JettonVerificationType = JettonVerificationType = {}));\n/** @example \"whitelist\" */\nvar TrustType;\n(function (TrustType) {\n    TrustType[\"Whitelist\"] = \"whitelist\";\n    TrustType[\"Blacklist\"] = \"blacklist\";\n    TrustType[\"None\"] = \"none\";\n})(TrustType || (exports.TrustType = TrustType = {}));\nvar PoolImplementationType;\n(function (PoolImplementationType) {\n    PoolImplementationType[\"Whales\"] = \"whales\";\n    PoolImplementationType[\"Tf\"] = \"tf\";\n    PoolImplementationType[\"LiquidTF\"] = \"liquidTF\";\n})(PoolImplementationType || (exports.PoolImplementationType = PoolImplementationType = {}));\nvar ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n    ContentType[\"Text\"] = \"text/plain\";\n})(ContentType || (exports.ContentType = ContentType = {}));\nclass HttpClient {\n    baseUrl = \"https://tonapi.io\";\n    securityData = null;\n    securityWorker;\n    abortControllers = new Map();\n    customFetch = (...fetchParams) => fetch(...fetchParams);\n    baseApiParams = {\n        credentials: \"same-origin\",\n        headers: {},\n        redirect: \"follow\",\n        referrerPolicy: \"no-referrer\",\n    };\n    constructor(apiConfig = {}) {\n        Object.assign(this, apiConfig);\n    }\n    setSecurityData = (data) => {\n        this.securityData = data;\n    };\n    encodeQueryParam(key, value) {\n        const encodedKey = encodeURIComponent(key);\n        return `${encodedKey}=${encodeURIComponent(typeof value === \"number\" ? value : `${value}`)}`;\n    }\n    addQueryParam(query, key) {\n        return this.encodeQueryParam(key, query[key]);\n    }\n    addArrayQueryParam(query, key) {\n        const value = query[key];\n        return value.map((v) => this.encodeQueryParam(key, v)).join(\"&\");\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => (Array.isArray(query[key]) ? this.addArrayQueryParam(query, key) : this.addQueryParam(query, key)))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    contentFormatters = {\n        [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n        [ContentType.Text]: (input) => (input !== null && typeof input !== \"string\" ? JSON.stringify(input) : input),\n        [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((formData, key) => {\n            const property = input[key];\n            formData.append(key, property instanceof Blob\n                ? property\n                : typeof property === \"object\" && property !== null\n                    ? JSON.stringify(property)\n                    : `${property}`);\n            return formData;\n        }, new FormData()),\n        [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n    };\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n    createAbortSignal = (cancelToken) => {\n        if (this.abortControllers.has(cancelToken)) {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                return abortController.signal;\n            }\n            return void 0;\n        }\n        const abortController = new AbortController();\n        this.abortControllers.set(cancelToken, abortController);\n        return abortController.signal;\n    };\n    abortRequest = (cancelToken) => {\n        const abortController = this.abortControllers.get(cancelToken);\n        if (abortController) {\n            abortController.abort();\n            this.abortControllers.delete(cancelToken);\n        }\n    };\n    request = async ({ body, secure, path, type, query, format, baseUrl, cancelToken, ...params }) => {\n        const secureParams = ((typeof secure === \"boolean\" ? secure : this.baseApiParams.secure) &&\n            this.securityWorker &&\n            (await this.securityWorker(this.securityData))) ||\n            {};\n        const requestParams = this.mergeRequestParams(params, secureParams);\n        const queryString = query && this.toQueryString(query);\n        const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n        const responseFormat = format || requestParams.format;\n        return this.customFetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n            ...requestParams,\n            headers: {\n                ...(requestParams.headers || {}),\n                ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n            },\n            signal: (cancelToken ? this.createAbortSignal(cancelToken) : requestParams.signal) || null,\n            body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n        }).then(async (response) => {\n            const r = response;\n            r.data = null;\n            r.error = null;\n            const data = !responseFormat\n                ? r\n                : await response[responseFormat]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n            if (cancelToken) {\n                this.abortControllers.delete(cancelToken);\n            }\n            if (!response.ok)\n                throw data;\n            return data.data;\n        });\n    };\n}\nexports.HttpClient = HttpClient;\n/**\n * @title REST api to TON blockchain explorer\n * @version 2.0.0\n * @baseUrl https://tonapi.io\n * @contact Support <support@tonkeeper.com>\n *\n * Provide access to indexed TON blockchain\n */\nclass Api {\n    http;\n    constructor(http) {\n        this.http = http;\n    }\n    blockchain = {\n        /**\n         * @description Status\n         *\n         * @tags Blockchain\n         * @name Status\n         * @request GET:/v2/status\n         */\n        status: (params = {}) => this.http.request({\n            path: `/v2/status`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get blockchain block data\n         *\n         * @tags Blockchain\n         * @name GetBlockchainBlock\n         * @request GET:/v2/blockchain/blocks/{block_id}\n         */\n        getBlockchainBlock: (blockId, params = {}) => this.http.request({\n            path: `/v2/blockchain/blocks/${blockId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get blockchain block shards\n         *\n         * @tags Blockchain\n         * @name GetBlockchainMasterchainShards\n         * @request GET:/v2/blockchain/masterchain/{masterchain_seqno}/shards\n         */\n        getBlockchainMasterchainShards: (masterchainSeqno, params = {}) => this.http.request({\n            path: `/v2/blockchain/masterchain/${masterchainSeqno}/shards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get all blocks in all shards and workchains between target and previous masterchain block according to shards last blocks snapshot in masterchain.  We don't recommend to build your app around this method because it has problem with scalability and will work very slow in the future.\n         *\n         * @tags Blockchain\n         * @name GetBlockchainMasterchainBlocks\n         * @request GET:/v2/blockchain/masterchain/{masterchain_seqno}/blocks\n         */\n        getBlockchainMasterchainBlocks: (masterchainSeqno, params = {}) => this.http.request({\n            path: `/v2/blockchain/masterchain/${masterchainSeqno}/blocks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get all transactions in all shards and workchains between target and previous masterchain block according to shards last blocks snapshot in masterchain. We don't recommend to build your app around this method because it has problem with scalability and will work very slow in the future.\n         *\n         * @tags Blockchain\n         * @name GetBlockchainMasterchainTransactions\n         * @request GET:/v2/blockchain/masterchain/{masterchain_seqno}/transactions\n         */\n        getBlockchainMasterchainTransactions: (masterchainSeqno, params = {}) => this.http.request({\n            path: `/v2/blockchain/masterchain/${masterchainSeqno}/transactions`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get blockchain config from a specific block, if present.\n         *\n         * @tags Blockchain\n         * @name GetBlockchainConfigFromBlock\n         * @request GET:/v2/blockchain/masterchain/{masterchain_seqno}/config\n         */\n        getBlockchainConfigFromBlock: (masterchainSeqno, params = {}) => this.http.request({\n            path: `/v2/blockchain/masterchain/${masterchainSeqno}/config`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw blockchain config from a specific block, if present.\n         *\n         * @tags Blockchain\n         * @name GetRawBlockchainConfigFromBlock\n         * @request GET:/v2/blockchain/masterchain/{masterchain_seqno}/config/raw\n         */\n        getRawBlockchainConfigFromBlock: (masterchainSeqno, params = {}) => this.http.request({\n            path: `/v2/blockchain/masterchain/${masterchainSeqno}/config/raw`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get transactions from block\n         *\n         * @tags Blockchain\n         * @name GetBlockchainBlockTransactions\n         * @request GET:/v2/blockchain/blocks/{block_id}/transactions\n         */\n        getBlockchainBlockTransactions: (blockId, params = {}) => this.http.request({\n            path: `/v2/blockchain/blocks/${blockId}/transactions`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get transaction data\n         *\n         * @tags Blockchain\n         * @name GetBlockchainTransaction\n         * @request GET:/v2/blockchain/transactions/{transaction_id}\n         */\n        getBlockchainTransaction: (transactionId, params = {}) => this.http.request({\n            path: `/v2/blockchain/transactions/${transactionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get transaction data by message hash\n         *\n         * @tags Blockchain\n         * @name GetBlockchainTransactionByMessageHash\n         * @request GET:/v2/blockchain/messages/{msg_id}/transaction\n         */\n        getBlockchainTransactionByMessageHash: (msgId, params = {}) => this.http.request({\n            path: `/v2/blockchain/messages/${msgId}/transaction`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get blockchain validators\n         *\n         * @tags Blockchain\n         * @name GetBlockchainValidators\n         * @request GET:/v2/blockchain/validators\n         */\n        getBlockchainValidators: (params = {}) => this.http.request({\n            path: `/v2/blockchain/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get last known masterchain block\n         *\n         * @tags Blockchain\n         * @name GetBlockchainMasterchainHead\n         * @request GET:/v2/blockchain/masterchain-head\n         */\n        getBlockchainMasterchainHead: (params = {}) => this.http.request({\n            path: `/v2/blockchain/masterchain-head`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get low-level information about an account taken directly from the blockchain.\n         *\n         * @tags Blockchain\n         * @name GetBlockchainRawAccount\n         * @request GET:/v2/blockchain/accounts/{account_id}\n         */\n        getBlockchainRawAccount: (accountId, params = {}) => this.http.request({\n            path: `/v2/blockchain/accounts/${accountId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get account transactions\n         *\n         * @tags Blockchain\n         * @name GetBlockchainAccountTransactions\n         * @request GET:/v2/blockchain/accounts/{account_id}/transactions\n         */\n        getBlockchainAccountTransactions: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/blockchain/accounts/${accountId}/transactions`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Execute get method for account\n         *\n         * @tags Blockchain\n         * @name ExecGetMethodForBlockchainAccount\n         * @request GET:/v2/blockchain/accounts/{account_id}/methods/{method_name}\n         */\n        execGetMethodForBlockchainAccount: (accountId, methodName, query, params = {}) => this.http.request({\n            path: `/v2/blockchain/accounts/${accountId}/methods/${methodName}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Send message to blockchain\n         *\n         * @tags Blockchain\n         * @name SendBlockchainMessage\n         * @request POST:/v2/blockchain/message\n         */\n        sendBlockchainMessage: (data, params = {}) => this.http.request({\n            path: `/v2/blockchain/message`,\n            method: \"POST\",\n            body: data,\n            ...params,\n        }),\n        /**\n         * @description Get blockchain config\n         *\n         * @tags Blockchain\n         * @name GetBlockchainConfig\n         * @request GET:/v2/blockchain/config\n         */\n        getBlockchainConfig: (params = {}) => this.http.request({\n            path: `/v2/blockchain/config`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw blockchain config\n         *\n         * @tags Blockchain\n         * @name GetRawBlockchainConfig\n         * @request GET:/v2/blockchain/config/raw\n         */\n        getRawBlockchainConfig: (params = {}) => this.http.request({\n            path: `/v2/blockchain/config/raw`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Blockchain account inspect\n         *\n         * @tags Blockchain\n         * @name BlockchainAccountInspect\n         * @request GET:/v2/blockchain/accounts/{account_id}/inspect\n         */\n        blockchainAccountInspect: (accountId, params = {}) => this.http.request({\n            path: `/v2/blockchain/accounts/${accountId}/inspect`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n    emulation = {\n        /**\n         * @description Decode a given message. Only external incoming messages can be decoded currently.\n         *\n         * @tags Emulation\n         * @name DecodeMessage\n         * @request POST:/v2/message/decode\n         */\n        decodeMessage: (data, params = {}) => this.http.request({\n            path: `/v2/message/decode`,\n            method: \"POST\",\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Emulate sending message to blockchain\n         *\n         * @tags Emulation\n         * @name EmulateMessageToEvent\n         * @request POST:/v2/events/emulate\n         */\n        emulateMessageToEvent: (data, query, params = {}) => this.http.request({\n            path: `/v2/events/emulate`,\n            method: \"POST\",\n            query: query,\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Emulate sending message to blockchain\n         *\n         * @tags Emulation\n         * @name EmulateMessageToTrace\n         * @request POST:/v2/traces/emulate\n         */\n        emulateMessageToTrace: (data, query, params = {}) => this.http.request({\n            path: `/v2/traces/emulate`,\n            method: \"POST\",\n            query: query,\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Emulate sending message to blockchain\n         *\n         * @tags Emulation\n         * @name EmulateMessageToWallet\n         * @request POST:/v2/wallet/emulate\n         */\n        emulateMessageToWallet: (data, params = {}) => this.http.request({\n            path: `/v2/wallet/emulate`,\n            method: \"POST\",\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Emulate sending message to blockchain\n         *\n         * @tags Emulation\n         * @name EmulateMessageToAccountEvent\n         * @request POST:/v2/accounts/{account_id}/events/emulate\n         */\n        emulateMessageToAccountEvent: (accountId, data, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/events/emulate`,\n            method: \"POST\",\n            query: query,\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    accounts = {\n        /**\n         * @description parse address and display in all formats\n         *\n         * @tags Accounts\n         * @name AddressParse\n         * @request GET:/v2/address/{account_id}/parse\n         */\n        addressParse: (accountId, params = {}) => this.http.request({\n            path: `/v2/address/${accountId}/parse`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get human-friendly information about several accounts without low-level details.\n         *\n         * @tags Accounts\n         * @name GetAccounts\n         * @request POST:/v2/accounts/_bulk\n         */\n        getAccounts: (data, params = {}) => this.http.request({\n            path: `/v2/accounts/_bulk`,\n            method: \"POST\",\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get human-friendly information about an account without low-level details.\n         *\n         * @tags Accounts\n         * @name GetAccount\n         * @request GET:/v2/accounts/{account_id}\n         */\n        getAccount: (accountId, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get account's domains\n         *\n         * @tags Accounts\n         * @name AccountDnsBackResolve\n         * @request GET:/v2/accounts/{account_id}/dns/backresolve\n         */\n        accountDnsBackResolve: (accountId, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/dns/backresolve`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get all Jettons balances by owner address\n         *\n         * @tags Accounts\n         * @name GetAccountJettonsBalances\n         * @request GET:/v2/accounts/{account_id}/jettons\n         */\n        getAccountJettonsBalances: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/jettons`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get the transfer jettons history for account\n         *\n         * @tags Accounts\n         * @name GetAccountJettonsHistory\n         * @request GET:/v2/accounts/{account_id}/jettons/history\n         */\n        getAccountJettonsHistory: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/jettons/history`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get the transfer jetton history for account and jetton\n         *\n         * @tags Accounts\n         * @name GetAccountJettonHistoryById\n         * @request GET:/v2/accounts/{account_id}/jettons/{jetton_id}/history\n         */\n        getAccountJettonHistoryById: (accountId, jettonId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/jettons/${jettonId}/history`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get all NFT items by owner address\n         *\n         * @tags Accounts\n         * @name GetAccountNftItems\n         * @request GET:/v2/accounts/{account_id}/nfts\n         */\n        getAccountNftItems: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/nfts`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get events for an account. Each event is built on top of a trace which is a series of transactions caused by one inbound message. TonAPI looks for known patterns inside the trace and splits the trace into actions, where a single action represents a meaningful high-level operation like a Jetton Transfer or an NFT Purchase. Actions are expected to be shown to users. It is advised not to build any logic on top of actions because actions can be changed at any time.\n         *\n         * @tags Accounts\n         * @name GetAccountEvents\n         * @request GET:/v2/accounts/{account_id}/events\n         */\n        getAccountEvents: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/events`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get event for an account by event_id\n         *\n         * @tags Accounts\n         * @name GetAccountEvent\n         * @request GET:/v2/accounts/{account_id}/events/{event_id}\n         */\n        getAccountEvent: (accountId, eventId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/events/${eventId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get traces for account\n         *\n         * @tags Accounts\n         * @name GetAccountTraces\n         * @request GET:/v2/accounts/{account_id}/traces\n         */\n        getAccountTraces: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get all subscriptions by wallet address\n         *\n         * @tags Accounts\n         * @name GetAccountSubscriptions\n         * @request GET:/v2/accounts/{account_id}/subscriptions\n         */\n        getAccountSubscriptions: (accountId, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/subscriptions`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Update internal cache for a particular account\n         *\n         * @tags Accounts\n         * @name ReindexAccount\n         * @request POST:/v2/accounts/{account_id}/reindex\n         */\n        reindexAccount: (accountId, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/reindex`,\n            method: \"POST\",\n            ...params,\n        }),\n        /**\n         * @description Search by account domain name\n         *\n         * @tags Accounts\n         * @name SearchAccounts\n         * @request GET:/v2/accounts/search\n         */\n        searchAccounts: (query, params = {}) => this.http.request({\n            path: `/v2/accounts/search`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get expiring account .ton dns\n         *\n         * @tags Accounts\n         * @name GetAccountDnsExpiring\n         * @request GET:/v2/accounts/{account_id}/dns/expiring\n         */\n        getAccountDnsExpiring: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/dns/expiring`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get public key by account id\n         *\n         * @tags Accounts\n         * @name GetAccountPublicKey\n         * @request GET:/v2/accounts/{account_id}/publickey\n         */\n        getAccountPublicKey: (accountId, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/publickey`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get account's balance change\n         *\n         * @tags Accounts\n         * @name GetAccountDiff\n         * @request GET:/v2/accounts/{account_id}/diff\n         */\n        getAccountDiff: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/diff`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    nft = {\n        /**\n         * @description Get the transfer nft history\n         *\n         * @tags NFT\n         * @name GetAccountNftHistory\n         * @request GET:/v2/accounts/{account_id}/nfts/history\n         */\n        getAccountNftHistory: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/accounts/${accountId}/nfts/history`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get NFT collections\n         *\n         * @tags NFT\n         * @name GetNftCollections\n         * @request GET:/v2/nfts/collections\n         */\n        getNftCollections: (query, params = {}) => this.http.request({\n            path: `/v2/nfts/collections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get NFT collection by collection address\n         *\n         * @tags NFT\n         * @name GetNftCollection\n         * @request GET:/v2/nfts/collections/{account_id}\n         */\n        getNftCollection: (accountId, params = {}) => this.http.request({\n            path: `/v2/nfts/collections/${accountId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get NFT items from collection by collection address\n         *\n         * @tags NFT\n         * @name GetItemsFromCollection\n         * @request GET:/v2/nfts/collections/{account_id}/items\n         */\n        getItemsFromCollection: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/nfts/collections/${accountId}/items`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get NFT items by their addresses\n         *\n         * @tags NFT\n         * @name GetNftItemsByAddresses\n         * @request POST:/v2/nfts/_bulk\n         */\n        getNftItemsByAddresses: (data, params = {}) => this.http.request({\n            path: `/v2/nfts/_bulk`,\n            method: \"POST\",\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get NFT item by its address\n         *\n         * @tags NFT\n         * @name GetNftItemByAddress\n         * @request GET:/v2/nfts/{account_id}\n         */\n        getNftItemByAddress: (accountId, params = {}) => this.http.request({\n            path: `/v2/nfts/${accountId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get the transfer nfts history for account\n         *\n         * @tags NFT\n         * @name GetNftHistoryById\n         * @request GET:/v2/nfts/{account_id}/history\n         */\n        getNftHistoryById: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/nfts/${accountId}/history`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    dns = {\n        /**\n         * @description Get full information about domain name\n         *\n         * @tags DNS\n         * @name GetDnsInfo\n         * @request GET:/v2/dns/{domain_name}\n         */\n        getDnsInfo: (domainName, params = {}) => this.http.request({\n            path: `/v2/dns/${domainName}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description DNS resolve for domain name\n         *\n         * @tags DNS\n         * @name DnsResolve\n         * @request GET:/v2/dns/{domain_name}/resolve\n         */\n        dnsResolve: (domainName, params = {}) => this.http.request({\n            path: `/v2/dns/${domainName}/resolve`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get domain bids\n         *\n         * @tags DNS\n         * @name GetDomainBids\n         * @request GET:/v2/dns/{domain_name}/bids\n         */\n        getDomainBids: (domainName, params = {}) => this.http.request({\n            path: `/v2/dns/${domainName}/bids`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get all auctions\n         *\n         * @tags DNS\n         * @name GetAllAuctions\n         * @request GET:/v2/dns/auctions\n         */\n        getAllAuctions: (query, params = {}) => this.http.request({\n            path: `/v2/dns/auctions`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    traces = {\n        /**\n         * @description Get the trace by trace ID or hash of any transaction in trace\n         *\n         * @tags Traces\n         * @name GetTrace\n         * @request GET:/v2/traces/{trace_id}\n         */\n        getTrace: (traceId, params = {}) => this.http.request({\n            path: `/v2/traces/${traceId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n    events = {\n        /**\n         * @description Get an event either by event ID or a hash of any transaction in a trace. An event is built on top of a trace which is a series of transactions caused by one inbound message. TonAPI looks for known patterns inside the trace and splits the trace into actions, where a single action represents a meaningful high-level operation like a Jetton Transfer or an NFT Purchase. Actions are expected to be shown to users. It is advised not to build any logic on top of actions because actions can be changed at any time.\n         *\n         * @tags Events\n         * @name GetEvent\n         * @request GET:/v2/events/{event_id}\n         */\n        getEvent: (eventId, params = {}) => this.http.request({\n            path: `/v2/events/${eventId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n    inscriptions = {\n        /**\n         * @description Get all inscriptions by owner address. It's experimental API and can be dropped in the future.\n         *\n         * @tags Inscriptions\n         * @name GetAccountInscriptions\n         * @request GET:/v2/experimental/accounts/{account_id}/inscriptions\n         */\n        getAccountInscriptions: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/experimental/accounts/${accountId}/inscriptions`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get the transfer inscriptions history for account. It's experimental API and can be dropped in the future.\n         *\n         * @tags Inscriptions\n         * @name GetAccountInscriptionsHistory\n         * @request GET:/v2/experimental/accounts/{account_id}/inscriptions/history\n         */\n        getAccountInscriptionsHistory: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/experimental/accounts/${accountId}/inscriptions/history`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get the transfer inscriptions history for account. It's experimental API and can be dropped in the future.\n         *\n         * @tags Inscriptions\n         * @name GetAccountInscriptionsHistoryByTicker\n         * @request GET:/v2/experimental/accounts/{account_id}/inscriptions/{ticker}/history\n         */\n        getAccountInscriptionsHistoryByTicker: (accountId, ticker, query, params = {}) => this.http.request({\n            path: `/v2/experimental/accounts/${accountId}/inscriptions/${ticker}/history`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description return comment for making operation with inscription. please don't use it if you don't know what you are doing\n         *\n         * @tags Inscriptions\n         * @name GetInscriptionOpTemplate\n         * @request GET:/v2/experimental/inscriptions/op-template\n         */\n        getInscriptionOpTemplate: (query, params = {}) => this.http.request({\n            path: `/v2/experimental/inscriptions/op-template`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    jettons = {\n        /**\n         * @description Get a list of all indexed jetton masters in the blockchain.\n         *\n         * @tags Jettons\n         * @name GetJettons\n         * @request GET:/v2/jettons\n         */\n        getJettons: (query, params = {}) => this.http.request({\n            path: `/v2/jettons`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get jetton metadata by jetton master address\n         *\n         * @tags Jettons\n         * @name GetJettonInfo\n         * @request GET:/v2/jettons/{account_id}\n         */\n        getJettonInfo: (accountId, params = {}) => this.http.request({\n            path: `/v2/jettons/${accountId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get jetton's holders\n         *\n         * @tags Jettons\n         * @name GetJettonHolders\n         * @request GET:/v2/jettons/{account_id}/holders\n         */\n        getJettonHolders: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/jettons/${accountId}/holders`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get only jetton transfers in the event\n         *\n         * @tags Jettons\n         * @name GetJettonsEvents\n         * @request GET:/v2/events/{event_id}/jettons\n         */\n        getJettonsEvents: (eventId, params = {}) => this.http.request({\n            path: `/v2/events/${eventId}/jettons`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n    staking = {\n        /**\n         * @description All pools where account participates\n         *\n         * @tags Staking\n         * @name GetAccountNominatorsPools\n         * @request GET:/v2/staking/nominator/{account_id}/pools\n         */\n        getAccountNominatorsPools: (accountId, params = {}) => this.http.request({\n            path: `/v2/staking/nominator/${accountId}/pools`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Stacking pool info\n         *\n         * @tags Staking\n         * @name GetStakingPoolInfo\n         * @request GET:/v2/staking/pool/{account_id}\n         */\n        getStakingPoolInfo: (accountId, params = {}) => this.http.request({\n            path: `/v2/staking/pool/${accountId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Pool history\n         *\n         * @tags Staking\n         * @name GetStakingPoolHistory\n         * @request GET:/v2/staking/pool/{account_id}/history\n         */\n        getStakingPoolHistory: (accountId, params = {}) => this.http.request({\n            path: `/v2/staking/pool/${accountId}/history`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description All pools available in network\n         *\n         * @tags Staking\n         * @name GetStakingPools\n         * @request GET:/v2/staking/pools\n         */\n        getStakingPools: (query, params = {}) => this.http.request({\n            path: `/v2/staking/pools`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    storage = {\n        /**\n         * @description Get TON storage providers deployed to the blockchain.\n         *\n         * @tags Storage\n         * @name GetStorageProviders\n         * @request GET:/v2/storage/providers\n         */\n        getStorageProviders: (params = {}) => this.http.request({\n            path: `/v2/storage/providers`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n    rates = {\n        /**\n         * @description Get the token price to the currency\n         *\n         * @tags Rates\n         * @name GetRates\n         * @request GET:/v2/rates\n         */\n        getRates: (query, params = {}) => this.http.request({\n            path: `/v2/rates`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get chart by token\n         *\n         * @tags Rates\n         * @name GetChartRates\n         * @request GET:/v2/rates/chart\n         */\n        getChartRates: (query, params = {}) => this.http.request({\n            path: `/v2/rates/chart`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get the TON price from markets\n         *\n         * @tags Rates\n         * @name GetMarketsRates\n         * @request GET:/v2/rates/markets\n         */\n        getMarketsRates: (params = {}) => this.http.request({\n            path: `/v2/rates/markets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n    connect = {\n        /**\n         * @description Get a payload for further token receipt\n         *\n         * @tags Connect\n         * @name GetTonConnectPayload\n         * @request GET:/v2/tonconnect/payload\n         */\n        getTonConnectPayload: (params = {}) => this.http.request({\n            path: `/v2/tonconnect/payload`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get account info by state init\n         *\n         * @tags Connect\n         * @name GetAccountInfoByStateInit\n         * @request POST:/v2/tonconnect/stateinit\n         */\n        getAccountInfoByStateInit: (data, params = {}) => this.http.request({\n            path: `/v2/tonconnect/stateinit`,\n            method: \"POST\",\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n    };\n    wallet = {\n        /**\n         * @description Get backup info\n         *\n         * @tags Wallet\n         * @name GetWalletBackup\n         * @request GET:/v2/wallet/backup\n         */\n        getWalletBackup: (params = {}) => this.http.request({\n            path: `/v2/wallet/backup`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Set backup info\n         *\n         * @tags Wallet\n         * @name SetWalletBackup\n         * @request PUT:/v2/wallet/backup\n         */\n        setWalletBackup: (data, params = {}) => this.http.request({\n            path: `/v2/wallet/backup`,\n            method: \"PUT\",\n            body: data,\n            ...params,\n        }),\n        /**\n         * @description Account verification and token issuance\n         *\n         * @tags Wallet\n         * @name TonConnectProof\n         * @request POST:/v2/wallet/auth/proof\n         */\n        tonConnectProof: (data, params = {}) => this.http.request({\n            path: `/v2/wallet/auth/proof`,\n            method: \"POST\",\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get wallets by public key\n         *\n         * @tags Wallet\n         * @name GetWalletsByPublicKey\n         * @request GET:/v2/pubkeys/{public_key}/wallets\n         */\n        getWalletsByPublicKey: (publicKey, params = {}) => this.http.request({\n            path: `/v2/pubkeys/${publicKey}/wallets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get account seqno\n         *\n         * @tags Wallet\n         * @name GetAccountSeqno\n         * @request GET:/v2/wallet/{account_id}/seqno\n         */\n        getAccountSeqno: (accountId, params = {}) => this.http.request({\n            path: `/v2/wallet/${accountId}/seqno`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n    liteServer = {\n        /**\n         * @description Get raw masterchain info\n         *\n         * @tags Lite Server\n         * @name GetRawMasterchainInfo\n         * @request GET:/v2/liteserver/get_masterchain_info\n         */\n        getRawMasterchainInfo: (params = {}) => this.http.request({\n            path: `/v2/liteserver/get_masterchain_info`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw masterchain info ext\n         *\n         * @tags Lite Server\n         * @name GetRawMasterchainInfoExt\n         * @request GET:/v2/liteserver/get_masterchain_info_ext\n         */\n        getRawMasterchainInfoExt: (query, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_masterchain_info_ext`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw time\n         *\n         * @tags Lite Server\n         * @name GetRawTime\n         * @request GET:/v2/liteserver/get_time\n         */\n        getRawTime: (params = {}) => this.http.request({\n            path: `/v2/liteserver/get_time`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw blockchain block\n         *\n         * @tags Lite Server\n         * @name GetRawBlockchainBlock\n         * @request GET:/v2/liteserver/get_block/{block_id}\n         */\n        getRawBlockchainBlock: (blockId, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_block/${blockId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw blockchain block state\n         *\n         * @tags Lite Server\n         * @name GetRawBlockchainBlockState\n         * @request GET:/v2/liteserver/get_state/{block_id}\n         */\n        getRawBlockchainBlockState: (blockId, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_state/${blockId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw blockchain block header\n         *\n         * @tags Lite Server\n         * @name GetRawBlockchainBlockHeader\n         * @request GET:/v2/liteserver/get_block_header/{block_id}\n         */\n        getRawBlockchainBlockHeader: (blockId, query, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_block_header/${blockId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Send raw message to blockchain\n         *\n         * @tags Lite Server\n         * @name SendRawMessage\n         * @request POST:/v2/liteserver/send_message\n         */\n        sendRawMessage: (data, params = {}) => this.http.request({\n            path: `/v2/liteserver/send_message`,\n            method: \"POST\",\n            body: data,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw account state\n         *\n         * @tags Lite Server\n         * @name GetRawAccountState\n         * @request GET:/v2/liteserver/get_account_state/{account_id}\n         */\n        getRawAccountState: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_account_state/${accountId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw shard info\n         *\n         * @tags Lite Server\n         * @name GetRawShardInfo\n         * @request GET:/v2/liteserver/get_shard_info/{block_id}\n         */\n        getRawShardInfo: (blockId, query, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_shard_info/${blockId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get all raw shards info\n         *\n         * @tags Lite Server\n         * @name GetAllRawShardsInfo\n         * @request GET:/v2/liteserver/get_all_shards_info/{block_id}\n         */\n        getAllRawShardsInfo: (blockId, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_all_shards_info/${blockId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw transactions\n         *\n         * @tags Lite Server\n         * @name GetRawTransactions\n         * @request GET:/v2/liteserver/get_transactions/{account_id}\n         */\n        getRawTransactions: (accountId, query, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_transactions/${accountId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw list block transactions\n         *\n         * @tags Lite Server\n         * @name GetRawListBlockTransactions\n         * @request GET:/v2/liteserver/list_block_transactions/{block_id}\n         */\n        getRawListBlockTransactions: (blockId, query, params = {}) => this.http.request({\n            path: `/v2/liteserver/list_block_transactions/${blockId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw block proof\n         *\n         * @tags Lite Server\n         * @name GetRawBlockProof\n         * @request GET:/v2/liteserver/get_block_proof\n         */\n        getRawBlockProof: (query, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_block_proof`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw config\n         *\n         * @tags Lite Server\n         * @name GetRawConfig\n         * @request GET:/v2/liteserver/get_config_all/{block_id}\n         */\n        getRawConfig: (blockId, query, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_config_all/${blockId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get raw shard block proof\n         *\n         * @tags Lite Server\n         * @name GetRawShardBlockProof\n         * @request GET:/v2/liteserver/get_shard_block_proof/{block_id}\n         */\n        getRawShardBlockProof: (blockId, params = {}) => this.http.request({\n            path: `/v2/liteserver/get_shard_block_proof/${blockId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n        /**\n         * @description Get out msg queue sizes\n         *\n         * @tags Lite Server\n         * @name GetOutMsgQueueSizes\n         * @request GET:/v2/liteserver/get_out_msg_queue_sizes\n         */\n        getOutMsgQueueSizes: (params = {}) => this.http.request({\n            path: `/v2/liteserver/get_out_msg_queue_sizes`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        }),\n    };\n}\nexports.Api = Api;\n","!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define([],r):\"object\"==typeof exports?exports[\"tonweb-mnemonic\"]=r():(e.TonWeb=e.TonWeb||{},e.TonWeb.mnemonic=r())}(self,(function(){return(()=>{var e={780:(e,r,t)=>{!function(e){\"use strict\";var r=function(e){var r,t=new Float64Array(16);if(e)for(r=0;r<e.length;r++)t[r]=e[r];return t},a=function(){throw new Error(\"no PRNG\")},n=new Uint8Array(16),o=new Uint8Array(32);o[0]=9;var i=r(),s=r([1]),l=r([56129,1]),c=r([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),u=r([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),h=r([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),f=r([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),d=r([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function p(e,r,t,a){e[r]=t>>24&255,e[r+1]=t>>16&255,e[r+2]=t>>8&255,e[r+3]=255&t,e[r+4]=a>>24&255,e[r+5]=a>>16&255,e[r+6]=a>>8&255,e[r+7]=255&a}function y(e,r,t,a,n){var o,i=0;for(o=0;o<n;o++)i|=e[r+o]^t[a+o];return(1&i-1>>>8)-1}function g(e,r,t,a){return y(e,r,t,a,16)}function m(e,r,t,a){return y(e,r,t,a,32)}function b(e,r,t,a){!function(e,r,t,a){for(var n,o=255&a[0]|(255&a[1])<<8|(255&a[2])<<16|(255&a[3])<<24,i=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,s=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,l=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,c=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,u=255&a[4]|(255&a[5])<<8|(255&a[6])<<16|(255&a[7])<<24,h=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,f=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,d=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,p=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,y=255&a[8]|(255&a[9])<<8|(255&a[10])<<16|(255&a[11])<<24,g=255&t[16]|(255&t[17])<<8|(255&t[18])<<16|(255&t[19])<<24,m=255&t[20]|(255&t[21])<<8|(255&t[22])<<16|(255&t[23])<<24,b=255&t[24]|(255&t[25])<<8|(255&t[26])<<16|(255&t[27])<<24,w=255&t[28]|(255&t[29])<<8|(255&t[30])<<16|(255&t[31])<<24,v=255&a[12]|(255&a[13])<<8|(255&a[14])<<16|(255&a[15])<<24,k=o,x=i,A=s,_=l,U=c,E=u,M=h,z=f,j=d,S=p,B=y,T=g,K=m,P=b,Y=w,q=v,L=0;L<20;L+=2)k^=(n=(K^=(n=(j^=(n=(U^=(n=k+K|0)<<7|n>>>25)+k|0)<<9|n>>>23)+U|0)<<13|n>>>19)+j|0)<<18|n>>>14,E^=(n=(x^=(n=(P^=(n=(S^=(n=E+x|0)<<7|n>>>25)+E|0)<<9|n>>>23)+S|0)<<13|n>>>19)+P|0)<<18|n>>>14,B^=(n=(M^=(n=(A^=(n=(Y^=(n=B+M|0)<<7|n>>>25)+B|0)<<9|n>>>23)+Y|0)<<13|n>>>19)+A|0)<<18|n>>>14,q^=(n=(T^=(n=(z^=(n=(_^=(n=q+T|0)<<7|n>>>25)+q|0)<<9|n>>>23)+_|0)<<13|n>>>19)+z|0)<<18|n>>>14,k^=(n=(_^=(n=(A^=(n=(x^=(n=k+_|0)<<7|n>>>25)+k|0)<<9|n>>>23)+x|0)<<13|n>>>19)+A|0)<<18|n>>>14,E^=(n=(U^=(n=(z^=(n=(M^=(n=E+U|0)<<7|n>>>25)+E|0)<<9|n>>>23)+M|0)<<13|n>>>19)+z|0)<<18|n>>>14,B^=(n=(S^=(n=(j^=(n=(T^=(n=B+S|0)<<7|n>>>25)+B|0)<<9|n>>>23)+T|0)<<13|n>>>19)+j|0)<<18|n>>>14,q^=(n=(Y^=(n=(P^=(n=(K^=(n=q+Y|0)<<7|n>>>25)+q|0)<<9|n>>>23)+K|0)<<13|n>>>19)+P|0)<<18|n>>>14;k=k+o|0,x=x+i|0,A=A+s|0,_=_+l|0,U=U+c|0,E=E+u|0,M=M+h|0,z=z+f|0,j=j+d|0,S=S+p|0,B=B+y|0,T=T+g|0,K=K+m|0,P=P+b|0,Y=Y+w|0,q=q+v|0,e[0]=k>>>0&255,e[1]=k>>>8&255,e[2]=k>>>16&255,e[3]=k>>>24&255,e[4]=x>>>0&255,e[5]=x>>>8&255,e[6]=x>>>16&255,e[7]=x>>>24&255,e[8]=A>>>0&255,e[9]=A>>>8&255,e[10]=A>>>16&255,e[11]=A>>>24&255,e[12]=_>>>0&255,e[13]=_>>>8&255,e[14]=_>>>16&255,e[15]=_>>>24&255,e[16]=U>>>0&255,e[17]=U>>>8&255,e[18]=U>>>16&255,e[19]=U>>>24&255,e[20]=E>>>0&255,e[21]=E>>>8&255,e[22]=E>>>16&255,e[23]=E>>>24&255,e[24]=M>>>0&255,e[25]=M>>>8&255,e[26]=M>>>16&255,e[27]=M>>>24&255,e[28]=z>>>0&255,e[29]=z>>>8&255,e[30]=z>>>16&255,e[31]=z>>>24&255,e[32]=j>>>0&255,e[33]=j>>>8&255,e[34]=j>>>16&255,e[35]=j>>>24&255,e[36]=S>>>0&255,e[37]=S>>>8&255,e[38]=S>>>16&255,e[39]=S>>>24&255,e[40]=B>>>0&255,e[41]=B>>>8&255,e[42]=B>>>16&255,e[43]=B>>>24&255,e[44]=T>>>0&255,e[45]=T>>>8&255,e[46]=T>>>16&255,e[47]=T>>>24&255,e[48]=K>>>0&255,e[49]=K>>>8&255,e[50]=K>>>16&255,e[51]=K>>>24&255,e[52]=P>>>0&255,e[53]=P>>>8&255,e[54]=P>>>16&255,e[55]=P>>>24&255,e[56]=Y>>>0&255,e[57]=Y>>>8&255,e[58]=Y>>>16&255,e[59]=Y>>>24&255,e[60]=q>>>0&255,e[61]=q>>>8&255,e[62]=q>>>16&255,e[63]=q>>>24&255}(e,r,t,a)}function w(e,r,t,a){!function(e,r,t,a){for(var n,o=255&a[0]|(255&a[1])<<8|(255&a[2])<<16|(255&a[3])<<24,i=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,s=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,l=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,c=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,u=255&a[4]|(255&a[5])<<8|(255&a[6])<<16|(255&a[7])<<24,h=255&r[0]|(255&r[1])<<8|(255&r[2])<<16|(255&r[3])<<24,f=255&r[4]|(255&r[5])<<8|(255&r[6])<<16|(255&r[7])<<24,d=255&r[8]|(255&r[9])<<8|(255&r[10])<<16|(255&r[11])<<24,p=255&r[12]|(255&r[13])<<8|(255&r[14])<<16|(255&r[15])<<24,y=255&a[8]|(255&a[9])<<8|(255&a[10])<<16|(255&a[11])<<24,g=255&t[16]|(255&t[17])<<8|(255&t[18])<<16|(255&t[19])<<24,m=255&t[20]|(255&t[21])<<8|(255&t[22])<<16|(255&t[23])<<24,b=255&t[24]|(255&t[25])<<8|(255&t[26])<<16|(255&t[27])<<24,w=255&t[28]|(255&t[29])<<8|(255&t[30])<<16|(255&t[31])<<24,v=255&a[12]|(255&a[13])<<8|(255&a[14])<<16|(255&a[15])<<24,k=0;k<20;k+=2)o^=(n=(m^=(n=(d^=(n=(c^=(n=o+m|0)<<7|n>>>25)+o|0)<<9|n>>>23)+c|0)<<13|n>>>19)+d|0)<<18|n>>>14,u^=(n=(i^=(n=(b^=(n=(p^=(n=u+i|0)<<7|n>>>25)+u|0)<<9|n>>>23)+p|0)<<13|n>>>19)+b|0)<<18|n>>>14,y^=(n=(h^=(n=(s^=(n=(w^=(n=y+h|0)<<7|n>>>25)+y|0)<<9|n>>>23)+w|0)<<13|n>>>19)+s|0)<<18|n>>>14,v^=(n=(g^=(n=(f^=(n=(l^=(n=v+g|0)<<7|n>>>25)+v|0)<<9|n>>>23)+l|0)<<13|n>>>19)+f|0)<<18|n>>>14,o^=(n=(l^=(n=(s^=(n=(i^=(n=o+l|0)<<7|n>>>25)+o|0)<<9|n>>>23)+i|0)<<13|n>>>19)+s|0)<<18|n>>>14,u^=(n=(c^=(n=(f^=(n=(h^=(n=u+c|0)<<7|n>>>25)+u|0)<<9|n>>>23)+h|0)<<13|n>>>19)+f|0)<<18|n>>>14,y^=(n=(p^=(n=(d^=(n=(g^=(n=y+p|0)<<7|n>>>25)+y|0)<<9|n>>>23)+g|0)<<13|n>>>19)+d|0)<<18|n>>>14,v^=(n=(w^=(n=(b^=(n=(m^=(n=v+w|0)<<7|n>>>25)+v|0)<<9|n>>>23)+m|0)<<13|n>>>19)+b|0)<<18|n>>>14;e[0]=o>>>0&255,e[1]=o>>>8&255,e[2]=o>>>16&255,e[3]=o>>>24&255,e[4]=u>>>0&255,e[5]=u>>>8&255,e[6]=u>>>16&255,e[7]=u>>>24&255,e[8]=y>>>0&255,e[9]=y>>>8&255,e[10]=y>>>16&255,e[11]=y>>>24&255,e[12]=v>>>0&255,e[13]=v>>>8&255,e[14]=v>>>16&255,e[15]=v>>>24&255,e[16]=h>>>0&255,e[17]=h>>>8&255,e[18]=h>>>16&255,e[19]=h>>>24&255,e[20]=f>>>0&255,e[21]=f>>>8&255,e[22]=f>>>16&255,e[23]=f>>>24&255,e[24]=d>>>0&255,e[25]=d>>>8&255,e[26]=d>>>16&255,e[27]=d>>>24&255,e[28]=p>>>0&255,e[29]=p>>>8&255,e[30]=p>>>16&255,e[31]=p>>>24&255}(e,r,t,a)}var v=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function k(e,r,t,a,n,o,i){var s,l,c=new Uint8Array(16),u=new Uint8Array(64);for(l=0;l<16;l++)c[l]=0;for(l=0;l<8;l++)c[l]=o[l];for(;n>=64;){for(b(u,c,i,v),l=0;l<64;l++)e[r+l]=t[a+l]^u[l];for(s=1,l=8;l<16;l++)s=s+(255&c[l])|0,c[l]=255&s,s>>>=8;n-=64,r+=64,a+=64}if(n>0)for(b(u,c,i,v),l=0;l<n;l++)e[r+l]=t[a+l]^u[l];return 0}function x(e,r,t,a,n){var o,i,s=new Uint8Array(16),l=new Uint8Array(64);for(i=0;i<16;i++)s[i]=0;for(i=0;i<8;i++)s[i]=a[i];for(;t>=64;){for(b(l,s,n,v),i=0;i<64;i++)e[r+i]=l[i];for(o=1,i=8;i<16;i++)o=o+(255&s[i])|0,s[i]=255&o,o>>>=8;t-=64,r+=64}if(t>0)for(b(l,s,n,v),i=0;i<t;i++)e[r+i]=l[i];return 0}function A(e,r,t,a,n){var o=new Uint8Array(32);w(o,a,n,v);for(var i=new Uint8Array(8),s=0;s<8;s++)i[s]=a[s+16];return x(e,r,t,i,o)}function _(e,r,t,a,n,o,i){var s=new Uint8Array(32);w(s,o,i,v);for(var l=new Uint8Array(8),c=0;c<8;c++)l[c]=o[c+16];return k(e,r,t,a,n,l,s)}var U=function(e){var r,t,a,n,o,i,s,l;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,r=255&e[0]|(255&e[1])<<8,this.r[0]=8191&r,t=255&e[2]|(255&e[3])<<8,this.r[1]=8191&(r>>>13|t<<3),a=255&e[4]|(255&e[5])<<8,this.r[2]=7939&(t>>>10|a<<6),n=255&e[6]|(255&e[7])<<8,this.r[3]=8191&(a>>>7|n<<9),o=255&e[8]|(255&e[9])<<8,this.r[4]=255&(n>>>4|o<<12),this.r[5]=o>>>1&8190,i=255&e[10]|(255&e[11])<<8,this.r[6]=8191&(o>>>14|i<<2),s=255&e[12]|(255&e[13])<<8,this.r[7]=8065&(i>>>11|s<<5),l=255&e[14]|(255&e[15])<<8,this.r[8]=8191&(s>>>8|l<<8),this.r[9]=l>>>5&127,this.pad[0]=255&e[16]|(255&e[17])<<8,this.pad[1]=255&e[18]|(255&e[19])<<8,this.pad[2]=255&e[20]|(255&e[21])<<8,this.pad[3]=255&e[22]|(255&e[23])<<8,this.pad[4]=255&e[24]|(255&e[25])<<8,this.pad[5]=255&e[26]|(255&e[27])<<8,this.pad[6]=255&e[28]|(255&e[29])<<8,this.pad[7]=255&e[30]|(255&e[31])<<8};function E(e,r,t,a,n,o){var i=new U(o);return i.update(t,a,n),i.finish(e,r),0}function M(e,r,t,a,n,o){var i=new Uint8Array(16);return E(i,0,t,a,n,o),g(e,r,i,0)}function z(e,r,t,a,n){var o;if(t<32)return-1;for(_(e,0,r,0,t,a,n),E(e,16,e,32,t-32,e),o=0;o<16;o++)e[o]=0;return 0}function j(e,r,t,a,n){var o,i=new Uint8Array(32);if(t<32)return-1;if(A(i,0,32,a,n),0!==M(r,16,r,32,t-32,i))return-1;for(_(e,0,r,0,t,a,n),o=0;o<32;o++)e[o]=0;return 0}function S(e,r){var t;for(t=0;t<16;t++)e[t]=0|r[t]}function B(e){var r,t,a=1;for(r=0;r<16;r++)t=e[r]+a+65535,a=Math.floor(t/65536),e[r]=t-65536*a;e[0]+=a-1+37*(a-1)}function T(e,r,t){for(var a,n=~(t-1),o=0;o<16;o++)a=n&(e[o]^r[o]),e[o]^=a,r[o]^=a}function K(e,t){var a,n,o,i=r(),s=r();for(a=0;a<16;a++)s[a]=t[a];for(B(s),B(s),B(s),n=0;n<2;n++){for(i[0]=s[0]-65517,a=1;a<15;a++)i[a]=s[a]-65535-(i[a-1]>>16&1),i[a-1]&=65535;i[15]=s[15]-32767-(i[14]>>16&1),o=i[15]>>16&1,i[14]&=65535,T(s,i,1-o)}for(a=0;a<16;a++)e[2*a]=255&s[a],e[2*a+1]=s[a]>>8}function P(e,r){var t=new Uint8Array(32),a=new Uint8Array(32);return K(t,e),K(a,r),m(t,0,a,0)}function Y(e){var r=new Uint8Array(32);return K(r,e),1&r[0]}function q(e,r){var t;for(t=0;t<16;t++)e[t]=r[2*t]+(r[2*t+1]<<8);e[15]&=32767}function L(e,r,t){for(var a=0;a<16;a++)e[a]=r[a]+t[a]}function O(e,r,t){for(var a=0;a<16;a++)e[a]=r[a]-t[a]}function R(e,r,t){var a,n,o=0,i=0,s=0,l=0,c=0,u=0,h=0,f=0,d=0,p=0,y=0,g=0,m=0,b=0,w=0,v=0,k=0,x=0,A=0,_=0,U=0,E=0,M=0,z=0,j=0,S=0,B=0,T=0,K=0,P=0,Y=0,q=t[0],L=t[1],O=t[2],R=t[3],N=t[4],C=t[5],F=t[6],I=t[7],Z=t[8],D=t[9],G=t[10],H=t[11],V=t[12],W=t[13],X=t[14],$=t[15];o+=(a=r[0])*q,i+=a*L,s+=a*O,l+=a*R,c+=a*N,u+=a*C,h+=a*F,f+=a*I,d+=a*Z,p+=a*D,y+=a*G,g+=a*H,m+=a*V,b+=a*W,w+=a*X,v+=a*$,i+=(a=r[1])*q,s+=a*L,l+=a*O,c+=a*R,u+=a*N,h+=a*C,f+=a*F,d+=a*I,p+=a*Z,y+=a*D,g+=a*G,m+=a*H,b+=a*V,w+=a*W,v+=a*X,k+=a*$,s+=(a=r[2])*q,l+=a*L,c+=a*O,u+=a*R,h+=a*N,f+=a*C,d+=a*F,p+=a*I,y+=a*Z,g+=a*D,m+=a*G,b+=a*H,w+=a*V,v+=a*W,k+=a*X,x+=a*$,l+=(a=r[3])*q,c+=a*L,u+=a*O,h+=a*R,f+=a*N,d+=a*C,p+=a*F,y+=a*I,g+=a*Z,m+=a*D,b+=a*G,w+=a*H,v+=a*V,k+=a*W,x+=a*X,A+=a*$,c+=(a=r[4])*q,u+=a*L,h+=a*O,f+=a*R,d+=a*N,p+=a*C,y+=a*F,g+=a*I,m+=a*Z,b+=a*D,w+=a*G,v+=a*H,k+=a*V,x+=a*W,A+=a*X,_+=a*$,u+=(a=r[5])*q,h+=a*L,f+=a*O,d+=a*R,p+=a*N,y+=a*C,g+=a*F,m+=a*I,b+=a*Z,w+=a*D,v+=a*G,k+=a*H,x+=a*V,A+=a*W,_+=a*X,U+=a*$,h+=(a=r[6])*q,f+=a*L,d+=a*O,p+=a*R,y+=a*N,g+=a*C,m+=a*F,b+=a*I,w+=a*Z,v+=a*D,k+=a*G,x+=a*H,A+=a*V,_+=a*W,U+=a*X,E+=a*$,f+=(a=r[7])*q,d+=a*L,p+=a*O,y+=a*R,g+=a*N,m+=a*C,b+=a*F,w+=a*I,v+=a*Z,k+=a*D,x+=a*G,A+=a*H,_+=a*V,U+=a*W,E+=a*X,M+=a*$,d+=(a=r[8])*q,p+=a*L,y+=a*O,g+=a*R,m+=a*N,b+=a*C,w+=a*F,v+=a*I,k+=a*Z,x+=a*D,A+=a*G,_+=a*H,U+=a*V,E+=a*W,M+=a*X,z+=a*$,p+=(a=r[9])*q,y+=a*L,g+=a*O,m+=a*R,b+=a*N,w+=a*C,v+=a*F,k+=a*I,x+=a*Z,A+=a*D,_+=a*G,U+=a*H,E+=a*V,M+=a*W,z+=a*X,j+=a*$,y+=(a=r[10])*q,g+=a*L,m+=a*O,b+=a*R,w+=a*N,v+=a*C,k+=a*F,x+=a*I,A+=a*Z,_+=a*D,U+=a*G,E+=a*H,M+=a*V,z+=a*W,j+=a*X,S+=a*$,g+=(a=r[11])*q,m+=a*L,b+=a*O,w+=a*R,v+=a*N,k+=a*C,x+=a*F,A+=a*I,_+=a*Z,U+=a*D,E+=a*G,M+=a*H,z+=a*V,j+=a*W,S+=a*X,B+=a*$,m+=(a=r[12])*q,b+=a*L,w+=a*O,v+=a*R,k+=a*N,x+=a*C,A+=a*F,_+=a*I,U+=a*Z,E+=a*D,M+=a*G,z+=a*H,j+=a*V,S+=a*W,B+=a*X,T+=a*$,b+=(a=r[13])*q,w+=a*L,v+=a*O,k+=a*R,x+=a*N,A+=a*C,_+=a*F,U+=a*I,E+=a*Z,M+=a*D,z+=a*G,j+=a*H,S+=a*V,B+=a*W,T+=a*X,K+=a*$,w+=(a=r[14])*q,v+=a*L,k+=a*O,x+=a*R,A+=a*N,_+=a*C,U+=a*F,E+=a*I,M+=a*Z,z+=a*D,j+=a*G,S+=a*H,B+=a*V,T+=a*W,K+=a*X,P+=a*$,v+=(a=r[15])*q,i+=38*(x+=a*O),s+=38*(A+=a*R),l+=38*(_+=a*N),c+=38*(U+=a*C),u+=38*(E+=a*F),h+=38*(M+=a*I),f+=38*(z+=a*Z),d+=38*(j+=a*D),p+=38*(S+=a*G),y+=38*(B+=a*H),g+=38*(T+=a*V),m+=38*(K+=a*W),b+=38*(P+=a*X),w+=38*(Y+=a*$),o=(a=(o+=38*(k+=a*L))+(n=1)+65535)-65536*(n=Math.floor(a/65536)),i=(a=i+n+65535)-65536*(n=Math.floor(a/65536)),s=(a=s+n+65535)-65536*(n=Math.floor(a/65536)),l=(a=l+n+65535)-65536*(n=Math.floor(a/65536)),c=(a=c+n+65535)-65536*(n=Math.floor(a/65536)),u=(a=u+n+65535)-65536*(n=Math.floor(a/65536)),h=(a=h+n+65535)-65536*(n=Math.floor(a/65536)),f=(a=f+n+65535)-65536*(n=Math.floor(a/65536)),d=(a=d+n+65535)-65536*(n=Math.floor(a/65536)),p=(a=p+n+65535)-65536*(n=Math.floor(a/65536)),y=(a=y+n+65535)-65536*(n=Math.floor(a/65536)),g=(a=g+n+65535)-65536*(n=Math.floor(a/65536)),m=(a=m+n+65535)-65536*(n=Math.floor(a/65536)),b=(a=b+n+65535)-65536*(n=Math.floor(a/65536)),w=(a=w+n+65535)-65536*(n=Math.floor(a/65536)),v=(a=v+n+65535)-65536*(n=Math.floor(a/65536)),o=(a=(o+=n-1+37*(n-1))+(n=1)+65535)-65536*(n=Math.floor(a/65536)),i=(a=i+n+65535)-65536*(n=Math.floor(a/65536)),s=(a=s+n+65535)-65536*(n=Math.floor(a/65536)),l=(a=l+n+65535)-65536*(n=Math.floor(a/65536)),c=(a=c+n+65535)-65536*(n=Math.floor(a/65536)),u=(a=u+n+65535)-65536*(n=Math.floor(a/65536)),h=(a=h+n+65535)-65536*(n=Math.floor(a/65536)),f=(a=f+n+65535)-65536*(n=Math.floor(a/65536)),d=(a=d+n+65535)-65536*(n=Math.floor(a/65536)),p=(a=p+n+65535)-65536*(n=Math.floor(a/65536)),y=(a=y+n+65535)-65536*(n=Math.floor(a/65536)),g=(a=g+n+65535)-65536*(n=Math.floor(a/65536)),m=(a=m+n+65535)-65536*(n=Math.floor(a/65536)),b=(a=b+n+65535)-65536*(n=Math.floor(a/65536)),w=(a=w+n+65535)-65536*(n=Math.floor(a/65536)),v=(a=v+n+65535)-65536*(n=Math.floor(a/65536)),o+=n-1+37*(n-1),e[0]=o,e[1]=i,e[2]=s,e[3]=l,e[4]=c,e[5]=u,e[6]=h,e[7]=f,e[8]=d,e[9]=p,e[10]=y,e[11]=g,e[12]=m,e[13]=b,e[14]=w,e[15]=v}function N(e,r){R(e,r,r)}function C(e,t){var a,n=r();for(a=0;a<16;a++)n[a]=t[a];for(a=253;a>=0;a--)N(n,n),2!==a&&4!==a&&R(n,n,t);for(a=0;a<16;a++)e[a]=n[a]}function F(e,t){var a,n=r();for(a=0;a<16;a++)n[a]=t[a];for(a=250;a>=0;a--)N(n,n),1!==a&&R(n,n,t);for(a=0;a<16;a++)e[a]=n[a]}function I(e,t,a){var n,o,i=new Uint8Array(32),s=new Float64Array(80),c=r(),u=r(),h=r(),f=r(),d=r(),p=r();for(o=0;o<31;o++)i[o]=t[o];for(i[31]=127&t[31]|64,i[0]&=248,q(s,a),o=0;o<16;o++)u[o]=s[o],f[o]=c[o]=h[o]=0;for(c[0]=f[0]=1,o=254;o>=0;--o)T(c,u,n=i[o>>>3]>>>(7&o)&1),T(h,f,n),L(d,c,h),O(c,c,h),L(h,u,f),O(u,u,f),N(f,d),N(p,c),R(c,h,c),R(h,u,d),L(d,c,h),O(c,c,h),N(u,c),O(h,f,p),R(c,h,l),L(c,c,f),R(h,h,c),R(c,f,p),R(f,u,s),N(u,d),T(c,u,n),T(h,f,n);for(o=0;o<16;o++)s[o+16]=c[o],s[o+32]=h[o],s[o+48]=u[o],s[o+64]=f[o];var y=s.subarray(32),g=s.subarray(16);return C(y,y),R(g,g,y),K(e,g),0}function Z(e,r){return I(e,r,o)}function D(e,r){return a(r,32),Z(e,r)}function G(e,r,t){var a=new Uint8Array(32);return I(a,t,r),w(e,n,a,v)}U.prototype.blocks=function(e,r,t){for(var a,n,o,i,s,l,c,u,h,f,d,p,y,g,m,b,w,v,k,x=this.fin?0:2048,A=this.h[0],_=this.h[1],U=this.h[2],E=this.h[3],M=this.h[4],z=this.h[5],j=this.h[6],S=this.h[7],B=this.h[8],T=this.h[9],K=this.r[0],P=this.r[1],Y=this.r[2],q=this.r[3],L=this.r[4],O=this.r[5],R=this.r[6],N=this.r[7],C=this.r[8],F=this.r[9];t>=16;)f=h=0,f+=(A+=8191&(a=255&e[r+0]|(255&e[r+1])<<8))*K,f+=(_+=8191&(a>>>13|(n=255&e[r+2]|(255&e[r+3])<<8)<<3))*(5*F),f+=(U+=8191&(n>>>10|(o=255&e[r+4]|(255&e[r+5])<<8)<<6))*(5*C),f+=(E+=8191&(o>>>7|(i=255&e[r+6]|(255&e[r+7])<<8)<<9))*(5*N),h=(f+=(M+=8191&(i>>>4|(s=255&e[r+8]|(255&e[r+9])<<8)<<12))*(5*R))>>>13,f&=8191,f+=(z+=s>>>1&8191)*(5*O),f+=(j+=8191&(s>>>14|(l=255&e[r+10]|(255&e[r+11])<<8)<<2))*(5*L),f+=(S+=8191&(l>>>11|(c=255&e[r+12]|(255&e[r+13])<<8)<<5))*(5*q),f+=(B+=8191&(c>>>8|(u=255&e[r+14]|(255&e[r+15])<<8)<<8))*(5*Y),d=h+=(f+=(T+=u>>>5|x)*(5*P))>>>13,d+=A*P,d+=_*K,d+=U*(5*F),d+=E*(5*C),h=(d+=M*(5*N))>>>13,d&=8191,d+=z*(5*R),d+=j*(5*O),d+=S*(5*L),d+=B*(5*q),h+=(d+=T*(5*Y))>>>13,d&=8191,p=h,p+=A*Y,p+=_*P,p+=U*K,p+=E*(5*F),h=(p+=M*(5*C))>>>13,p&=8191,p+=z*(5*N),p+=j*(5*R),p+=S*(5*O),p+=B*(5*L),y=h+=(p+=T*(5*q))>>>13,y+=A*q,y+=_*Y,y+=U*P,y+=E*K,h=(y+=M*(5*F))>>>13,y&=8191,y+=z*(5*C),y+=j*(5*N),y+=S*(5*R),y+=B*(5*O),g=h+=(y+=T*(5*L))>>>13,g+=A*L,g+=_*q,g+=U*Y,g+=E*P,h=(g+=M*K)>>>13,g&=8191,g+=z*(5*F),g+=j*(5*C),g+=S*(5*N),g+=B*(5*R),m=h+=(g+=T*(5*O))>>>13,m+=A*O,m+=_*L,m+=U*q,m+=E*Y,h=(m+=M*P)>>>13,m&=8191,m+=z*K,m+=j*(5*F),m+=S*(5*C),m+=B*(5*N),b=h+=(m+=T*(5*R))>>>13,b+=A*R,b+=_*O,b+=U*L,b+=E*q,h=(b+=M*Y)>>>13,b&=8191,b+=z*P,b+=j*K,b+=S*(5*F),b+=B*(5*C),w=h+=(b+=T*(5*N))>>>13,w+=A*N,w+=_*R,w+=U*O,w+=E*L,h=(w+=M*q)>>>13,w&=8191,w+=z*Y,w+=j*P,w+=S*K,w+=B*(5*F),v=h+=(w+=T*(5*C))>>>13,v+=A*C,v+=_*N,v+=U*R,v+=E*O,h=(v+=M*L)>>>13,v&=8191,v+=z*q,v+=j*Y,v+=S*P,v+=B*K,k=h+=(v+=T*(5*F))>>>13,k+=A*F,k+=_*C,k+=U*N,k+=E*R,h=(k+=M*O)>>>13,k&=8191,k+=z*L,k+=j*q,k+=S*Y,k+=B*P,A=f=8191&(h=(h=((h+=(k+=T*K)>>>13)<<2)+h|0)+(f&=8191)|0),_=d+=h>>>=13,U=p&=8191,E=y&=8191,M=g&=8191,z=m&=8191,j=b&=8191,S=w&=8191,B=v&=8191,T=k&=8191,r+=16,t-=16;this.h[0]=A,this.h[1]=_,this.h[2]=U,this.h[3]=E,this.h[4]=M,this.h[5]=z,this.h[6]=j,this.h[7]=S,this.h[8]=B,this.h[9]=T},U.prototype.finish=function(e,r){var t,a,n,o,i=new Uint16Array(10);if(this.leftover){for(o=this.leftover,this.buffer[o++]=1;o<16;o++)this.buffer[o]=0;this.fin=1,this.blocks(this.buffer,0,16)}for(t=this.h[1]>>>13,this.h[1]&=8191,o=2;o<10;o++)this.h[o]+=t,t=this.h[o]>>>13,this.h[o]&=8191;for(this.h[0]+=5*t,t=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=t,t=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=t,i[0]=this.h[0]+5,t=i[0]>>>13,i[0]&=8191,o=1;o<10;o++)i[o]=this.h[o]+t,t=i[o]>>>13,i[o]&=8191;for(i[9]-=8192,a=(1^t)-1,o=0;o<10;o++)i[o]&=a;for(a=~a,o=0;o<10;o++)this.h[o]=this.h[o]&a|i[o];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),n=this.h[0]+this.pad[0],this.h[0]=65535&n,o=1;o<8;o++)n=(this.h[o]+this.pad[o]|0)+(n>>>16)|0,this.h[o]=65535&n;e[r+0]=this.h[0]>>>0&255,e[r+1]=this.h[0]>>>8&255,e[r+2]=this.h[1]>>>0&255,e[r+3]=this.h[1]>>>8&255,e[r+4]=this.h[2]>>>0&255,e[r+5]=this.h[2]>>>8&255,e[r+6]=this.h[3]>>>0&255,e[r+7]=this.h[3]>>>8&255,e[r+8]=this.h[4]>>>0&255,e[r+9]=this.h[4]>>>8&255,e[r+10]=this.h[5]>>>0&255,e[r+11]=this.h[5]>>>8&255,e[r+12]=this.h[6]>>>0&255,e[r+13]=this.h[6]>>>8&255,e[r+14]=this.h[7]>>>0&255,e[r+15]=this.h[7]>>>8&255},U.prototype.update=function(e,r,t){var a,n;if(this.leftover){for((n=16-this.leftover)>t&&(n=t),a=0;a<n;a++)this.buffer[this.leftover+a]=e[r+a];if(t-=n,r+=n,this.leftover+=n,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0}if(t>=16&&(n=t-t%16,this.blocks(e,r,n),r+=n,t-=n),t){for(a=0;a<t;a++)this.buffer[this.leftover+a]=e[r+a];this.leftover+=t}};var H=z,V=j,W=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function X(e,r,t,a){for(var n,o,i,s,l,c,u,h,f,d,p,y,g,m,b,w,v,k,x,A,_,U,E,M,z,j,S=new Int32Array(16),B=new Int32Array(16),T=e[0],K=e[1],P=e[2],Y=e[3],q=e[4],L=e[5],O=e[6],R=e[7],N=r[0],C=r[1],F=r[2],I=r[3],Z=r[4],D=r[5],G=r[6],H=r[7],V=0;a>=128;){for(x=0;x<16;x++)A=8*x+V,S[x]=t[A+0]<<24|t[A+1]<<16|t[A+2]<<8|t[A+3],B[x]=t[A+4]<<24|t[A+5]<<16|t[A+6]<<8|t[A+7];for(x=0;x<80;x++)if(n=T,o=K,i=P,s=Y,l=q,c=L,u=O,f=N,d=C,p=F,y=I,g=Z,m=D,b=G,E=65535&(U=H),M=U>>>16,z=65535&(_=R),j=_>>>16,E+=65535&(U=(Z>>>14|q<<18)^(Z>>>18|q<<14)^(q>>>9|Z<<23)),M+=U>>>16,z+=65535&(_=(q>>>14|Z<<18)^(q>>>18|Z<<14)^(Z>>>9|q<<23)),j+=_>>>16,E+=65535&(U=Z&D^~Z&G),M+=U>>>16,z+=65535&(_=q&L^~q&O),j+=_>>>16,E+=65535&(U=W[2*x+1]),M+=U>>>16,z+=65535&(_=W[2*x]),j+=_>>>16,_=S[x%16],M+=(U=B[x%16])>>>16,z+=65535&_,j+=_>>>16,z+=(M+=(E+=65535&U)>>>16)>>>16,E=65535&(U=k=65535&E|M<<16),M=U>>>16,z=65535&(_=v=65535&z|(j+=z>>>16)<<16),j=_>>>16,E+=65535&(U=(N>>>28|T<<4)^(T>>>2|N<<30)^(T>>>7|N<<25)),M+=U>>>16,z+=65535&(_=(T>>>28|N<<4)^(N>>>2|T<<30)^(N>>>7|T<<25)),j+=_>>>16,M+=(U=N&C^N&F^C&F)>>>16,z+=65535&(_=T&K^T&P^K&P),j+=_>>>16,h=65535&(z+=(M+=(E+=65535&U)>>>16)>>>16)|(j+=z>>>16)<<16,w=65535&E|M<<16,E=65535&(U=y),M=U>>>16,z=65535&(_=s),j=_>>>16,M+=(U=k)>>>16,z+=65535&(_=v),j+=_>>>16,K=n,P=o,Y=i,q=s=65535&(z+=(M+=(E+=65535&U)>>>16)>>>16)|(j+=z>>>16)<<16,L=l,O=c,R=u,T=h,C=f,F=d,I=p,Z=y=65535&E|M<<16,D=g,G=m,H=b,N=w,x%16==15)for(A=0;A<16;A++)_=S[A],E=65535&(U=B[A]),M=U>>>16,z=65535&_,j=_>>>16,_=S[(A+9)%16],E+=65535&(U=B[(A+9)%16]),M+=U>>>16,z+=65535&_,j+=_>>>16,v=S[(A+1)%16],E+=65535&(U=((k=B[(A+1)%16])>>>1|v<<31)^(k>>>8|v<<24)^(k>>>7|v<<25)),M+=U>>>16,z+=65535&(_=(v>>>1|k<<31)^(v>>>8|k<<24)^v>>>7),j+=_>>>16,v=S[(A+14)%16],M+=(U=((k=B[(A+14)%16])>>>19|v<<13)^(v>>>29|k<<3)^(k>>>6|v<<26))>>>16,z+=65535&(_=(v>>>19|k<<13)^(k>>>29|v<<3)^v>>>6),j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,S[A]=65535&z|j<<16,B[A]=65535&E|M<<16;E=65535&(U=N),M=U>>>16,z=65535&(_=T),j=_>>>16,_=e[0],M+=(U=r[0])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[0]=T=65535&z|j<<16,r[0]=N=65535&E|M<<16,E=65535&(U=C),M=U>>>16,z=65535&(_=K),j=_>>>16,_=e[1],M+=(U=r[1])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[1]=K=65535&z|j<<16,r[1]=C=65535&E|M<<16,E=65535&(U=F),M=U>>>16,z=65535&(_=P),j=_>>>16,_=e[2],M+=(U=r[2])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[2]=P=65535&z|j<<16,r[2]=F=65535&E|M<<16,E=65535&(U=I),M=U>>>16,z=65535&(_=Y),j=_>>>16,_=e[3],M+=(U=r[3])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[3]=Y=65535&z|j<<16,r[3]=I=65535&E|M<<16,E=65535&(U=Z),M=U>>>16,z=65535&(_=q),j=_>>>16,_=e[4],M+=(U=r[4])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[4]=q=65535&z|j<<16,r[4]=Z=65535&E|M<<16,E=65535&(U=D),M=U>>>16,z=65535&(_=L),j=_>>>16,_=e[5],M+=(U=r[5])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[5]=L=65535&z|j<<16,r[5]=D=65535&E|M<<16,E=65535&(U=G),M=U>>>16,z=65535&(_=O),j=_>>>16,_=e[6],M+=(U=r[6])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[6]=O=65535&z|j<<16,r[6]=G=65535&E|M<<16,E=65535&(U=H),M=U>>>16,z=65535&(_=R),j=_>>>16,_=e[7],M+=(U=r[7])>>>16,z+=65535&_,j+=_>>>16,j+=(z+=(M+=(E+=65535&U)>>>16)>>>16)>>>16,e[7]=R=65535&z|j<<16,r[7]=H=65535&E|M<<16,V+=128,a-=128}return a}function $(e,r,t){var a,n=new Int32Array(8),o=new Int32Array(8),i=new Uint8Array(256),s=t;for(n[0]=1779033703,n[1]=3144134277,n[2]=1013904242,n[3]=2773480762,n[4]=1359893119,n[5]=2600822924,n[6]=528734635,n[7]=1541459225,o[0]=4089235720,o[1]=2227873595,o[2]=4271175723,o[3]=1595750129,o[4]=2917565137,o[5]=725511199,o[6]=4215389547,o[7]=327033209,X(n,o,r,t),t%=128,a=0;a<t;a++)i[a]=r[s-t+a];for(i[t]=128,i[(t=256-128*(t<112?1:0))-9]=0,p(i,t-8,s/536870912|0,s<<3),X(n,o,i,t),a=0;a<8;a++)p(e,8*a,n[a],o[a]);return 0}function J(e,t){var a=r(),n=r(),o=r(),i=r(),s=r(),l=r(),c=r(),h=r(),f=r();O(a,e[1],e[0]),O(f,t[1],t[0]),R(a,a,f),L(n,e[0],e[1]),L(f,t[0],t[1]),R(n,n,f),R(o,e[3],t[3]),R(o,o,u),R(i,e[2],t[2]),L(i,i,i),O(s,n,a),O(l,i,o),L(c,i,o),L(h,n,a),R(e[0],s,l),R(e[1],h,c),R(e[2],c,l),R(e[3],s,h)}function Q(e,r,t){var a;for(a=0;a<4;a++)T(e[a],r[a],t)}function ee(e,t){var a=r(),n=r(),o=r();C(o,t[2]),R(a,t[0],o),R(n,t[1],o),K(e,n),e[31]^=Y(a)<<7}function re(e,r,t){var a,n;for(S(e[0],i),S(e[1],s),S(e[2],s),S(e[3],i),n=255;n>=0;--n)Q(e,r,a=t[n/8|0]>>(7&n)&1),J(r,e),J(e,e),Q(e,r,a)}function te(e,t){var a=[r(),r(),r(),r()];S(a[0],h),S(a[1],f),S(a[2],s),R(a[3],h,f),re(e,a,t)}function ae(e,t,n){var o,i=new Uint8Array(64),s=[r(),r(),r(),r()];for(n||a(t,32),$(i,t,32),i[0]&=248,i[31]&=127,i[31]|=64,te(s,i),ee(e,s),o=0;o<32;o++)t[o+32]=e[o];return 0}var ne=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function oe(e,r){var t,a,n,o;for(a=63;a>=32;--a){for(t=0,n=a-32,o=a-12;n<o;++n)r[n]+=t-16*r[a]*ne[n-(a-32)],t=Math.floor((r[n]+128)/256),r[n]-=256*t;r[n]+=t,r[a]=0}for(t=0,n=0;n<32;n++)r[n]+=t-(r[31]>>4)*ne[n],t=r[n]>>8,r[n]&=255;for(n=0;n<32;n++)r[n]-=t*ne[n];for(a=0;a<32;a++)r[a+1]+=r[a]>>8,e[a]=255&r[a]}function ie(e){var r,t=new Float64Array(64);for(r=0;r<64;r++)t[r]=e[r];for(r=0;r<64;r++)e[r]=0;oe(e,t)}function se(e,t,a,n){var o,i,s=new Uint8Array(64),l=new Uint8Array(64),c=new Uint8Array(64),u=new Float64Array(64),h=[r(),r(),r(),r()];$(s,n,32),s[0]&=248,s[31]&=127,s[31]|=64;var f=a+64;for(o=0;o<a;o++)e[64+o]=t[o];for(o=0;o<32;o++)e[32+o]=s[32+o];for($(c,e.subarray(32),a+32),ie(c),te(h,c),ee(e,h),o=32;o<64;o++)e[o]=n[o];for($(l,e,a+64),ie(l),o=0;o<64;o++)u[o]=0;for(o=0;o<32;o++)u[o]=c[o];for(o=0;o<32;o++)for(i=0;i<32;i++)u[o+i]+=l[o]*s[i];return oe(e.subarray(32),u),f}function le(e,t,a,n){var o,l=new Uint8Array(32),u=new Uint8Array(64),h=[r(),r(),r(),r()],f=[r(),r(),r(),r()];if(a<64)return-1;if(function(e,t){var a=r(),n=r(),o=r(),l=r(),u=r(),h=r(),f=r();return S(e[2],s),q(e[1],t),N(o,e[1]),R(l,o,c),O(o,o,e[2]),L(l,e[2],l),N(u,l),N(h,u),R(f,h,u),R(a,f,o),R(a,a,l),F(a,a),R(a,a,o),R(a,a,l),R(a,a,l),R(e[0],a,l),N(n,e[0]),R(n,n,l),P(n,o)&&R(e[0],e[0],d),N(n,e[0]),R(n,n,l),P(n,o)?-1:(Y(e[0])===t[31]>>7&&O(e[0],i,e[0]),R(e[3],e[0],e[1]),0)}(f,n))return-1;for(o=0;o<a;o++)e[o]=t[o];for(o=0;o<32;o++)e[o+32]=n[o];if($(u,e,a),ie(u),re(h,f,u),te(f,t.subarray(32)),J(h,f),ee(l,h),a-=64,m(t,0,l,0)){for(o=0;o<a;o++)e[o]=0;return-1}for(o=0;o<a;o++)e[o]=t[o+64];return a}var ce,ue=64,he=32,fe=64;function de(e,r){if(32!==e.length)throw new Error(\"bad key size\");if(24!==r.length)throw new Error(\"bad nonce size\")}function pe(){for(var e=0;e<arguments.length;e++)if(!(arguments[e]instanceof Uint8Array))throw new TypeError(\"unexpected type, use Uint8Array\")}function ye(e){for(var r=0;r<e.length;r++)e[r]=0}e.lowlevel={crypto_core_hsalsa20:w,crypto_stream_xor:_,crypto_stream:A,crypto_stream_salsa20_xor:k,crypto_stream_salsa20:x,crypto_onetimeauth:E,crypto_onetimeauth_verify:M,crypto_verify_16:g,crypto_verify_32:m,crypto_secretbox:z,crypto_secretbox_open:j,crypto_scalarmult:I,crypto_scalarmult_base:Z,crypto_box_beforenm:G,crypto_box_afternm:H,crypto_box:function(e,r,t,a,n,o){var i=new Uint8Array(32);return G(i,n,o),H(e,r,t,a,i)},crypto_box_open:function(e,r,t,a,n,o){var i=new Uint8Array(32);return G(i,n,o),V(e,r,t,a,i)},crypto_box_keypair:D,crypto_hash:$,crypto_sign:se,crypto_sign_keypair:ae,crypto_sign_open:le,crypto_secretbox_KEYBYTES:32,crypto_secretbox_NONCEBYTES:24,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:16,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:32,crypto_box_SECRETKEYBYTES:32,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:24,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:ue,crypto_sign_PUBLICKEYBYTES:he,crypto_sign_SECRETKEYBYTES:fe,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:r,D:c,L:ne,pack25519:K,unpack25519:q,M:R,A:L,S:N,Z:O,pow2523:F,add:J,set25519:S,modL:oe,scalarmult:re,scalarbase:te},e.randomBytes=function(e){var r=new Uint8Array(e);return a(r,e),r},e.secretbox=function(e,r,t){pe(e,r,t),de(t,r);for(var a=new Uint8Array(32+e.length),n=new Uint8Array(a.length),o=0;o<e.length;o++)a[o+32]=e[o];return z(n,a,a.length,r,t),n.subarray(16)},e.secretbox.open=function(e,r,t){pe(e,r,t),de(t,r);for(var a=new Uint8Array(16+e.length),n=new Uint8Array(a.length),o=0;o<e.length;o++)a[o+16]=e[o];return a.length<32||0!==j(n,a,a.length,r,t)?null:n.subarray(32)},e.secretbox.keyLength=32,e.secretbox.nonceLength=24,e.secretbox.overheadLength=16,e.scalarMult=function(e,r){if(pe(e,r),32!==e.length)throw new Error(\"bad n size\");if(32!==r.length)throw new Error(\"bad p size\");var t=new Uint8Array(32);return I(t,e,r),t},e.scalarMult.base=function(e){if(pe(e),32!==e.length)throw new Error(\"bad n size\");var r=new Uint8Array(32);return Z(r,e),r},e.scalarMult.scalarLength=32,e.scalarMult.groupElementLength=32,e.box=function(r,t,a,n){var o=e.box.before(a,n);return e.secretbox(r,t,o)},e.box.before=function(e,r){pe(e,r),function(e,r){if(32!==e.length)throw new Error(\"bad public key size\");if(32!==r.length)throw new Error(\"bad secret key size\")}(e,r);var t=new Uint8Array(32);return G(t,e,r),t},e.box.after=e.secretbox,e.box.open=function(r,t,a,n){var o=e.box.before(a,n);return e.secretbox.open(r,t,o)},e.box.open.after=e.secretbox.open,e.box.keyPair=function(){var e=new Uint8Array(32),r=new Uint8Array(32);return D(e,r),{publicKey:e,secretKey:r}},e.box.keyPair.fromSecretKey=function(e){if(pe(e),32!==e.length)throw new Error(\"bad secret key size\");var r=new Uint8Array(32);return Z(r,e),{publicKey:r,secretKey:new Uint8Array(e)}},e.box.publicKeyLength=32,e.box.secretKeyLength=32,e.box.sharedKeyLength=32,e.box.nonceLength=24,e.box.overheadLength=e.secretbox.overheadLength,e.sign=function(e,r){if(pe(e,r),r.length!==fe)throw new Error(\"bad secret key size\");var t=new Uint8Array(ue+e.length);return se(t,e,e.length,r),t},e.sign.open=function(e,r){if(pe(e,r),r.length!==he)throw new Error(\"bad public key size\");var t=new Uint8Array(e.length),a=le(t,e,e.length,r);if(a<0)return null;for(var n=new Uint8Array(a),o=0;o<n.length;o++)n[o]=t[o];return n},e.sign.detached=function(r,t){for(var a=e.sign(r,t),n=new Uint8Array(ue),o=0;o<n.length;o++)n[o]=a[o];return n},e.sign.detached.verify=function(e,r,t){if(pe(e,r,t),r.length!==ue)throw new Error(\"bad signature size\");if(t.length!==he)throw new Error(\"bad public key size\");var a,n=new Uint8Array(ue+e.length),o=new Uint8Array(ue+e.length);for(a=0;a<ue;a++)n[a]=r[a];for(a=0;a<e.length;a++)n[a+ue]=e[a];return le(o,n,n.length,t)>=0},e.sign.keyPair=function(){var e=new Uint8Array(he),r=new Uint8Array(fe);return ae(e,r),{publicKey:e,secretKey:r}},e.sign.keyPair.fromSecretKey=function(e){if(pe(e),e.length!==fe)throw new Error(\"bad secret key size\");for(var r=new Uint8Array(he),t=0;t<r.length;t++)r[t]=e[32+t];return{publicKey:r,secretKey:new Uint8Array(e)}},e.sign.keyPair.fromSeed=function(e){if(pe(e),32!==e.length)throw new Error(\"bad seed size\");for(var r=new Uint8Array(he),t=new Uint8Array(fe),a=0;a<32;a++)t[a]=e[a];return ae(r,t,!0),{publicKey:r,secretKey:t}},e.sign.publicKeyLength=he,e.sign.secretKeyLength=fe,e.sign.seedLength=32,e.sign.signatureLength=ue,e.hash=function(e){pe(e);var r=new Uint8Array(64);return $(r,e,e.length),r},e.hash.hashLength=64,e.verify=function(e,r){return pe(e,r),0!==e.length&&0!==r.length&&e.length===r.length&&0===y(e,0,r,0,e.length)},e.setPRNG=function(e){a=e},(ce=\"undefined\"!=typeof self?self.crypto||self.msCrypto:null)&&ce.getRandomValues?e.setPRNG((function(e,r){var t,a=new Uint8Array(r);for(t=0;t<r;t+=65536)ce.getRandomValues(a.subarray(t,t+Math.min(r-t,65536)));for(t=0;t<r;t++)e[t]=a[t];ye(a)})):(ce=t(24))&&ce.randomBytes&&e.setPRNG((function(e,r){var t,a=ce.randomBytes(r);for(t=0;t<r;t++)e[t]=a[t];ye(a)}))}(e.exports?e.exports:self.nacl=self.nacl||{})},24:()=>{}},r={};function t(a){var n=r[a];if(void 0!==n)return n.exports;var o=r[a]={exports:{}};return e[a](o,o.exports,t),o.exports}t.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return t.d(r,{a:r}),r},t.d=(e,r)=>{for(var a in r)t.o(r,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:r[a]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),t.r=e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})};var a={};return(()=>{\"use strict\";t.r(a),t.d(a,{KeyPair:()=>e.KeyPair,generateMnemonic:()=>h,isPasswordNeeded:()=>u,mnemonicToKeyPair:()=>y,mnemonicToSeed:()=>p,validateMnemonic:()=>g,wordlists:()=>r});var e={};t.r(e),t.d(e,{I:()=>y});var r={};t.r(r),t.d(r,{EN:()=>o,default:()=>o,english:()=>o});const n=self.crypto,o=[\"abandon\",\"ability\",\"able\",\"about\",\"above\",\"absent\",\"absorb\",\"abstract\",\"absurd\",\"abuse\",\"access\",\"accident\",\"account\",\"accuse\",\"achieve\",\"acid\",\"acoustic\",\"acquire\",\"across\",\"act\",\"action\",\"actor\",\"actress\",\"actual\",\"adapt\",\"add\",\"addict\",\"address\",\"adjust\",\"admit\",\"adult\",\"advance\",\"advice\",\"aerobic\",\"affair\",\"afford\",\"afraid\",\"again\",\"age\",\"agent\",\"agree\",\"ahead\",\"aim\",\"air\",\"airport\",\"aisle\",\"alarm\",\"album\",\"alcohol\",\"alert\",\"alien\",\"all\",\"alley\",\"allow\",\"almost\",\"alone\",\"alpha\",\"already\",\"also\",\"alter\",\"always\",\"amateur\",\"amazing\",\"among\",\"amount\",\"amused\",\"analyst\",\"anchor\",\"ancient\",\"anger\",\"angle\",\"angry\",\"animal\",\"ankle\",\"announce\",\"annual\",\"another\",\"answer\",\"antenna\",\"antique\",\"anxiety\",\"any\",\"apart\",\"apology\",\"appear\",\"apple\",\"approve\",\"april\",\"arch\",\"arctic\",\"area\",\"arena\",\"argue\",\"arm\",\"armed\",\"armor\",\"army\",\"around\",\"arrange\",\"arrest\",\"arrive\",\"arrow\",\"art\",\"artefact\",\"artist\",\"artwork\",\"ask\",\"aspect\",\"assault\",\"asset\",\"assist\",\"assume\",\"asthma\",\"athlete\",\"atom\",\"attack\",\"attend\",\"attitude\",\"attract\",\"auction\",\"audit\",\"august\",\"aunt\",\"author\",\"auto\",\"autumn\",\"average\",\"avocado\",\"avoid\",\"awake\",\"aware\",\"away\",\"awesome\",\"awful\",\"awkward\",\"axis\",\"baby\",\"bachelor\",\"bacon\",\"badge\",\"bag\",\"balance\",\"balcony\",\"ball\",\"bamboo\",\"banana\",\"banner\",\"bar\",\"barely\",\"bargain\",\"barrel\",\"base\",\"basic\",\"basket\",\"battle\",\"beach\",\"bean\",\"beauty\",\"because\",\"become\",\"beef\",\"before\",\"begin\",\"behave\",\"behind\",\"believe\",\"below\",\"belt\",\"bench\",\"benefit\",\"best\",\"betray\",\"better\",\"between\",\"beyond\",\"bicycle\",\"bid\",\"bike\",\"bind\",\"biology\",\"bird\",\"birth\",\"bitter\",\"black\",\"blade\",\"blame\",\"blanket\",\"blast\",\"bleak\",\"bless\",\"blind\",\"blood\",\"blossom\",\"blouse\",\"blue\",\"blur\",\"blush\",\"board\",\"boat\",\"body\",\"boil\",\"bomb\",\"bone\",\"bonus\",\"book\",\"boost\",\"border\",\"boring\",\"borrow\",\"boss\",\"bottom\",\"bounce\",\"box\",\"boy\",\"bracket\",\"brain\",\"brand\",\"brass\",\"brave\",\"bread\",\"breeze\",\"brick\",\"bridge\",\"brief\",\"bright\",\"bring\",\"brisk\",\"broccoli\",\"broken\",\"bronze\",\"broom\",\"brother\",\"brown\",\"brush\",\"bubble\",\"buddy\",\"budget\",\"buffalo\",\"build\",\"bulb\",\"bulk\",\"bullet\",\"bundle\",\"bunker\",\"burden\",\"burger\",\"burst\",\"bus\",\"business\",\"busy\",\"butter\",\"buyer\",\"buzz\",\"cabbage\",\"cabin\",\"cable\",\"cactus\",\"cage\",\"cake\",\"call\",\"calm\",\"camera\",\"camp\",\"can\",\"canal\",\"cancel\",\"candy\",\"cannon\",\"canoe\",\"canvas\",\"canyon\",\"capable\",\"capital\",\"captain\",\"car\",\"carbon\",\"card\",\"cargo\",\"carpet\",\"carry\",\"cart\",\"case\",\"cash\",\"casino\",\"castle\",\"casual\",\"cat\",\"catalog\",\"catch\",\"category\",\"cattle\",\"caught\",\"cause\",\"caution\",\"cave\",\"ceiling\",\"celery\",\"cement\",\"census\",\"century\",\"cereal\",\"certain\",\"chair\",\"chalk\",\"champion\",\"change\",\"chaos\",\"chapter\",\"charge\",\"chase\",\"chat\",\"cheap\",\"check\",\"cheese\",\"chef\",\"cherry\",\"chest\",\"chicken\",\"chief\",\"child\",\"chimney\",\"choice\",\"choose\",\"chronic\",\"chuckle\",\"chunk\",\"churn\",\"cigar\",\"cinnamon\",\"circle\",\"citizen\",\"city\",\"civil\",\"claim\",\"clap\",\"clarify\",\"claw\",\"clay\",\"clean\",\"clerk\",\"clever\",\"click\",\"client\",\"cliff\",\"climb\",\"clinic\",\"clip\",\"clock\",\"clog\",\"close\",\"cloth\",\"cloud\",\"clown\",\"club\",\"clump\",\"cluster\",\"clutch\",\"coach\",\"coast\",\"coconut\",\"code\",\"coffee\",\"coil\",\"coin\",\"collect\",\"color\",\"column\",\"combine\",\"come\",\"comfort\",\"comic\",\"common\",\"company\",\"concert\",\"conduct\",\"confirm\",\"congress\",\"connect\",\"consider\",\"control\",\"convince\",\"cook\",\"cool\",\"copper\",\"copy\",\"coral\",\"core\",\"corn\",\"correct\",\"cost\",\"cotton\",\"couch\",\"country\",\"couple\",\"course\",\"cousin\",\"cover\",\"coyote\",\"crack\",\"cradle\",\"craft\",\"cram\",\"crane\",\"crash\",\"crater\",\"crawl\",\"crazy\",\"cream\",\"credit\",\"creek\",\"crew\",\"cricket\",\"crime\",\"crisp\",\"critic\",\"crop\",\"cross\",\"crouch\",\"crowd\",\"crucial\",\"cruel\",\"cruise\",\"crumble\",\"crunch\",\"crush\",\"cry\",\"crystal\",\"cube\",\"culture\",\"cup\",\"cupboard\",\"curious\",\"current\",\"curtain\",\"curve\",\"cushion\",\"custom\",\"cute\",\"cycle\",\"dad\",\"damage\",\"damp\",\"dance\",\"danger\",\"daring\",\"dash\",\"daughter\",\"dawn\",\"day\",\"deal\",\"debate\",\"debris\",\"decade\",\"december\",\"decide\",\"decline\",\"decorate\",\"decrease\",\"deer\",\"defense\",\"define\",\"defy\",\"degree\",\"delay\",\"deliver\",\"demand\",\"demise\",\"denial\",\"dentist\",\"deny\",\"depart\",\"depend\",\"deposit\",\"depth\",\"deputy\",\"derive\",\"describe\",\"desert\",\"design\",\"desk\",\"despair\",\"destroy\",\"detail\",\"detect\",\"develop\",\"device\",\"devote\",\"diagram\",\"dial\",\"diamond\",\"diary\",\"dice\",\"diesel\",\"diet\",\"differ\",\"digital\",\"dignity\",\"dilemma\",\"dinner\",\"dinosaur\",\"direct\",\"dirt\",\"disagree\",\"discover\",\"disease\",\"dish\",\"dismiss\",\"disorder\",\"display\",\"distance\",\"divert\",\"divide\",\"divorce\",\"dizzy\",\"doctor\",\"document\",\"dog\",\"doll\",\"dolphin\",\"domain\",\"donate\",\"donkey\",\"donor\",\"door\",\"dose\",\"double\",\"dove\",\"draft\",\"dragon\",\"drama\",\"drastic\",\"draw\",\"dream\",\"dress\",\"drift\",\"drill\",\"drink\",\"drip\",\"drive\",\"drop\",\"drum\",\"dry\",\"duck\",\"dumb\",\"dune\",\"during\",\"dust\",\"dutch\",\"duty\",\"dwarf\",\"dynamic\",\"eager\",\"eagle\",\"early\",\"earn\",\"earth\",\"easily\",\"east\",\"easy\",\"echo\",\"ecology\",\"economy\",\"edge\",\"edit\",\"educate\",\"effort\",\"egg\",\"eight\",\"either\",\"elbow\",\"elder\",\"electric\",\"elegant\",\"element\",\"elephant\",\"elevator\",\"elite\",\"else\",\"embark\",\"embody\",\"embrace\",\"emerge\",\"emotion\",\"employ\",\"empower\",\"empty\",\"enable\",\"enact\",\"end\",\"endless\",\"endorse\",\"enemy\",\"energy\",\"enforce\",\"engage\",\"engine\",\"enhance\",\"enjoy\",\"enlist\",\"enough\",\"enrich\",\"enroll\",\"ensure\",\"enter\",\"entire\",\"entry\",\"envelope\",\"episode\",\"equal\",\"equip\",\"era\",\"erase\",\"erode\",\"erosion\",\"error\",\"erupt\",\"escape\",\"essay\",\"essence\",\"estate\",\"eternal\",\"ethics\",\"evidence\",\"evil\",\"evoke\",\"evolve\",\"exact\",\"example\",\"excess\",\"exchange\",\"excite\",\"exclude\",\"excuse\",\"execute\",\"exercise\",\"exhaust\",\"exhibit\",\"exile\",\"exist\",\"exit\",\"exotic\",\"expand\",\"expect\",\"expire\",\"explain\",\"expose\",\"express\",\"extend\",\"extra\",\"eye\",\"eyebrow\",\"fabric\",\"face\",\"faculty\",\"fade\",\"faint\",\"faith\",\"fall\",\"false\",\"fame\",\"family\",\"famous\",\"fan\",\"fancy\",\"fantasy\",\"farm\",\"fashion\",\"fat\",\"fatal\",\"father\",\"fatigue\",\"fault\",\"favorite\",\"feature\",\"february\",\"federal\",\"fee\",\"feed\",\"feel\",\"female\",\"fence\",\"festival\",\"fetch\",\"fever\",\"few\",\"fiber\",\"fiction\",\"field\",\"figure\",\"file\",\"film\",\"filter\",\"final\",\"find\",\"fine\",\"finger\",\"finish\",\"fire\",\"firm\",\"first\",\"fiscal\",\"fish\",\"fit\",\"fitness\",\"fix\",\"flag\",\"flame\",\"flash\",\"flat\",\"flavor\",\"flee\",\"flight\",\"flip\",\"float\",\"flock\",\"floor\",\"flower\",\"fluid\",\"flush\",\"fly\",\"foam\",\"focus\",\"fog\",\"foil\",\"fold\",\"follow\",\"food\",\"foot\",\"force\",\"forest\",\"forget\",\"fork\",\"fortune\",\"forum\",\"forward\",\"fossil\",\"foster\",\"found\",\"fox\",\"fragile\",\"frame\",\"frequent\",\"fresh\",\"friend\",\"fringe\",\"frog\",\"front\",\"frost\",\"frown\",\"frozen\",\"fruit\",\"fuel\",\"fun\",\"funny\",\"furnace\",\"fury\",\"future\",\"gadget\",\"gain\",\"galaxy\",\"gallery\",\"game\",\"gap\",\"garage\",\"garbage\",\"garden\",\"garlic\",\"garment\",\"gas\",\"gasp\",\"gate\",\"gather\",\"gauge\",\"gaze\",\"general\",\"genius\",\"genre\",\"gentle\",\"genuine\",\"gesture\",\"ghost\",\"giant\",\"gift\",\"giggle\",\"ginger\",\"giraffe\",\"girl\",\"give\",\"glad\",\"glance\",\"glare\",\"glass\",\"glide\",\"glimpse\",\"globe\",\"gloom\",\"glory\",\"glove\",\"glow\",\"glue\",\"goat\",\"goddess\",\"gold\",\"good\",\"goose\",\"gorilla\",\"gospel\",\"gossip\",\"govern\",\"gown\",\"grab\",\"grace\",\"grain\",\"grant\",\"grape\",\"grass\",\"gravity\",\"great\",\"green\",\"grid\",\"grief\",\"grit\",\"grocery\",\"group\",\"grow\",\"grunt\",\"guard\",\"guess\",\"guide\",\"guilt\",\"guitar\",\"gun\",\"gym\",\"habit\",\"hair\",\"half\",\"hammer\",\"hamster\",\"hand\",\"happy\",\"harbor\",\"hard\",\"harsh\",\"harvest\",\"hat\",\"have\",\"hawk\",\"hazard\",\"head\",\"health\",\"heart\",\"heavy\",\"hedgehog\",\"height\",\"hello\",\"helmet\",\"help\",\"hen\",\"hero\",\"hidden\",\"high\",\"hill\",\"hint\",\"hip\",\"hire\",\"history\",\"hobby\",\"hockey\",\"hold\",\"hole\",\"holiday\",\"hollow\",\"home\",\"honey\",\"hood\",\"hope\",\"horn\",\"horror\",\"horse\",\"hospital\",\"host\",\"hotel\",\"hour\",\"hover\",\"hub\",\"huge\",\"human\",\"humble\",\"humor\",\"hundred\",\"hungry\",\"hunt\",\"hurdle\",\"hurry\",\"hurt\",\"husband\",\"hybrid\",\"ice\",\"icon\",\"idea\",\"identify\",\"idle\",\"ignore\",\"ill\",\"illegal\",\"illness\",\"image\",\"imitate\",\"immense\",\"immune\",\"impact\",\"impose\",\"improve\",\"impulse\",\"inch\",\"include\",\"income\",\"increase\",\"index\",\"indicate\",\"indoor\",\"industry\",\"infant\",\"inflict\",\"inform\",\"inhale\",\"inherit\",\"initial\",\"inject\",\"injury\",\"inmate\",\"inner\",\"innocent\",\"input\",\"inquiry\",\"insane\",\"insect\",\"inside\",\"inspire\",\"install\",\"intact\",\"interest\",\"into\",\"invest\",\"invite\",\"involve\",\"iron\",\"island\",\"isolate\",\"issue\",\"item\",\"ivory\",\"jacket\",\"jaguar\",\"jar\",\"jazz\",\"jealous\",\"jeans\",\"jelly\",\"jewel\",\"job\",\"join\",\"joke\",\"journey\",\"joy\",\"judge\",\"juice\",\"jump\",\"jungle\",\"junior\",\"junk\",\"just\",\"kangaroo\",\"keen\",\"keep\",\"ketchup\",\"key\",\"kick\",\"kid\",\"kidney\",\"kind\",\"kingdom\",\"kiss\",\"kit\",\"kitchen\",\"kite\",\"kitten\",\"kiwi\",\"knee\",\"knife\",\"knock\",\"know\",\"lab\",\"label\",\"labor\",\"ladder\",\"lady\",\"lake\",\"lamp\",\"language\",\"laptop\",\"large\",\"later\",\"latin\",\"laugh\",\"laundry\",\"lava\",\"law\",\"lawn\",\"lawsuit\",\"layer\",\"lazy\",\"leader\",\"leaf\",\"learn\",\"leave\",\"lecture\",\"left\",\"leg\",\"legal\",\"legend\",\"leisure\",\"lemon\",\"lend\",\"length\",\"lens\",\"leopard\",\"lesson\",\"letter\",\"level\",\"liar\",\"liberty\",\"library\",\"license\",\"life\",\"lift\",\"light\",\"like\",\"limb\",\"limit\",\"link\",\"lion\",\"liquid\",\"list\",\"little\",\"live\",\"lizard\",\"load\",\"loan\",\"lobster\",\"local\",\"lock\",\"logic\",\"lonely\",\"long\",\"loop\",\"lottery\",\"loud\",\"lounge\",\"love\",\"loyal\",\"lucky\",\"luggage\",\"lumber\",\"lunar\",\"lunch\",\"luxury\",\"lyrics\",\"machine\",\"mad\",\"magic\",\"magnet\",\"maid\",\"mail\",\"main\",\"major\",\"make\",\"mammal\",\"man\",\"manage\",\"mandate\",\"mango\",\"mansion\",\"manual\",\"maple\",\"marble\",\"march\",\"margin\",\"marine\",\"market\",\"marriage\",\"mask\",\"mass\",\"master\",\"match\",\"material\",\"math\",\"matrix\",\"matter\",\"maximum\",\"maze\",\"meadow\",\"mean\",\"measure\",\"meat\",\"mechanic\",\"medal\",\"media\",\"melody\",\"melt\",\"member\",\"memory\",\"mention\",\"menu\",\"mercy\",\"merge\",\"merit\",\"merry\",\"mesh\",\"message\",\"metal\",\"method\",\"middle\",\"midnight\",\"milk\",\"million\",\"mimic\",\"mind\",\"minimum\",\"minor\",\"minute\",\"miracle\",\"mirror\",\"misery\",\"miss\",\"mistake\",\"mix\",\"mixed\",\"mixture\",\"mobile\",\"model\",\"modify\",\"mom\",\"moment\",\"monitor\",\"monkey\",\"monster\",\"month\",\"moon\",\"moral\",\"more\",\"morning\",\"mosquito\",\"mother\",\"motion\",\"motor\",\"mountain\",\"mouse\",\"move\",\"movie\",\"much\",\"muffin\",\"mule\",\"multiply\",\"muscle\",\"museum\",\"mushroom\",\"music\",\"must\",\"mutual\",\"myself\",\"mystery\",\"myth\",\"naive\",\"name\",\"napkin\",\"narrow\",\"nasty\",\"nation\",\"nature\",\"near\",\"neck\",\"need\",\"negative\",\"neglect\",\"neither\",\"nephew\",\"nerve\",\"nest\",\"net\",\"network\",\"neutral\",\"never\",\"news\",\"next\",\"nice\",\"night\",\"noble\",\"noise\",\"nominee\",\"noodle\",\"normal\",\"north\",\"nose\",\"notable\",\"note\",\"nothing\",\"notice\",\"novel\",\"now\",\"nuclear\",\"number\",\"nurse\",\"nut\",\"oak\",\"obey\",\"object\",\"oblige\",\"obscure\",\"observe\",\"obtain\",\"obvious\",\"occur\",\"ocean\",\"october\",\"odor\",\"off\",\"offer\",\"office\",\"often\",\"oil\",\"okay\",\"old\",\"olive\",\"olympic\",\"omit\",\"once\",\"one\",\"onion\",\"online\",\"only\",\"open\",\"opera\",\"opinion\",\"oppose\",\"option\",\"orange\",\"orbit\",\"orchard\",\"order\",\"ordinary\",\"organ\",\"orient\",\"original\",\"orphan\",\"ostrich\",\"other\",\"outdoor\",\"outer\",\"output\",\"outside\",\"oval\",\"oven\",\"over\",\"own\",\"owner\",\"oxygen\",\"oyster\",\"ozone\",\"pact\",\"paddle\",\"page\",\"pair\",\"palace\",\"palm\",\"panda\",\"panel\",\"panic\",\"panther\",\"paper\",\"parade\",\"parent\",\"park\",\"parrot\",\"party\",\"pass\",\"patch\",\"path\",\"patient\",\"patrol\",\"pattern\",\"pause\",\"pave\",\"payment\",\"peace\",\"peanut\",\"pear\",\"peasant\",\"pelican\",\"pen\",\"penalty\",\"pencil\",\"people\",\"pepper\",\"perfect\",\"permit\",\"person\",\"pet\",\"phone\",\"photo\",\"phrase\",\"physical\",\"piano\",\"picnic\",\"picture\",\"piece\",\"pig\",\"pigeon\",\"pill\",\"pilot\",\"pink\",\"pioneer\",\"pipe\",\"pistol\",\"pitch\",\"pizza\",\"place\",\"planet\",\"plastic\",\"plate\",\"play\",\"please\",\"pledge\",\"pluck\",\"plug\",\"plunge\",\"poem\",\"poet\",\"point\",\"polar\",\"pole\",\"police\",\"pond\",\"pony\",\"pool\",\"popular\",\"portion\",\"position\",\"possible\",\"post\",\"potato\",\"pottery\",\"poverty\",\"powder\",\"power\",\"practice\",\"praise\",\"predict\",\"prefer\",\"prepare\",\"present\",\"pretty\",\"prevent\",\"price\",\"pride\",\"primary\",\"print\",\"priority\",\"prison\",\"private\",\"prize\",\"problem\",\"process\",\"produce\",\"profit\",\"program\",\"project\",\"promote\",\"proof\",\"property\",\"prosper\",\"protect\",\"proud\",\"provide\",\"public\",\"pudding\",\"pull\",\"pulp\",\"pulse\",\"pumpkin\",\"punch\",\"pupil\",\"puppy\",\"purchase\",\"purity\",\"purpose\",\"purse\",\"push\",\"put\",\"puzzle\",\"pyramid\",\"quality\",\"quantum\",\"quarter\",\"question\",\"quick\",\"quit\",\"quiz\",\"quote\",\"rabbit\",\"raccoon\",\"race\",\"rack\",\"radar\",\"radio\",\"rail\",\"rain\",\"raise\",\"rally\",\"ramp\",\"ranch\",\"random\",\"range\",\"rapid\",\"rare\",\"rate\",\"rather\",\"raven\",\"raw\",\"razor\",\"ready\",\"real\",\"reason\",\"rebel\",\"rebuild\",\"recall\",\"receive\",\"recipe\",\"record\",\"recycle\",\"reduce\",\"reflect\",\"reform\",\"refuse\",\"region\",\"regret\",\"regular\",\"reject\",\"relax\",\"release\",\"relief\",\"rely\",\"remain\",\"remember\",\"remind\",\"remove\",\"render\",\"renew\",\"rent\",\"reopen\",\"repair\",\"repeat\",\"replace\",\"report\",\"require\",\"rescue\",\"resemble\",\"resist\",\"resource\",\"response\",\"result\",\"retire\",\"retreat\",\"return\",\"reunion\",\"reveal\",\"review\",\"reward\",\"rhythm\",\"rib\",\"ribbon\",\"rice\",\"rich\",\"ride\",\"ridge\",\"rifle\",\"right\",\"rigid\",\"ring\",\"riot\",\"ripple\",\"risk\",\"ritual\",\"rival\",\"river\",\"road\",\"roast\",\"robot\",\"robust\",\"rocket\",\"romance\",\"roof\",\"rookie\",\"room\",\"rose\",\"rotate\",\"rough\",\"round\",\"route\",\"royal\",\"rubber\",\"rude\",\"rug\",\"rule\",\"run\",\"runway\",\"rural\",\"sad\",\"saddle\",\"sadness\",\"safe\",\"sail\",\"salad\",\"salmon\",\"salon\",\"salt\",\"salute\",\"same\",\"sample\",\"sand\",\"satisfy\",\"satoshi\",\"sauce\",\"sausage\",\"save\",\"say\",\"scale\",\"scan\",\"scare\",\"scatter\",\"scene\",\"scheme\",\"school\",\"science\",\"scissors\",\"scorpion\",\"scout\",\"scrap\",\"screen\",\"script\",\"scrub\",\"sea\",\"search\",\"season\",\"seat\",\"second\",\"secret\",\"section\",\"security\",\"seed\",\"seek\",\"segment\",\"select\",\"sell\",\"seminar\",\"senior\",\"sense\",\"sentence\",\"series\",\"service\",\"session\",\"settle\",\"setup\",\"seven\",\"shadow\",\"shaft\",\"shallow\",\"share\",\"shed\",\"shell\",\"sheriff\",\"shield\",\"shift\",\"shine\",\"ship\",\"shiver\",\"shock\",\"shoe\",\"shoot\",\"shop\",\"short\",\"shoulder\",\"shove\",\"shrimp\",\"shrug\",\"shuffle\",\"shy\",\"sibling\",\"sick\",\"side\",\"siege\",\"sight\",\"sign\",\"silent\",\"silk\",\"silly\",\"silver\",\"similar\",\"simple\",\"since\",\"sing\",\"siren\",\"sister\",\"situate\",\"six\",\"size\",\"skate\",\"sketch\",\"ski\",\"skill\",\"skin\",\"skirt\",\"skull\",\"slab\",\"slam\",\"sleep\",\"slender\",\"slice\",\"slide\",\"slight\",\"slim\",\"slogan\",\"slot\",\"slow\",\"slush\",\"small\",\"smart\",\"smile\",\"smoke\",\"smooth\",\"snack\",\"snake\",\"snap\",\"sniff\",\"snow\",\"soap\",\"soccer\",\"social\",\"sock\",\"soda\",\"soft\",\"solar\",\"soldier\",\"solid\",\"solution\",\"solve\",\"someone\",\"song\",\"soon\",\"sorry\",\"sort\",\"soul\",\"sound\",\"soup\",\"source\",\"south\",\"space\",\"spare\",\"spatial\",\"spawn\",\"speak\",\"special\",\"speed\",\"spell\",\"spend\",\"sphere\",\"spice\",\"spider\",\"spike\",\"spin\",\"spirit\",\"split\",\"spoil\",\"sponsor\",\"spoon\",\"sport\",\"spot\",\"spray\",\"spread\",\"spring\",\"spy\",\"square\",\"squeeze\",\"squirrel\",\"stable\",\"stadium\",\"staff\",\"stage\",\"stairs\",\"stamp\",\"stand\",\"start\",\"state\",\"stay\",\"steak\",\"steel\",\"stem\",\"step\",\"stereo\",\"stick\",\"still\",\"sting\",\"stock\",\"stomach\",\"stone\",\"stool\",\"story\",\"stove\",\"strategy\",\"street\",\"strike\",\"strong\",\"struggle\",\"student\",\"stuff\",\"stumble\",\"style\",\"subject\",\"submit\",\"subway\",\"success\",\"such\",\"sudden\",\"suffer\",\"sugar\",\"suggest\",\"suit\",\"summer\",\"sun\",\"sunny\",\"sunset\",\"super\",\"supply\",\"supreme\",\"sure\",\"surface\",\"surge\",\"surprise\",\"surround\",\"survey\",\"suspect\",\"sustain\",\"swallow\",\"swamp\",\"swap\",\"swarm\",\"swear\",\"sweet\",\"swift\",\"swim\",\"swing\",\"switch\",\"sword\",\"symbol\",\"symptom\",\"syrup\",\"system\",\"table\",\"tackle\",\"tag\",\"tail\",\"talent\",\"talk\",\"tank\",\"tape\",\"target\",\"task\",\"taste\",\"tattoo\",\"taxi\",\"teach\",\"team\",\"tell\",\"ten\",\"tenant\",\"tennis\",\"tent\",\"term\",\"test\",\"text\",\"thank\",\"that\",\"theme\",\"then\",\"theory\",\"there\",\"they\",\"thing\",\"this\",\"thought\",\"three\",\"thrive\",\"throw\",\"thumb\",\"thunder\",\"ticket\",\"tide\",\"tiger\",\"tilt\",\"timber\",\"time\",\"tiny\",\"tip\",\"tired\",\"tissue\",\"title\",\"toast\",\"tobacco\",\"today\",\"toddler\",\"toe\",\"together\",\"toilet\",\"token\",\"tomato\",\"tomorrow\",\"tone\",\"tongue\",\"tonight\",\"tool\",\"tooth\",\"top\",\"topic\",\"topple\",\"torch\",\"tornado\",\"tortoise\",\"toss\",\"total\",\"tourist\",\"toward\",\"tower\",\"town\",\"toy\",\"track\",\"trade\",\"traffic\",\"tragic\",\"train\",\"transfer\",\"trap\",\"trash\",\"travel\",\"tray\",\"treat\",\"tree\",\"trend\",\"trial\",\"tribe\",\"trick\",\"trigger\",\"trim\",\"trip\",\"trophy\",\"trouble\",\"truck\",\"true\",\"truly\",\"trumpet\",\"trust\",\"truth\",\"try\",\"tube\",\"tuition\",\"tumble\",\"tuna\",\"tunnel\",\"turkey\",\"turn\",\"turtle\",\"twelve\",\"twenty\",\"twice\",\"twin\",\"twist\",\"two\",\"type\",\"typical\",\"ugly\",\"umbrella\",\"unable\",\"unaware\",\"uncle\",\"uncover\",\"under\",\"undo\",\"unfair\",\"unfold\",\"unhappy\",\"uniform\",\"unique\",\"unit\",\"universe\",\"unknown\",\"unlock\",\"until\",\"unusual\",\"unveil\",\"update\",\"upgrade\",\"uphold\",\"upon\",\"upper\",\"upset\",\"urban\",\"urge\",\"usage\",\"use\",\"used\",\"useful\",\"useless\",\"usual\",\"utility\",\"vacant\",\"vacuum\",\"vague\",\"valid\",\"valley\",\"valve\",\"van\",\"vanish\",\"vapor\",\"various\",\"vast\",\"vault\",\"vehicle\",\"velvet\",\"vendor\",\"venture\",\"venue\",\"verb\",\"verify\",\"version\",\"very\",\"vessel\",\"veteran\",\"viable\",\"vibrant\",\"vicious\",\"victory\",\"video\",\"view\",\"village\",\"vintage\",\"violin\",\"virtual\",\"virus\",\"visa\",\"visit\",\"visual\",\"vital\",\"vivid\",\"vocal\",\"voice\",\"void\",\"volcano\",\"volume\",\"vote\",\"voyage\",\"wage\",\"wagon\",\"wait\",\"walk\",\"wall\",\"walnut\",\"want\",\"warfare\",\"warm\",\"warrior\",\"wash\",\"wasp\",\"waste\",\"water\",\"wave\",\"way\",\"wealth\",\"weapon\",\"wear\",\"weasel\",\"weather\",\"web\",\"wedding\",\"weekend\",\"weird\",\"welcome\",\"west\",\"wet\",\"whale\",\"what\",\"wheat\",\"wheel\",\"when\",\"where\",\"whip\",\"whisper\",\"wide\",\"width\",\"wife\",\"wild\",\"will\",\"win\",\"window\",\"wine\",\"wing\",\"wink\",\"winner\",\"winter\",\"wire\",\"wisdom\",\"wise\",\"wish\",\"witness\",\"wolf\",\"woman\",\"wonder\",\"wood\",\"wool\",\"word\",\"work\",\"world\",\"worry\",\"worth\",\"wrap\",\"wreck\",\"wrestle\",\"wrist\",\"write\",\"wrong\",\"yard\",\"year\",\"yellow\",\"you\",\"young\",\"youth\",\"zebra\",\"zero\",\"zone\",\"zoo\"];async function i(e){return 0==(await l(e,\"TON seed version\",Math.max(1,Math.floor(390.625))))[0]}async function s(e,r=\"\"){const t=e.join(\" \");return await async function(e,r){const t=c(e).buffer,a=r.length?c(r).buffer:new ArrayBuffer(0),o={name:\"HMAC\",hash:\"SHA-512\"},i=await n.subtle.importKey(\"raw\",t,o,!1,[\"sign\"]);return await n.subtle.sign(o,i,a)}(t,r)}async function l(e,r,t){const a=c(r).buffer,o=await n.subtle.importKey(\"raw\",e,{name:\"PBKDF2\"},!1,[\"deriveBits\"]),i=await n.subtle.deriveBits({name:\"PBKDF2\",hash:\"SHA-512\",salt:a,iterations:t},o,512);return new Uint8Array(i)}function c(e,r=1){let t,a;switch(r){case 1:t=new ArrayBuffer(e.length),a=new Uint8Array(t);break;case 2:t=new ArrayBuffer(2*e.length),a=new Uint16Array(t);break;case 4:t=new ArrayBuffer(4*e.length),a=new Uint32Array(t);break;default:throw new Error(`Incorrect size specified: ${r}`)}for(let r=0,t=e.length;r<t;r++)a[r]=e.charCodeAt(r);return new Uint8Array(a.buffer)}async function u(e){const r=await s(e,\"\");return await async function(e){return 1==(await l(e,\"TON fast seed version\",1))[0]}(r)&&!await i(r)}async function h(e=24,r=\"\",t=o){let a=0,l=[];for(;;){a+=1,l=[];const o=n.getRandomValues(new Uint16Array(e));for(let r=0;r<e;r++)l.push(t[2047&o[r]]);if((!(r.length>0)||await u(l))&&await i(await s(l,r)))break}return l}var f=t(780),d=t.n(f);async function p(e,r=\"\"){const t=await s(e,r);return(await l(t,\"TON default seed\",1e5)).slice(0,32)}async function y(e,r=\"\"){const t=await p(e,r);return d().sign.keyPair.fromSeed(t)}async function g(e,r=\"\",t=o){for(let r of e)if(-1===t.indexOf(r))return!1;return!(r.length>0&&!await u(e))&&await i(await s(e,r))}})(),a})()}));\n//# sourceMappingURL=index.js.map","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n","import nacl from 'tweetnacl-util';\nimport nacl$1 from 'tweetnacl';\n\nvar CONNECT_EVENT_ERROR_CODES;\n(function (CONNECT_EVENT_ERROR_CODES) {\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_NOT_FOUND_ERROR\"] = 2] = \"MANIFEST_NOT_FOUND_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"MANIFEST_CONTENT_ERROR\"] = 3] = \"MANIFEST_CONTENT_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    CONNECT_EVENT_ERROR_CODES[CONNECT_EVENT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_EVENT_ERROR_CODES || (CONNECT_EVENT_ERROR_CODES = {}));\nvar CONNECT_ITEM_ERROR_CODES;\n(function (CONNECT_ITEM_ERROR_CODES) {\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    CONNECT_ITEM_ERROR_CODES[CONNECT_ITEM_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(CONNECT_ITEM_ERROR_CODES || (CONNECT_ITEM_ERROR_CODES = {}));\n\nvar SEND_TRANSACTION_ERROR_CODES;\n(function (SEND_TRANSACTION_ERROR_CODES) {\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SEND_TRANSACTION_ERROR_CODES[SEND_TRANSACTION_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SEND_TRANSACTION_ERROR_CODES || (SEND_TRANSACTION_ERROR_CODES = {}));\n\nvar SIGN_DATA_ERROR_CODES;\n(function (SIGN_DATA_ERROR_CODES) {\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"USER_REJECTS_ERROR\"] = 300] = \"USER_REJECTS_ERROR\";\n    SIGN_DATA_ERROR_CODES[SIGN_DATA_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(SIGN_DATA_ERROR_CODES || (SIGN_DATA_ERROR_CODES = {}));\n\nvar DISCONNECT_ERROR_CODES;\n(function (DISCONNECT_ERROR_CODES) {\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_ERROR\"] = 0] = \"UNKNOWN_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"BAD_REQUEST_ERROR\"] = 1] = \"BAD_REQUEST_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"UNKNOWN_APP_ERROR\"] = 100] = \"UNKNOWN_APP_ERROR\";\n    DISCONNECT_ERROR_CODES[DISCONNECT_ERROR_CODES[\"METHOD_NOT_SUPPORTED\"] = 400] = \"METHOD_NOT_SUPPORTED\";\n})(DISCONNECT_ERROR_CODES || (DISCONNECT_ERROR_CODES = {}));\n\nvar CHAIN;\n(function (CHAIN) {\n    CHAIN[\"MAINNET\"] = \"-239\";\n    CHAIN[\"TESTNET\"] = \"-3\";\n})(CHAIN || (CHAIN = {}));\n\nfunction encodeUint8Array(value, urlSafe) {\n    const encoded = nacl.encodeBase64(value);\n    if (!urlSafe) {\n        return encoded;\n    }\n    return encodeURIComponent(encoded);\n}\nfunction decodeToUint8Array(value, urlSafe) {\n    if (urlSafe) {\n        value = decodeURIComponent(value);\n    }\n    return nacl.decodeBase64(value);\n}\nfunction encode(value, urlSafe = false) {\n    let uint8Array;\n    if (value instanceof Uint8Array) {\n        uint8Array = value;\n    }\n    else {\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value);\n        }\n        uint8Array = nacl.decodeUTF8(value);\n    }\n    return encodeUint8Array(uint8Array, urlSafe);\n}\nfunction decode(value, urlSafe = false) {\n    const decodedUint8Array = decodeToUint8Array(value, urlSafe);\n    return {\n        toString() {\n            return nacl.encodeUTF8(decodedUint8Array);\n        },\n        toObject() {\n            try {\n                return JSON.parse(nacl.encodeUTF8(decodedUint8Array));\n            }\n            catch (e) {\n                return null;\n            }\n        },\n        toUint8Array() {\n            return decodedUint8Array;\n        }\n    };\n}\nconst Base64 = {\n    encode,\n    decode\n};\n\nfunction concatUint8Arrays(buffer1, buffer2) {\n    const mergedArray = new Uint8Array(buffer1.length + buffer2.length);\n    mergedArray.set(buffer1);\n    mergedArray.set(buffer2, buffer1.length);\n    return mergedArray;\n}\nfunction splitToUint8Arrays(array, index) {\n    if (index >= array.length) {\n        throw new Error('Index is out of buffer');\n    }\n    const subArray1 = array.slice(0, index);\n    const subArray2 = array.slice(index);\n    return [subArray1, subArray2];\n}\nfunction toHexString(byteArray) {\n    let hexString = '';\n    byteArray.forEach(byte => {\n        hexString += ('0' + (byte & 0xff).toString(16)).slice(-2);\n    });\n    return hexString;\n}\nfunction hexToByteArray(hexString) {\n    if (hexString.length % 2 !== 0) {\n        throw new Error(`Cannot convert ${hexString} to bytesArray`);\n    }\n    const result = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n        result[i / 2] = parseInt(hexString.slice(i, i + 2), 16);\n    }\n    return result;\n}\n\nfunction isNode() {\n    return (typeof process !== 'undefined' && process.versions != null && process.versions.node != null);\n}\n\nclass SessionCrypto {\n    constructor(keyPair) {\n        this.nonceLength = 24;\n        this.keyPair = keyPair ? this.createKeypairFromString(keyPair) : this.createKeypair();\n        this.sessionId = toHexString(this.keyPair.publicKey);\n    }\n    createKeypair() {\n        return nacl$1.box.keyPair();\n    }\n    createKeypairFromString(keyPair) {\n        return {\n            publicKey: hexToByteArray(keyPair.publicKey),\n            secretKey: hexToByteArray(keyPair.secretKey)\n        };\n    }\n    createNonce() {\n        return nacl$1.randomBytes(this.nonceLength);\n    }\n    encrypt(message, receiverPublicKey) {\n        const encodedMessage = new TextEncoder().encode(message);\n        const nonce = this.createNonce();\n        const encrypted = nacl$1.box(encodedMessage, nonce, receiverPublicKey, this.keyPair.secretKey);\n        return concatUint8Arrays(nonce, encrypted);\n    }\n    decrypt(message, senderPublicKey) {\n        const [nonce, internalMessage] = splitToUint8Arrays(message, this.nonceLength);\n        const decrypted = nacl$1.box.open(internalMessage, nonce, senderPublicKey, this.keyPair.secretKey);\n        if (!decrypted) {\n            throw new Error(`Decryption error: \\n message: ${message.toString()} \\n sender pubkey: ${senderPublicKey.toString()} \\n keypair pubkey: ${this.keyPair.publicKey.toString()} \\n keypair secretkey: ${this.keyPair.secretKey.toString()}`);\n        }\n        return new TextDecoder().decode(decrypted);\n    }\n    stringifyKeypair() {\n        return {\n            publicKey: toHexString(this.keyPair.publicKey),\n            secretKey: toHexString(this.keyPair.secretKey)\n        };\n    }\n}\n\nexport { Base64, CHAIN, CONNECT_EVENT_ERROR_CODES, CONNECT_ITEM_ERROR_CODES, DISCONNECT_ERROR_CODES, SEND_TRANSACTION_ERROR_CODES, SIGN_DATA_ERROR_CODES, SessionCrypto, concatUint8Arrays, hexToByteArray, isNode, splitToUint8Arrays, toHexString };\n//# sourceMappingURL=index.mjs.map\n","function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n"],"names":[],"sourceRoot":""}