{"version":3,"file":"src_util_createPostMessageInterface_ts-src_util_decimals_ts-src_util_random_ts.382fb0ce2eabaeee6524.js","mappings":"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","sources":["webpack://mytonwallet/./src/lib/big.js/index.js","webpack://mytonwallet/./src/util/createPostMessageInterface.ts","webpack://mytonwallet/./src/util/decimals.ts","webpack://mytonwallet/./src/util/ledger/tab.ts","webpack://mytonwallet/./src/util/random.ts"],"sourcesContent":["/*\n *  big.js v6.2.1\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2022 Michael Mclaughlin\n *  https://github.com/MikeMcl/big.js/LICENCE.md\n */\n\n\n/************************************** EDITABLE DEFAULTS *****************************************/\n\n\n  // The default values below must be integers within the stated ranges.\n\n  /*\n   * The maximum number of decimal places (DP) of the results of operations involving division:\n   * div and sqrt, and pow with negative exponents.\n   */\nvar DP = 20,          // 0 to MAX_DP\n\n  /*\n   * The rounding mode (RM) used when rounding to the above decimal places.\n   *\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n   *  3  Away from zero.                                  (ROUND_UP)\n   */\n  RM = 1,             // 0, 1, 2 or 3\n\n  // The maximum value of DP and Big.DP.\n  MAX_DP = 1E6,       // 0 to 1000000\n\n  // The maximum magnitude of the exponent argument to the pow method.\n  MAX_POWER = 1E6,    // 1 to 1000000\n\n  /*\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\n   * (JavaScript numbers: -7)\n   * -1000000 is the minimum recommended exponent value of a Big.\n   */\n  NE = -7,            // 0 to -1000000\n\n  /*\n   * The positive exponent (PE) at and above which toString returns exponential notation.\n   * (JavaScript numbers: 21)\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\n   */\n  PE = 21,            // 0 to 1000000\n\n  /*\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\n   * primitive number without a loss of precision.\n   */\n  STRICT = false,     // true or false\n\n\n/**************************************************************************************************/\n\n\n  // Error messages.\n  NAME = '[big.js] ',\n  INVALID = NAME + 'Invalid ',\n  INVALID_DP = INVALID + 'decimal places',\n  INVALID_RM = INVALID + 'rounding mode',\n  DIV_BY_ZERO = NAME + 'Division by zero',\n\n  // The shared prototype object.\n  P = {},\n  UNDEFINED = void 0,\n  NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n\n\n/*\n * Create and return a Big constructor.\n */\nfunction _Big_() {\n\n  /*\n   * The Big constructor and exported function.\n   * Create and return a new instance of a Big number object.\n   *\n   * n {number|string|Big} A numeric value.\n   */\n  function Big(n) {\n    var x = this;\n\n    // Enable constructor usage without new.\n    if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\n\n    // Duplicate.\n    if (n instanceof Big) {\n      x.s = n.s;\n      x.e = n.e;\n      x.c = n.c.slice();\n    } else {\n      if (typeof n !== 'string') {\n        if (Big.strict === true && typeof n !== 'bigint') {\n          throw TypeError(INVALID + 'value');\n        }\n\n        // Minus zero?\n        n = n === 0 && 1 / n < 0 ? '-0' : String(n);\n      }\n\n      parse(x, n);\n    }\n\n    // Retain a reference to this Big constructor.\n    // Shadow Big.prototype.constructor which points to Object.\n    x.constructor = Big;\n  }\n\n  Big.prototype = P;\n  Big.DP = DP;\n  Big.RM = RM;\n  Big.NE = NE;\n  Big.PE = PE;\n  Big.strict = STRICT;\n  Big.roundDown = 0;\n  Big.roundHalfUp = 1;\n  Big.roundHalfEven = 2;\n  Big.roundUp = 3;\n\n  return Big;\n}\n\n\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n  var e, i, nl;\n\n  if (!NUMERIC.test(n)) {\n    throw Error(INVALID + 'number');\n  }\n\n  // Determine sign.\n  x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n\n  // Decimal point?\n  if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\n\n  // Exponential form?\n  if ((i = n.search(/e/i)) > 0) {\n\n    // Determine exponent.\n    if (e < 0) e = i;\n    e += +n.slice(i + 1);\n    n = n.substring(0, i);\n  } else if (e < 0) {\n\n    // Integer.\n    e = n.length;\n  }\n\n  nl = n.length;\n\n  // Determine leading zeros.\n  for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n\n  if (i == nl) {\n\n    // Zero.\n    x.c = [x.e = 0];\n  } else {\n\n    // Determine trailing zeros.\n    for (; nl > 0 && n.charAt(--nl) == '0';);\n    x.e = e - i - 1;\n    x.c = [];\n\n    // Convert string to array of digits without leading/trailing zeros.\n    for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n  }\n\n  return x;\n}\n\n\n/*\n * Round Big x to a maximum of sd significant digits using rounding mode rm.\n *\n * x {Big} The Big to round.\n * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\n * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, sd, rm, more) {\n  var xc = x.c;\n\n  if (rm === UNDEFINED) rm = x.constructor.RM;\n  if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\n    throw Error(INVALID_RM);\n  }\n\n  if (sd < 1) {\n    more =\n      rm === 3 && (more || !!xc[0]) || sd === 0 && (\n      rm === 1 && xc[0] >= 5 ||\n      rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\n    );\n\n    xc.length = 1;\n\n    if (more) {\n\n      // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n      x.e = x.e - sd + 1;\n      xc[0] = 1;\n    } else {\n\n      // Zero.\n      xc[0] = x.e = 0;\n    }\n  } else if (sd < xc.length) {\n\n    // xc[sd] is the digit after the digit that may be rounded up.\n    more =\n      rm === 1 && xc[sd] >= 5 ||\n      rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\n        (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\n      rm === 3 && (more || !!xc[0]);\n\n    // Remove any digits after the required precision.\n    xc.length = sd;\n\n    // Round up?\n    if (more) {\n\n      // Rounding up may mean the previous digit has to be rounded up.\n      for (; ++xc[--sd] > 9;) {\n        xc[sd] = 0;\n        if (sd === 0) {\n          ++x.e;\n          xc.unshift(1);\n          break;\n        }\n      }\n    }\n\n    // Remove trailing zeros.\n    for (sd = xc.length; !xc[--sd];) xc.pop();\n  }\n\n  return x;\n}\n\n\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n */\nfunction stringify(x, doExponential, isNonzero) {\n  var e = x.e,\n    s = x.c.join(''),\n    n = s.length;\n\n  // Exponential notation?\n  if (doExponential) {\n    s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n\n  // Normal notation.\n  } else if (e < 0) {\n    for (; ++e;) s = '0' + s;\n    s = '0.' + s;\n  } else if (e > 0) {\n    if (++e > n) {\n      for (e -= n; e--;) s += '0';\n    } else if (e < n) {\n      s = s.slice(0, e) + '.' + s.slice(e);\n    }\n  } else if (n > 1) {\n    s = s.charAt(0) + '.' + s.slice(1);\n  }\n\n  return x.s < 0 && isNonzero ? '-' + s : s;\n}\n\n\n// Prototype/instance methods\n\n\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n  var x = new this.constructor(this);\n  x.s = 1;\n  return x;\n};\n\n\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n */\nP.cmp = function (y) {\n  var isneg,\n    x = this,\n    xc = x.c,\n    yc = (y = new x.constructor(y)).c,\n    i = x.s,\n    j = y.s,\n    k = x.e,\n    l = y.e;\n\n  // Either zero?\n  if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\n\n  // Signs differ?\n  if (i != j) return i;\n\n  isneg = i < 0;\n\n  // Compare exponents.\n  if (k != l) return k > l ^ isneg ? 1 : -1;\n\n  j = (k = xc.length) < (l = yc.length) ? k : l;\n\n  // Compare digit by digit.\n  for (i = -1; ++i < j;) {\n    if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n  }\n\n  // Compare lengths.\n  return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n  var x = this,\n    Big = x.constructor,\n    a = x.c,                  // dividend\n    b = (y = new Big(y)).c,   // divisor\n    k = x.s == y.s ? 1 : -1,\n    dp = Big.DP;\n\n  if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n    throw Error(INVALID_DP);\n  }\n\n  // Divisor is zero?\n  if (!b[0]) {\n    throw Error(DIV_BY_ZERO);\n  }\n\n  // Dividend is 0? Return +-0.\n  if (!a[0]) {\n    y.s = k;\n    y.c = [y.e = 0];\n    return y;\n  }\n\n  var bl, bt, n, cmp, ri,\n    bz = b.slice(),\n    ai = bl = b.length,\n    al = a.length,\n    r = a.slice(0, bl),   // remainder\n    rl = r.length,\n    q = y,                // quotient\n    qc = q.c = [],\n    qi = 0,\n    p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\n\n  q.s = k;\n  k = p < 0 ? 0 : p;\n\n  // Create version of divisor with leading zero.\n  bz.unshift(0);\n\n  // Add zeros to make remainder as long as divisor.\n  for (; rl++ < bl;) r.push(0);\n\n  do {\n\n    // n is how many times the divisor goes into current remainder.\n    for (n = 0; n < 10; n++) {\n\n      // Compare divisor and remainder.\n      if (bl != (rl = r.length)) {\n        cmp = bl > rl ? 1 : -1;\n      } else {\n        for (ri = -1, cmp = 0; ++ri < bl;) {\n          if (b[ri] != r[ri]) {\n            cmp = b[ri] > r[ri] ? 1 : -1;\n            break;\n          }\n        }\n      }\n\n      // If divisor < remainder, subtract divisor from remainder.\n      if (cmp < 0) {\n\n        // Remainder can't be more than 1 digit longer than divisor.\n        // Equalise lengths using divisor with extra leading zero?\n        for (bt = rl == bl ? b : bz; rl;) {\n          if (r[--rl] < bt[rl]) {\n            ri = rl;\n            for (; ri && !r[--ri];) r[ri] = 9;\n            --r[ri];\n            r[rl] += 10;\n          }\n          r[rl] -= bt[rl];\n        }\n\n        for (; !r[0];) r.shift();\n      } else {\n        break;\n      }\n    }\n\n    // Add the digit n to the result array.\n    qc[qi++] = cmp ? n : ++n;\n\n    // Update the remainder.\n    if (r[0] && cmp) r[rl] = a[ai] || 0;\n    else r = [a[ai]];\n\n  } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n\n  // Leading zero? Do not remove if result is simply zero (qi == 1).\n  if (!qc[0] && qi != 1) {\n\n    // There can't be more than one zero.\n    qc.shift();\n    q.e--;\n    p--;\n  }\n\n  // Round?\n  if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\n\n  return q;\n};\n\n\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n  return this.cmp(y) === 0;\n};\n\n\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n  return this.cmp(y) > 0;\n};\n\n\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n  return this.cmp(y) > -1;\n};\n\n\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n  return this.cmp(y) < 0;\n};\n\n\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n  return this.cmp(y) < 1;\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n  var i, j, t, xlty,\n    x = this,\n    Big = x.constructor,\n    a = x.s,\n    b = (y = new Big(y)).s;\n\n  // Signs differ?\n  if (a != b) {\n    y.s = -b;\n    return x.plus(y);\n  }\n\n  var xc = x.c.slice(),\n    xe = x.e,\n    yc = y.c,\n    ye = y.e;\n\n  // Either zero?\n  if (!xc[0] || !yc[0]) {\n    if (yc[0]) {\n      y.s = -b;\n    } else if (xc[0]) {\n      y = new Big(x);\n    } else {\n      y.s = 1;\n    }\n    return y;\n  }\n\n  // Determine which is the bigger number. Prepend zeros to equalise exponents.\n  if (a = xe - ye) {\n\n    if (xlty = a < 0) {\n      a = -a;\n      t = xc;\n    } else {\n      ye = xe;\n      t = yc;\n    }\n\n    t.reverse();\n    for (b = a; b--;) t.push(0);\n    t.reverse();\n  } else {\n\n    // Exponents equal. Check digit by digit.\n    j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n\n    for (a = b = 0; b < j; b++) {\n      if (xc[b] != yc[b]) {\n        xlty = xc[b] < yc[b];\n        break;\n      }\n    }\n  }\n\n  // x < y? Point xc to the array of the bigger number.\n  if (xlty) {\n    t = xc;\n    xc = yc;\n    yc = t;\n    y.s = -y.s;\n  }\n\n  /*\n   * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n   * needs to start at yc.length.\n   */\n  if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\n\n  // Subtract yc from xc.\n  for (b = i; j > a;) {\n    if (xc[--j] < yc[j]) {\n      for (i = j; i && !xc[--i];) xc[i] = 9;\n      --xc[i];\n      xc[j] += 10;\n    }\n\n    xc[j] -= yc[j];\n  }\n\n  // Remove trailing zeros.\n  for (; xc[--b] === 0;) xc.pop();\n\n  // Remove leading zeros and adjust exponent accordingly.\n  for (; xc[0] === 0;) {\n    xc.shift();\n    --ye;\n  }\n\n  if (!xc[0]) {\n\n    // n - n = +0\n    y.s = 1;\n\n    // Result must be zero.\n    xc = [ye = 0];\n  }\n\n  y.c = xc;\n  y.e = ye;\n\n  return y;\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n  var ygtx,\n    x = this,\n    Big = x.constructor,\n    a = x.s,\n    b = (y = new Big(y)).s;\n\n  if (!y.c[0]) {\n    throw Error(DIV_BY_ZERO);\n  }\n\n  x.s = y.s = 1;\n  ygtx = y.cmp(x) == 1;\n  x.s = a;\n  y.s = b;\n\n  if (ygtx) return new Big(x);\n\n  a = Big.DP;\n  b = Big.RM;\n  Big.DP = Big.RM = 0;\n  x = x.div(y);\n  Big.DP = a;\n  Big.RM = b;\n\n  return this.minus(x.times(y));\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big negated.\n */\nP.neg = function () {\n  var x = new this.constructor(this);\n  x.s = -x.s;\n  return x;\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n  var e, k, t,\n    x = this,\n    Big = x.constructor;\n\n  y = new Big(y);\n\n  // Signs differ?\n  if (x.s != y.s) {\n    y.s = -y.s;\n    return x.minus(y);\n  }\n\n  var xe = x.e,\n    xc = x.c,\n    ye = y.e,\n    yc = y.c;\n\n  // Either zero?\n  if (!xc[0] || !yc[0]) {\n    if (!yc[0]) {\n      if (xc[0]) {\n        y = new Big(x);\n      } else {\n        y.s = x.s;\n      }\n    }\n    return y;\n  }\n\n  xc = xc.slice();\n\n  // Prepend zeros to equalise exponents.\n  // Note: reverse faster than unshifts.\n  if (e = xe - ye) {\n    if (e > 0) {\n      ye = xe;\n      t = yc;\n    } else {\n      e = -e;\n      t = xc;\n    }\n\n    t.reverse();\n    for (; e--;) t.push(0);\n    t.reverse();\n  }\n\n  // Point xc to the longer array.\n  if (xc.length - yc.length < 0) {\n    t = yc;\n    yc = xc;\n    xc = t;\n  }\n\n  e = yc.length;\n\n  // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n  for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\n\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n\n  if (k) {\n    xc.unshift(k);\n    ++ye;\n  }\n\n  // Remove trailing zeros.\n  for (e = xc.length; xc[--e] === 0;) xc.pop();\n\n  y.c = xc;\n  y.e = ye;\n\n  return y;\n};\n\n\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n  var x = this,\n    one = new x.constructor('1'),\n    y = one,\n    isneg = n < 0;\n\n  if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\n    throw Error(INVALID + 'exponent');\n  }\n\n  if (isneg) n = -n;\n\n  for (;;) {\n    if (n & 1) y = y.times(x);\n    n >>= 1;\n    if (!n) break;\n    x = x.times(x);\n  }\n\n  return isneg ? one.div(y) : y;\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\n * significant digits using rounding mode rm, or Big.RM if rm is not specified.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.prec = function (sd, rm) {\n  if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n    throw Error(INVALID + 'precision');\n  }\n  return round(new this.constructor(this), sd, rm);\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\n * using rounding mode rm, or Big.RM if rm is not specified.\n * If dp is negative, round to an integer which is a multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.round = function (dp, rm) {\n  if (dp === UNDEFINED) dp = 0;\n  else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\n    throw Error(INVALID_DP);\n  }\n  return round(new this.constructor(this), dp + this.e + 1, rm);\n};\n\n\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n  var r, c, t,\n    x = this,\n    Big = x.constructor,\n    s = x.s,\n    e = x.e,\n    half = new Big('0.5');\n\n  // Zero?\n  if (!x.c[0]) return new Big(x);\n\n  // Negative?\n  if (s < 0) {\n    throw Error(NAME + 'No square root');\n  }\n\n  // Estimate.\n  s = Math.sqrt(x + '');\n\n  // Math.sqrt underflow/overflow?\n  // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n  if (s === 0 || s === 1 / 0) {\n    c = x.c.join('');\n    if (!(c.length + e & 1)) c += '0';\n    s = Math.sqrt(c);\n    e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n    r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n  } else {\n    r = new Big(s + '');\n  }\n\n  e = r.e + (Big.DP += 4);\n\n  // Newton-Raphson iteration.\n  do {\n    t = r;\n    r = half.times(t.plus(x.div(t)));\n  } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n\n  return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\n};\n\n\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n  var c,\n    x = this,\n    Big = x.constructor,\n    xc = x.c,\n    yc = (y = new Big(y)).c,\n    a = xc.length,\n    b = yc.length,\n    i = x.e,\n    j = y.e;\n\n  // Determine sign of result.\n  y.s = x.s == y.s ? 1 : -1;\n\n  // Return signed 0 if either 0.\n  if (!xc[0] || !yc[0]) {\n    y.c = [y.e = 0];\n    return y;\n  }\n\n  // Initialise exponent of result as x.e + y.e.\n  y.e = i + j;\n\n  // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n  if (a < b) {\n    c = xc;\n    xc = yc;\n    yc = c;\n    j = a;\n    a = b;\n    b = j;\n  }\n\n  // Initialise coefficient array of result with zeros.\n  for (c = new Array(j = a + b); j--;) c[j] = 0;\n\n  // Multiply.\n\n  // i is initially xc.length.\n  for (i = b; i--;) {\n    b = 0;\n\n    // a is yc.length.\n    for (j = a + i; j > i;) {\n\n      // Current sum of products at this digit position, plus carry.\n      b = c[j] + yc[i] * xc[j - i - 1] + b;\n      c[j--] = b % 10;\n\n      // carry\n      b = b / 10 | 0;\n    }\n\n    c[j] = b;\n  }\n\n  // Increment result exponent if there is a final carry, otherwise remove leading zero.\n  if (b) ++y.e;\n  else c.shift();\n\n  // Remove trailing zeros.\n  for (i = c.length; !c[--i];) c.pop();\n  y.c = c;\n\n  return y;\n};\n\n\n/*\n * Return a string representing the value of this Big in exponential notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toExponential = function (dp, rm) {\n  var x = this,\n    n = x.c[0];\n\n  if (dp !== UNDEFINED) {\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n      throw Error(INVALID_DP);\n    }\n    x = round(new x.constructor(x), ++dp, rm);\n    for (; x.c.length < dp;) x.c.push(0);\n  }\n\n  return stringify(x, true, !!n);\n};\n\n\n/*\n * Return a string representing the value of this Big in normal notation rounded to dp fixed\n * decimal places using rounding mode rm, or Big.RM if rm is not specified.\n *\n * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp, rm) {\n  var x = this,\n    n = x.c[0];\n\n  if (dp !== UNDEFINED) {\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\n      throw Error(INVALID_DP);\n    }\n    x = round(new x.constructor(x), dp + x.e + 1, rm);\n\n    // x.e may have changed if the value is rounded up.\n    for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\n  }\n\n  return stringify(x, false, !!n);\n};\n\n\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toJSON = P.toString = function () {\n  var x = this,\n    Big = x.constructor;\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\n};\n\n\n/*\n * Return the value of this Big as a primitve number.\n */\nP.toNumber = function () {\n  var n = Number(stringify(this, true, true));\n  if (this.constructor.strict === true && !this.eq(n.toString())) {\n    throw Error(NAME + 'Imprecise conversion');\n  }\n  return n;\n};\n\n\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * rounding mode rm, or Big.RM if rm is not specified.\n * Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\n * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\n */\nP.toPrecision = function (sd, rm) {\n  var x = this,\n    Big = x.constructor,\n    n = x.c[0];\n\n  if (sd !== UNDEFINED) {\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\n      throw Error(INVALID + 'precision');\n    }\n    x = round(new Big(x), sd, rm);\n    for (; x.c.length < sd;) x.c.push(0);\n  }\n\n  return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\n};\n\n\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = function () {\n  var x = this,\n    Big = x.constructor;\n  if (Big.strict === true) {\n    throw Error(NAME + 'valueOf disallowed');\n  }\n  return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\n};\n\n\n// Export\n\n\nexport var Big = _Big_();\n\n/// <reference types=\"https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/master/types/big.js/index.d.ts\" />\nexport default Big;\n","import type {\n  ApiUpdate,\n  CancellableCallback, OriginMessageData, OriginMessageEvent, WorkerMessageData,\n} from './PostMessageConnector';\n\nimport { DETACHED_TAB_URL } from './ledger/tab';\nimport { bigintReviver } from './bigint';\nimport { logDebugError } from './logs';\n\ndeclare const self: WorkerGlobalScope;\n\nconst callbackState = new Map<string, CancellableCallback>();\n\ntype ApiConfig =\n  ((name: string, ...args: any[]) => any | [any, ArrayBuffer[]])\n  | Record<string, Function>;\ntype SendToOrigin = (data: WorkerMessageData, transferables?: Transferable[]) => void;\n\nexport function createPostMessageInterface(\n  api: ApiConfig,\n  channel?: string,\n  target: DedicatedWorkerGlobalScope | Worker = self as DedicatedWorkerGlobalScope,\n  shouldIgnoreErrors?: boolean,\n) {\n  function sendToOrigin(data: WorkerMessageData, transferables?: Transferable[]) {\n    data.channel = channel;\n\n    if (transferables) {\n      target.postMessage(data, transferables);\n    } else {\n      target.postMessage(data);\n    }\n  }\n\n  if (!shouldIgnoreErrors) {\n    handleErrors(sendToOrigin);\n  }\n\n  target.onmessage = (message: OriginMessageEvent) => {\n    if (message.data?.channel === channel) {\n      onMessage(api, message.data, sendToOrigin);\n    }\n  };\n}\n\nexport function createExtensionInterface(\n  portName: string,\n  api: ApiConfig,\n  channel?: string,\n  cleanUpdater?: (onUpdate: (update: ApiUpdate) => void) => void,\n  withAutoInit = false,\n) {\n  chrome.runtime.onConnect.addListener((port) => {\n    if (port.name !== portName) {\n      return;\n    }\n\n    /**\n     * If the sender's URL includes the DETACHED_TAB_URL, we skip further processing\n     * This condition ensures that we don't interact with tabs that have already been closed.\n     */\n    const url = port.sender?.url;\n    if (url?.includes(DETACHED_TAB_URL)) {\n      return;\n    }\n\n    const origin = url ? new URL(url).origin : undefined;\n\n    const dAppUpdater = (update: ApiUpdate) => {\n      sendToOrigin({\n        type: 'update',\n        update,\n      });\n    };\n\n    function sendToOrigin(data: WorkerMessageData) {\n      data.channel = channel;\n      const json = JSON.stringify(data);\n      port.postMessage(json);\n    }\n\n    handleErrors(sendToOrigin);\n\n    port.onMessage.addListener((data: OriginMessageData | string) => {\n      if (typeof data === 'string') {\n        data = JSON.parse(data, bigintReviver) as OriginMessageData;\n      }\n      if (data.channel === channel) {\n        onMessage(api, data, sendToOrigin, dAppUpdater, origin);\n      }\n    });\n\n    port.onDisconnect.addListener(() => {\n      cleanUpdater?.(dAppUpdater);\n    });\n\n    if (withAutoInit) {\n      onMessage(api, { type: 'init', name: 'init', args: [] }, sendToOrigin, dAppUpdater);\n    }\n  });\n}\n\nasync function onMessage(\n  api: ApiConfig,\n  data: OriginMessageData,\n  sendToOrigin: SendToOrigin,\n  onUpdate?: (update: ApiUpdate) => void,\n  origin?: string,\n) {\n  if (!onUpdate) {\n    onUpdate = (update: ApiUpdate) => {\n      sendToOrigin({\n        type: 'update',\n        update,\n      });\n    };\n  }\n\n  switch (data.type) {\n    case 'init': {\n      const { args } = data;\n      const promise = typeof api === 'function'\n        ? api('init', origin, onUpdate, ...args)\n        : api.init?.(onUpdate, ...args);\n      await promise;\n\n      break;\n    }\n    case 'callMethod': {\n      const {\n        messageId, name, args, withCallback,\n      } = data;\n      try {\n        if (messageId && withCallback) {\n          const callback = (...callbackArgs: any[]) => {\n            const lastArg = callbackArgs[callbackArgs.length - 1];\n\n            sendToOrigin({\n              type: 'methodCallback',\n              messageId,\n              callbackArgs,\n            }, isTransferable(lastArg) ? [lastArg] : undefined);\n          };\n\n          callbackState.set(messageId, callback);\n\n          args.push(callback as never);\n        }\n\n        const response = typeof api === 'function'\n          ? await api(name, origin, ...args)\n          : await api[name](...args);\n        const { arrayBuffer } = (typeof response === 'object' && 'arrayBuffer' in response && response) || {};\n\n        if (messageId) {\n          sendToOrigin(\n            {\n              type: 'methodResponse',\n              messageId,\n              response,\n            },\n            arrayBuffer ? [arrayBuffer] : undefined,\n          );\n        }\n      } catch (err: any) {\n        logDebugError(name, err);\n\n        if (messageId) {\n          sendToOrigin({\n            type: 'methodResponse',\n            messageId,\n            error: { message: err.message },\n          });\n        }\n      }\n\n      if (messageId) {\n        callbackState.delete(messageId);\n      }\n\n      break;\n    }\n    case 'cancelProgress': {\n      const callback = callbackState.get(data.messageId);\n      if (callback) {\n        callback.isCanceled = true;\n      }\n\n      break;\n    }\n  }\n}\n\nfunction isTransferable(obj: any) {\n  return obj instanceof ArrayBuffer || obj instanceof ImageBitmap;\n}\n\nfunction handleErrors(sendToOrigin: SendToOrigin) {\n  self.onerror = (e) => {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    sendToOrigin({ type: 'unhandledError', error: { message: e.error?.message || 'Uncaught exception in worker' } });\n  };\n\n  self.addEventListener('unhandledrejection', (e) => {\n    // eslint-disable-next-line no-console\n    console.error(e);\n    sendToOrigin({ type: 'unhandledError', error: { message: e.reason?.message || 'Uncaught rejection in worker' } });\n  });\n}\n","import { DEFAULT_DECIMAL_PLACES } from '../config';\nimport { Big } from '../lib/big.js';\n\nBig.RM = 0; // RoundDown\nBig.NE = -100000; // Disable exponential form\nBig.PE = 100000; // Disable exponential form\n\nconst ten = Big(10);\n\nexport function fromDecimal(value: string | number, decimals?: number) {\n  return BigInt(Big(value).mul(ten.pow(decimals ?? DEFAULT_DECIMAL_PLACES)).round().toString());\n}\n\nexport function toDecimal(value: bigint | number, decimals?: number, noFloor = false) {\n  return toBig(value, decimals ?? DEFAULT_DECIMAL_PLACES, noFloor).toString();\n}\n\nexport function toBig(value: bigint | number, decimals = DEFAULT_DECIMAL_PLACES, noFloor = false) {\n  return Big(value.toString()).div(ten.pow(decimals)).round(decimals, noFloor ? Big.roundHalfUp : undefined);\n}\n\nexport function roundDecimal(value: string, decimals: number) {\n  return Big(value).round(decimals).toString();\n}\n\nexport function getIsPositiveDecimal(value: string) {\n  return !value.startsWith('-');\n}\n","export const DETACHED_TAB_URL = '#detached';\n\nlet ledgerTabId: number | undefined;\n\nexport function openLedgerTab() {\n  return createLedgerTab();\n}\n\nexport async function closeLedgerTab() {\n  if (!ledgerTabId) return;\n\n  await chrome.tabs.query({ active: true }, () => {\n    if (!ledgerTabId) return;\n\n    chrome.tabs.remove(ledgerTabId);\n  });\n}\n\nexport function onLedgerTabClose(id: number, onClose: () => void) {\n  chrome.tabs.onRemoved.addListener((closedTabId: number) => {\n    if (closedTabId !== id) {\n      return;\n    }\n\n    ledgerTabId = undefined;\n\n    onClose();\n  });\n}\n\nasync function createLedgerTab() {\n  const tab = await chrome.tabs.create({ url: `index.html${DETACHED_TAB_URL}`, active: true });\n  await chrome.windows.update(tab.windowId!, { focused: true });\n\n  ledgerTabId = tab.id!;\n\n  return ledgerTabId;\n}\n","export function random(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function sample<T extends any>(arr: T[]) {\n  return arr[random(0, arr.length - 1)];\n}\n\nexport function randomBytes(size: number) {\n  // eslint-disable-next-line no-restricted-globals\n  return self.crypto.getRandomValues(new Uint8Array(size));\n}\n"],"names":["DP","RM","MAX_DP","MAX_POWER","NE","PE","STRICT","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","_Big_","Big","n","x","s","e","c","slice","strict","TypeError","String","parse","constructor","prototype","roundDown","roundHalfUp","roundHalfEven","roundUp","i","nl","test","Error","charAt","indexOf","replace","search","substring","length","round","sd","rm","more","xc","unshift","pop","stringify","doExponential","isNonzero","join","abs","cmp","y","isneg","yc","j","k","l","div","a","b","dp","bl","bt","ri","bz","ai","al","r","rl","q","qc","qi","p","push","shift","eq","gt","gte","lt","lte","minus","sub","t","xlty","plus","xe","ye","reverse","mod","ygtx","times","neg","add","pow","one","prec","sqrt","half","Math","toExponential","mul","Array","toFixed","Symbol","for","toJSON","toString","toNumber","Number","toPrecision","valueOf","DETACHED_TAB_URL","bigintReviver","logDebugError","callbackState","Map","createPostMessageInterface","api","channel","target","arguments","undefined","self","shouldIgnoreErrors","sendToOrigin","data","transferables","postMessage","handleErrors","onmessage","message","_message$data","onMessage","createExtensionInterface","portName","cleanUpdater","withAutoInit","chrome","runtime","onConnect","addListener","port","_port$sender","name","url","sender","includes","origin","URL","dAppUpdater","update","type","json","JSON","onDisconnect","args","onUpdate","_api$init","promise","init","call","messageId","withCallback","callback","_len","callbackArgs","_key","lastArg","isTransferable","set","response","arrayBuffer","err","error","delete","get","isCanceled","obj","ArrayBuffer","ImageBitmap","onerror","_e$error","console","addEventListener","_e$reason","reason","DEFAULT_DECIMAL_PLACES","ten","fromDecimal","value","decimals","BigInt","toDecimal","noFloor","toBig","roundDecimal","getIsPositiveDecimal","startsWith","ledgerTabId","openLedgerTab","createLedgerTab","closeLedgerTab","tabs","query","active","remove","onLedgerTabClose","id","onClose","onRemoved","closedTabId","tab","create","windows","windowId","focused","random","min","max","floor","sample","arr","randomBytes","size","crypto","getRandomValues","Uint8Array"],"sourceRoot":""}