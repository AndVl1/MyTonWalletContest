{"version":3,"file":"vendors-node_modules_ledgerhq_hw-transport-webhid_lib-es_TransportWebHID_js-node_modules_ledg-b68bfa.3bbed3be4b73b0955183.js","mappings":";;;;;;;;;;;;;;AAAkD;AAClD;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA,mBAAmB,MAAM,eAAe,MAAM;AAC9C;AACA,4BAA4B,cAAc;AAC1C,6BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6BAA6B;AAC/C;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA,0BAA0B,4DAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAe,gBAAgB,EAAC;AAChC;;;;;;;;;;;;;;;;;;ACpG4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACA;AACA;AACA;AACA;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,QAAQ,OAAO,gDAAS,OAAO,oDAAa,yFAAyF;AAClL,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA,wBAAwB,0BAA0B;AAClD;AACA;AACA,4HAA4H,aAAa;AACzI;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;;;;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxIkH;AAClB;AACzF,iCAAiC,gEAAsB;AACvD,4BAA4B,gEAAsB;AAClD,uBAAuB,gEAAsB;AAC7C,0BAA0B,gEAAsB;AAChD,wBAAwB,gEAAsB;AAC9C,uBAAuB,gEAAsB;AAC7C,6BAA6B,gEAAsB;AACnD,gCAAgC,gEAAsB;AACtD,6BAA6B,gEAAsB;AACnD,oCAAoC,gEAAsB;AAC1D,sCAAsC,gEAAsB;AAC5D,8BAA8B,gEAAsB;AACpD,kCAAkC,gEAAsB;AACxD,oCAAoC,gEAAsB;AAC1D,4BAA4B,gEAAsB;AAClD,qBAAqB,gEAAsB;AAC3C,0BAA0B,gEAAsB;AAChD,yBAAyB,gEAAsB;AAC/C,iCAAiC,gEAAsB;AACvD,2BAA2B,gEAAsB;AACjD,gCAAgC,gEAAsB;AACtD,2BAA2B,gEAAsB;AACjD,0CAA0C,gEAAsB;AAChE,0CAA0C,gEAAsB;AAChE,0CAA0C,gEAAsB;AAChE,2BAA2B,gEAAsB;AACjD,uCAAuC,gEAAsB;AAC7D,4BAA4B,gEAAsB;AAClD,8BAA8B,gEAAsB;AACpD,sBAAsB,gEAAsB;AAC5C,sBAAsB,gEAAsB;AAC5C,uBAAuB,gEAAsB;AAC7C,qBAAqB,gEAAsB;AAC3C,qDAAqD,gEAAsB;AAC3E,gCAAgC,gEAAsB;AACtD,mBAAmB,gEAAsB;AACzC,uBAAuB,gEAAsB;AAC7C,kCAAkC,gEAAsB;AACxD,8BAA8B,gEAAsB;AACpD,wCAAwC,gEAAsB;AAC9D,iCAAiC,gEAAsB;AACvD,qCAAqC,gEAAsB;AAC3D,uCAAuC,gEAAsB;AAC7D,iCAAiC,gEAAsB;AACvD,2CAA2C,gEAAsB;AACjE,mCAAmC,gEAAsB;AACzD,+BAA+B,gEAAsB;AACrD,oBAAoB,gEAAsB;AAC1C,qBAAqB,gEAAsB;AAC3C,yBAAyB,gEAAsB;AAC/C,yBAAyB,gEAAsB;AAC/C,mCAAmC,gEAAsB;AACzD,wCAAwC,gEAAsB;AAC9D,kCAAkC,gEAAsB;AACxD,qDAAqD,gEAAsB;AAC3E,yBAAyB,gEAAsB;AAC/C,qBAAqB,gEAAsB;AAClD;AACO,yBAAyB,gEAAsB;AAC/C,kCAAkC,gEAAsB;AACxD,4BAA4B,gEAAsB;AAClD,0BAA0B,gEAAsB;AAChD,2BAA2B,gEAAsB;AACjD,oCAAoC,gEAAsB;AAC1D,qBAAqB,gEAAsB;AAC3C,gCAAgC,gEAAsB;AACtD,+BAA+B,gEAAsB;AACrD,oCAAoC,gEAAsB;AAC1D,8BAA8B,gEAAsB;AACpD,sBAAsB,gEAAsB;AAC5C,6BAA6B,gEAAsB;AACnD,iCAAiC,gEAAsB;AACvD,0BAA0B,gEAAsB;AAChD,iDAAiD,gEAAsB;AACvE,8CAA8C,gEAAsB;AACpE,4BAA4B,gEAAsB;AAClD,4BAA4B,gEAAsB;AAClD,2BAA2B,gEAAsB;AACjD,sBAAsB,gEAAsB;AAC5C,oCAAoC,gEAAsB;AAC1D,2BAA2B,gEAAsB;AACjD,kCAAkC,gEAAsB;AACxD,gCAAgC,gEAAsB;AACtD,4BAA4B,gEAAsB,yBAAyB;AAC3E,2BAA2B,gEAAsB;AACjD,mCAAmC,gEAAsB;AACzD,uCAAuC,gEAAsB;AAC7D,+BAA+B,gEAAsB;AACrD,uCAAuC,gEAAsB;AAC7D,yCAAyC,gEAAsB;AAC/D,sCAAsC,gEAAsB;AAC5D,8BAA8B,gEAAsB;AACpD,iCAAiC,gEAAsB;AACvD,kCAAkC,gEAAsB;AACxD,8BAA8B,gEAAsB;AACpD,4BAA4B,gEAAsB;AAClD,yBAAyB,gEAAsB;AAC/C,uBAAuB,gEAAsB;AAC7C,qBAAqB,gEAAsB;AAC3C,yBAAyB,gEAAsB;AAC/C,oBAAoB,gEAAsB;AAC1C,mBAAmB,gEAAsB;AACzC,yBAAyB,gEAAsB;AAC/C,kBAAkB,gEAAsB;AACxC,sBAAsB,gEAAsB;AAC5C,2BAA2B,gEAAsB;AACjD,2BAA2B,gEAAsB;AACjD,qBAAqB,gEAAsB;AAC3C,qBAAqB,gEAAsB;AAC3C,oCAAoC,gEAAsB;AACjE;AACO,0CAA0C,gEAAsB;AACvE;AACO,8BAA8B,gEAAsB;AACpD,kBAAkB,gEAAsB;AAC/C;AACO,yBAAyB,gEAAsB;AACtD;AACO,sBAAsB,gEAAsB;AAC5C,wBAAwB,gEAAsB;AAC9C,mBAAmB,gEAAsB;AAChD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAA0B;AACnB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC,IAAI;AACnE;AACA;AACA;AACA,0CAA0C,MAAM,KAAK,cAAc;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,2CAA2C,gCAAgC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,oEAA0B;AAC1B;;;;;;;;;;;;;;;;;;;;ACvQA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC+C;AACQ;AACqB;AACvC;AACiG;AACtI;AACA;AACA,kBAAkB,gEAAiB;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA,kBAAkB,4DAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,kDAAkD,gEAAiB;AACnE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C,gBAAgB,mDAAG;AACnB,gCAAgC,yEAAU;AAC1C;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,mDAAG;AACnB;AACA,aAAa;AACb;AACA;AACA,8BAA8B,+EAAiC;AAC/D;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,mDAAmD,uEAAoB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gEAAkB;AACpE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wEAA0B;AACzD;AACA;AACA;AACA,kBAAkB,uEAAoB;AACtC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL,2BAA2B,wEAA0B;AACrD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,eAAe,EAAC;AAC/B;;;;;;;;;;;;;;;;;;;;;AC3NA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC+C;AACQ;AACE;AACpB;AACiJ;AAClF;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uEAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4DAAmB;AACpD;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yDAAgB;AAClD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,YAAY;AAClF;AACA,0BAA0B,4EAA8B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,4EAA8B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,gEAAkB;AACpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C,gBAAgB,mDAAG;AACnB,gCAAgC,yEAAU;AAC1C;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA;AACA,gBAAgB,mDAAG;AACnB;AACA,aAAa;AACb;AACA;AACA,8BAA8B,+EAAiC;AAC/D;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,gDAAW;AACzC;AACA;AACA;AACA,uBAAuB,qDAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6DAAoB;AACxB;AACA,gCAAgC,uEAAoB;AACpD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,KAAK;AACL;AACA,+BAA+B,4EAA8B;AAC7D;AACA;AACA,+BAA+B,wEAA0B;AACzD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,eAAe,EAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;;ACtMA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACsD;AACtD;AACA;AACA,kBAAkB,gEAAiB;AACnC,KAAK;AACL;AACO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACO;AACP;AACA;AACA,kDAAkD,gEAAiB;AACnE,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;;;;;;;;;;;;;;;;;;;ACtCA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACkC;AACiG;AACtF;AACqC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB,IAAI;AACzC;AACA;AACA;AACA,2BAA2B,+CAAY;AACvC;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,mBAAmB,QAAQ;AAC3B,mBAAmB,eAAe;AAClC,mBAAmB,QAAQ;AAC3B;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA,8CAA8C,MAAM,yBAAyB,4DAAc,KAAK,iBAAiB,IAAI;AACrH,4DAA4D,kBAAkB;AAC9E;AACA,uEAAuE,yBAAyB;AAChG,0BAA0B,4DAAc;AACxC;AACA,mDAAmD,gBAAgB;AACnE;AACA;AACA,YAAY,MAAM,SAAS,MAAM,2BAA2B,MAAM,gCAAgC,gBAAgB;AAClH;AACA;AACA;AACA,0BAA0B,kEAAoB;AAC9C;AACA;AACA,SAAS;AACT;AACA,0BAA0B,uDAAW;AACrC;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA,sBAAsB,kCAAkC,IAAI;AAC5D;AACA;AACA;AACA;AACA;AACA,eAAe,eAAe;AAC9B,eAAe,kBAAkB;AACjC,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4DAAc;AAC7C,8BAA8B,kEAAoB;AAClD;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,8BAA8B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,mCAAmC,4DAAc;AACjD;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,+BAA+B,4DAAc;AAC7C,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gCAAgC;AAC5F;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,oEAAsB;AAChD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC;AACA,0CAA0C,4DAAc;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS,EAAC;AACzB;;;;;;;;;;;;;;;;ACvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iBAAiB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5Ia;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,oBAAoB,GAAG,qBAAqB;AACnE,eAAe,mBAAO,CAAC,yDAAW;AAClC,iBAAiB,mBAAO,CAAC,6DAAa;AACtC,mBAAmB,mBAAO,CAAC,uDAAU;AACrC,uBAAuB,mBAAO,CAAC,iGAAsB;AACrD,kBAAkB,mBAAO,CAAC,uFAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,kBAAkB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gDAAgD,MAAM;AACtD,gBAAgB,MAAM;AACtB;AACA;AACA;AACA,6BAA6B,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA,gBAAgB,MAAM;AACtB;AACA,gBAAgB,MAAM;AACtB;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,wBAAwB,MAAM;AAC9B;AACA;AACA,4BAA4B,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,wBAAwB,MAAM;AAC9B;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oEAAoE,MAAM;AAC1E;AACA,kBAAkB,MAAM,GAAG,MAAM,GAAG,MAAM;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0CAA0C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,sBAAsB;AACnE;AACA;AACA;AACA;AACA;AACA,gBAAgB,iDAAiD;AACjE;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B,sBAAsB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB;AACpC,4BAA4B,MAAM;AAClC;AACA,4BAA4B,MAAM;AAClC;AACA,0BAA0B,MAAM;AAChC,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA,qBAAqB;AACrB;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,MAAM;AAC7B;AACA;AACA;AACA;AACA,2DAA2D,SAAS;AACpE;AACA;AACA,2BAA2B,MAAM;AACjC;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,MAAM;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM;AACzB;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AChkCa;AACb,6BAA6C,EAAE,aAAa,CAAC;AAC7D,qBAAqB,GAAG,oBAAoB,GAAG,oBAAoB;AACnE,qBAAqB,mBAAO,CAAC,qFAAgB;AAC7C,gDAA+C,EAAE,qCAAqC,uCAAuC,EAAC;AAC9H,gDAA+C,EAAE,qCAAqC,uCAAuC,EAAC;AAC9H,iDAAgD,EAAE,qCAAqC,wCAAwC,EAAC;;;;;;;;;;;;ACNnH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,eAAe;AACf,eAAe,mBAAO,CAAC,yDAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;;;;;;;;;;;;ACdF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,uBAAuB,GAAG,oBAAoB,GAAG,oBAAoB,GAAG,kBAAkB,GAAG,oBAAoB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB,GAAG,mBAAmB;AACzM,eAAe,mBAAO,CAAC,yDAAW;AAClC;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA,uBAAuB;;;;;;;;;;;;;AC1DV;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,kBAAkB,mBAAO,CAAC,4EAAoB;AAC9C,0BAA0B,mBAAO,CAAC,4FAA4B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqwBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB,wBAAwB,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;;;;;;;;;;;;ACjdJ;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB,kBAAkB,mBAAO,CAAC,4EAAoB;AAC9C,kBAAkB,mBAAO,CAAC,oEAAgB;AAC1C,eAAe,mBAAO,CAAC,8DAAa;AACpC,oBAAoB,mBAAO,CAAC,wEAAkB;AAC9C,8BAA8B,mBAAO,CAAC,wFAAuB;AAC7D,+BAA+B,mBAAO,CAAC,0FAAwB;AAC/D,oBAAoB,mBAAO,CAAC,oEAAa;AACzC,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD,gCAAgC,mBAAO,CAAC,wGAA+B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AACliBAAiB,MAAM;AACvvkBa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,eAAe,gBAAgB,gBAAgB;;;;;;;;;;;;AClBhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA,SAAS,yBAAyB;AAClC;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8DAA8D,YAAY;AAC1E;AACA,8DAA8D,YAAY;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;;;;;;;;;;AChfA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,KAAK;AACtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB,mBAAO,CAAC,kFAA2B;AACxD,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,4DAAgB;AAClD,YAAY,mBAAO,CAAC,gEAAkB;AACtC,cAAc,mBAAO,CAAC,kEAAmB;AACzC,eAAe,mBAAO,CAAC,yDAAU;AACjC,cAAc,mBAAO,CAAC,uDAAS;;;;;;;;;;;AC5I/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD,SAAS;AAC5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,mBAAO,CAAC,wEAAW;AAC/B,wBAAwB,WAAW;;AAEnC,qBAAqB,mBAAO,CAAC,kFAA2B;AACxD,mBAAmB,mBAAO,CAAC,iEAAc;AACzC,cAAc,mBAAO,CAAC,kEAAmB;AACzC,eAAe,mBAAO,CAAC,yDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,4DAAgB;AAC5B,QAAQ,sCAAsC,EAAE,mBAAO,CAAC,0EAAuB;;AAE/E;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,iBAAiB,EAAE,QAAQ,OAAO;AAClC,MAAM;AACN;AACA,iBAAiB,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,OAAO;AAC1C,MAAM;AACN;AACA,iBAAiB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AAChC,QAAQ,GAAG,EAAE,GAAG,OAAO;AACvB,MAAM;AACN;AACA,iBAAiB,EAAE,GAAG,EAAE,GAAG;AAC3B,QAAQ,GAAG,EAAE,GAAG,OAAO;AACvB;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN,iBAAiB,EAAE,MAAM,GAAG,GAAG,OAAO;AACtC,MAAM;AACN;AACA,mBAAmB,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,OAAO;AAChD,QAAQ;AACR,mBAAmB,EAAE,GAAG,EAAE,IAAI,GAAG,GAAG,OAAO;AAC3C;AACA,MAAM;AACN;AACA;AACA;AACA,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AACpC,YAAY,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;AAChC,UAAU;AACV,qBAAqB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AACpC,YAAY,GAAG,EAAE,GAAG,OAAO;AAC3B;AACA,QAAQ;AACR,mBAAmB,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;AAClC,UAAU,GAAG,OAAO;AACpB;AACA,MAAM;AACN;AACA;AACA;AACA,qBAAqB,EAAE,GAAG,EAAE,GAAG;AAC/B,WAAW,EAAE,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,OAAO;AACpC,UAAU;AACV,qBAAqB,EAAE,GAAG,EAAE,GAAG;AAC/B,WAAW,EAAE,GAAG,GAAG,EAAE,GAAG,OAAO;AAC/B;AACA,QAAQ;AACR,mBAAmB,EAAE,GAAG,EAAE,GAAG;AAC7B,UAAU,GAAG,OAAO;AACpB;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,SAAS,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG;AACvC,MAAM;AACN,iBAAiB,EAAE,MAAM,IAAI,GAAG,OAAO;AACvC,MAAM;AACN,iBAAiB,EAAE,GAAG,EAAE,IAAI;AAC5B,QAAQ,GAAG,EAAE,GAAG,OAAO;AACvB;;AAEA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,gBAAgB,GAAG,MAAM,kBAAkB;AAC3C,IAAI;AACJ,gBAAgB,GAAG,GAAG,GAAG,IAAI,kBAAkB;AAC/C,IAAI;AACJ,gBAAgB,KAAK;AACrB,IAAI;AACJ,gBAAgB,KAAK,EAAE,kBAAkB;AACzC;;AAEA;AACA;AACA,IAAI;AACJ,aAAa,QAAQ;AACrB,IAAI;AACJ,aAAa,GAAG,GAAG,QAAQ;AAC3B,IAAI;AACJ,cAAc,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI;AACpC,IAAI;AACJ,aAAa,GAAG,GAAG,GAAG,GAAG,QAAQ;AACjC,IAAI;AACJ,cAAc,GAAG;AACjB;;AAEA,YAAY,MAAM,EAAE,GAAG;AACvB;;AAEA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gBAAgB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC1hBA,cAAc,mBAAO,CAAC,kEAAmB;AACzC,QAAQ,+BAA+B,EAAE,mBAAO,CAAC,0EAAuB;AACxE,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,4DAAgB;;AAElD,qBAAqB,mBAAO,CAAC,kFAA2B;AACxD,QAAQ,qBAAqB,EAAE,mBAAO,CAAC,8EAAyB;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN,0EAA0E,eAAe;AACzF;;AAEA;AACA;AACA,kCAAkC,YAAY;AAC9C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,8CAA8C,QAAQ;AACtD;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,WAAW,GAAG,WAAW,GAAG,WAAW;AAC7D;AACA,0BAA0B,0BAA0B;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC7SA,cAAc,mBAAO,CAAC,yDAAS;AAC/B;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA,WAAW,mBAAO,CAAC,mDAAM;AACzB,YAAY,mBAAO,CAAC,qDAAO;AAC3B,WAAW,mBAAO,CAAC,mDAAM;AACzB,YAAY,mBAAO,CAAC,qDAAO;AAC3B,WAAW,mBAAO,CAAC,mDAAM;AACzB,YAAY,mBAAO,CAAC,qDAAO;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,GAAG;AAClD;AACA;AACA;;;;;;;;;;;ACnDA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C,cAAc,mBAAO,CAAC,yDAAS;AAC/B,QAAQ,gBAAgB,EAAE,mBAAO,CAAC,4DAAgB;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAiE,SAAS;AAC1E,4DAA4D,SAAS;;AAErE,kBAAkB,MAAM,GAAG,MAAM,GAAG,MAAM,EAAE,WAAW,EAAE,MAAM;AAC/D;AACA;;;;;;;;;;;AC3DA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C;AACA;;AAEA;;;;;;;;;;;ACJA,cAAc,mBAAO,CAAC,4DAAY;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AChEA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,eAAe,mBAAO,CAAC,kEAAmB;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;AClBA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C;AACA;;;;;;;;;;;ACFA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C;AACA;;;;;;;;;;;ACFA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACfA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C;AACA;;;;;;;;;;;ACFA,cAAc,mBAAO,CAAC,yDAAS;AAC/B;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA,gBAAgB,mBAAO,CAAC,6DAAW;AACnC;AACA;;;;;;;;;;;ACFA,qBAAqB,mBAAO,CAAC,yEAAiB;AAC9C;AACA;;;;;;;;;;;ACFA,cAAc,mBAAO,CAAC,gEAAkB;AACxC;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;;;;;;;;;;ACTA,qBAAqB,mBAAO,CAAC,yEAAiB;AAC9C;AACA;;;;;;;;;;;ACFA,cAAc,mBAAO,CAAC,yDAAS;AAC/B;AACA;AACA;AACA;AACA;;;;;;;;;;;ACLA;AACA,mBAAmB,mBAAO,CAAC,2DAAe;AAC1C,kBAAkB,mBAAO,CAAC,yEAAsB;AAChD,eAAe,mBAAO,CAAC,iEAAkB;AACzC,oBAAoB,mBAAO,CAAC,6EAAwB;AACpD,cAAc,mBAAO,CAAC,mEAAmB;AACzC,cAAc,mBAAO,CAAC,mEAAmB;AACzC,cAAc,mBAAO,CAAC,mEAAmB;AACzC,YAAY,mBAAO,CAAC,+DAAiB;AACrC,aAAa,mBAAO,CAAC,iEAAkB;AACvC,cAAc,mBAAO,CAAC,mEAAmB;AACzC,cAAc,mBAAO,CAAC,mEAAmB;AACzC,cAAc,mBAAO,CAAC,mEAAmB;AACzC,mBAAmB,mBAAO,CAAC,6EAAwB;AACnD,gBAAgB,mBAAO,CAAC,uEAAqB;AAC7C,iBAAiB,mBAAO,CAAC,yEAAsB;AAC/C,qBAAqB,mBAAO,CAAC,mFAA2B;AACxD,qBAAqB,mBAAO,CAAC,mFAA2B;AACxD,aAAa,mBAAO,CAAC,iEAAkB;AACvC,cAAc,mBAAO,CAAC,mEAAmB;AACzC,WAAW,mBAAO,CAAC,6DAAgB;AACnC,WAAW,mBAAO,CAAC,6DAAgB;AACnC,WAAW,mBAAO,CAAC,6DAAgB;AACnC,YAAY,mBAAO,CAAC,+DAAiB;AACrC,YAAY,mBAAO,CAAC,+DAAiB;AACrC,YAAY,mBAAO,CAAC,+DAAiB;AACrC,YAAY,mBAAO,CAAC,+DAAiB;AACrC,eAAe,mBAAO,CAAC,qEAAoB;AAC3C,mBAAmB,mBAAO,CAAC,yEAAsB;AACjD,cAAc,mBAAO,CAAC,+DAAiB;AACvC,kBAAkB,mBAAO,CAAC,2EAAuB;AACjD,sBAAsB,mBAAO,CAAC,+EAAyB;AACvD,sBAAsB,mBAAO,CAAC,+EAAyB;AACvD,sBAAsB,mBAAO,CAAC,+EAAyB;AACvD,mBAAmB,mBAAO,CAAC,yEAAsB;AACjD,mBAAmB,mBAAO,CAAC,6DAAgB;AAC3C,gBAAgB,mBAAO,CAAC,iEAAkB;AAC1C,YAAY,mBAAO,CAAC,yDAAc;AAClC,YAAY,mBAAO,CAAC,yDAAc;AAClC,mBAAmB,mBAAO,CAAC,uEAAqB;AAChD,sBAAsB,mBAAO,CAAC,mEAAmB;AACjD,eAAe,mBAAO,CAAC,+DAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxFA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACRA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;ACtBA;AACA,oCAAoC,aAAa;AACjD,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA,EAAE,EAAE,mBAAO,CAAC,gEAAa;AACzB,cAAc,mBAAO,CAAC,wDAAS;AAC/B;;AAEA;AACA,WAAW,UAAU;AACrB,eAAe,cAAc;AAC7B,YAAY,WAAW;AACvB,UAAU,SAAS;AACnB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,MAAM,YAAY,OAAO,IAAI,KAAK;AAClD,gBAAgB,MAAM,YAAY,OAAO,IAAI,KAAK;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oDAAoD,iBAAiB;;AAErE;AACA;;AAEA,+BAA+B,yBAAyB;AACxD,uBAAuB,yBAAyB;AAChD,uBAAuB,yBAAyB;;AAEhD,oCAAoC,8BAA8B;AAClE,4BAA4B,8BAA8B;AAC1D,4BAA4B,8BAA8B;;AAE1D;AACA;;AAEA,0CAA0C;AAC1C,CAAC,GAAG,4BAA4B;;AAEhC,+CAA+C;AAC/C,CAAC,GAAG,4BAA4B;;AAEhC;AACA;AACA;;AAEA,kCAAkC;AAClC,CAAC,QAAQ,4BAA4B;;AAErC,wCAAwC;AACxC,CAAC,QAAQ,iCAAiC;;AAE1C;AACA;;AAEA,kCAAkC,iBAAiB;;AAEnD;AACA;AACA;;AAEA,+BAA+B;AAC/B,CAAC,QAAQ,uBAAuB;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8BAA8B;AAC9B,CAAC,EAAE,kBAAkB;AACrB,eAAe;;AAEf,wBAAwB,iBAAiB;;AAEzC;AACA;AACA;AACA,qCAAqC;AACrC,CAAC,EAAE,uBAAuB;AAC1B,eAAe;;AAEf,yBAAyB,kBAAkB;;AAE3C;;AAEA;AACA;AACA;AACA,wCAAwC,8BAA8B;AACtE,mCAAmC,yBAAyB;;AAE5D,uCAAuC,wBAAwB;AAC/D,6BAA6B,wBAAwB;AACrD,6BAA6B,wBAAwB;AACrD,yBAAyB,kBAAkB;AAC3C,kCAAkC;AAClC;;AAEA,4CAA4C,6BAA6B;AACzE,kCAAkC,6BAA6B;AAC/D,kCAAkC,6BAA6B;AAC/D,8BAA8B,uBAAuB;AACrD,uCAAuC;AACvC;;AAEA,0BAA0B,YAAY,MAAM,mBAAmB;AAC/D,+BAA+B,YAAY,MAAM,wBAAwB;;AAEzE;AACA;AACA,8BAA8B;AAC9B,oBAAoB,IAAI,EAAE,2BAA2B;AACrD,0BAA0B,IAAI,2BAA2B;AACzD,0BAA0B,IAAI,2BAA2B;AACzD,yBAAyB,mBAAmB;AAC5C;AACA,oBAAoB,kBAAkB;AACtC,oBAAoB,aAAa;AACjC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,iBAAiB;AACnD,wBAAwB;;AAExB,yBAAyB,iBAAiB,EAAE,mBAAmB;AAC/D,8BAA8B,iBAAiB,EAAE,wBAAwB;;AAEzE;AACA;AACA;;AAEA,kCAAkC,iBAAiB;AACnD,wBAAwB;;AAExB,yBAAyB,iBAAiB,EAAE,mBAAmB;AAC/D,8BAA8B,iBAAiB,EAAE,wBAAwB;;AAEzE;AACA,mCAAmC,YAAY,OAAO,kBAAkB;AACxE,8BAA8B,YAAY,OAAO,iBAAiB;;AAElE;AACA;AACA,uCAAuC;AACvC,CAAC,OAAO,kBAAkB,GAAG,mBAAmB;AAChD,6BAA6B;;AAE7B;AACA;AACA;AACA;AACA,oCAAoC,mBAAmB;AACvD;AACA,uBAAuB,mBAAmB;AAC1C;;AAEA,yCAAyC,wBAAwB;AACjE;AACA,4BAA4B,wBAAwB;AACpD;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxNY;;AAEZ;AACA,gBAAgB,mBAAO,CAAC,sEAAS;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,4BAA4B;;AAE5B,kBAAkB;AAClB,qBAAqB;;AAErB;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7UY;AACZ;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;;;;;;;;;;;;ACPY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ,0CAA0C,OAAO;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,iBAAiB;AACrE;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA;;AAEA,gCAAgC,iBAAiB;AACjD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6BAA6B;AACnE;AACA;AACA,SAAS,2BAA2B;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2BAA2B;AAC3E;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC,8BAA8B;AACpE;AACA;;AAEA;AACA,kBAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,EAAE,mBAAO,CAAC,6EAAe;AACzB,EAAE;;;;;;;;;;;ACzaF;AACA,gBAAgB,mBAAO,CAAC,0DAAW;AACnC;AACA;;;;;;;;;;;ACHA,cAAc,mBAAO,CAAC,gEAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA,gBAAgB,mBAAO,CAAC,0DAAW;AACnC;AACA;AACA;;;;;;;;;;;ACHA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C,cAAc,mBAAO,CAAC,gEAAkB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;ACxBA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C,cAAc,mBAAO,CAAC,gEAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;ACvBA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C,cAAc,mBAAO,CAAC,gEAAkB;AACxC,WAAW,mBAAO,CAAC,8DAAiB;;AAEpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;AC5DA,eAAe,mBAAO,CAAC,kEAAmB;AAC1C,mBAAmB,mBAAO,CAAC,0EAAuB;AAClD,QAAQ,MAAM;AACd,cAAc,mBAAO,CAAC,gEAAkB;AACxC,kBAAkB,mBAAO,CAAC,4EAAwB;AAClD,WAAW,mBAAO,CAAC,8DAAiB;AACpC,WAAW,mBAAO,CAAC,8DAAiB;AACpC,YAAY,mBAAO,CAAC,gEAAkB;AACtC,YAAY,mBAAO,CAAC,gEAAkB;;AAEtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC/EA;AACA;AACA;AACA,kBAAkB,mBAAO,CAAC,+EAA2B;AACrD,gBAAgB,mBAAO,CAAC,2EAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN,uBAAuB,IAAI;AAC3B,MAAM;AACN,uBAAuB,IAAI;AAC3B,MAAM;AACN,qBAAqB,KAAK,IAAI,IAAI;AAClC;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9CA,cAAc,mBAAO,CAAC,mEAAqB;AAC3C,mBAAmB,mBAAO,CAAC,6EAA0B;AACrD,QAAQ,MAAM;AACd,kBAAkB,mBAAO,CAAC,+EAA2B;AACrD,gBAAgB,mBAAO,CAAC,2EAAyB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACtPA,cAAc,mBAAO,CAAC,gEAAkB;;AAExC;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACPA,cAAc,mBAAO,CAAC,gEAAkB;AACxC;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;;ACVa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,oBAAoB,GAAG,aAAa,GAAG,+BAA+B,GAAG,qBAAqB,GAAG,8BAA8B,GAAG,gCAAgC,GAAG,aAAa,GAAG,iBAAiB,GAAG,sBAAsB,GAAG,iBAAiB,GAAG,2BAA2B;AACxS,4BAA4B,mBAAO,CAAC,oGAAgC;AACpE,uDAAsD,EAAE,qCAAqC,qDAAqD,EAAC;AACnJ,kBAAkB,mBAAO,CAAC,wEAAkB;AAC5C,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH,uBAAuB,mBAAO,CAAC,kFAAuB;AACtD,kDAAiD,EAAE,qCAAqC,2CAA2C,EAAC;AACpI,kBAAkB,mBAAO,CAAC,wEAAkB;AAC5C,6CAA4C,EAAE,qCAAqC,iCAAiC,EAAC;AACrH,cAAc,mBAAO,CAAC,gEAAc;AACpC,yCAAwC,EAAE,qCAAqC,yBAAyB,EAAC;AACzG,wBAAwB,mBAAO,CAAC,oFAAwB;AACxD,4DAA2D,EAAE,qCAAqC,sDAAsD,EAAC;AACzJ,0DAAyD,EAAE,qCAAqC,oDAAoD,EAAC;AACrJ,gBAAgB,mBAAO,CAAC,sEAAiB;AACzC,iDAAgD,EAAE,qCAAqC,mCAAmC,EAAC;AAC3H,2DAA0D,EAAE,qCAAqC,6CAA6C,EAAC;AAC/I,cAAc,mBAAO,CAAC,kEAAe;AACrC,yCAAwC,EAAE,qCAAqC,yBAAyB,EAAC;AACzG,gDAA+C,EAAE,qCAAqC,gCAAgC,EAAC;AACvH,qBAAqB,mBAAO,CAAC,gFAAsB;AACnD,gDAA+C,EAAE,qCAAqC,uCAAuC,EAAC;AAC9H;;;;;;;;;;;ACxBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B;AAC5D;AACA;AACA,8BAA8B,yBAAyB;AACvD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iCAAiC,8BAA8B;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;;;;;;;;;;ACjEa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;;ACzDa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,8BAA8B,GAAG,gCAAgC;AACjE,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;;;;;;;;;;;ACtEa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,sBAAsB;AACtB,kBAAkB,mBAAO,CAAC,uEAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;;;;;;;;;;AC5Da;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;;;;;;;;;;AClDa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,yBAAyB,mBAAO,CAAC,6EAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;;;;;;;;;;AChCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB;AACpB;;;;;;;;;;;AC/Ba;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,GAAG,+BAA+B;AACvD,gBAAgB,mBAAO,CAAC,4DAAS;AACjC;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB;AACrB;;;;;;;;;;;AC1Ca;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB,GAAG,aAAa;AACpC;AACA;AACA;AACA,KAAK;AACL;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB;AACpB","sources":["webpack://mytonwallet/./node_modules/@ledgerhq/devices/lib-es/hid-framing.js","webpack://mytonwallet/./node_modules/@ledgerhq/devices/lib-es/index.js","webpack://mytonwallet/./node_modules/@ledgerhq/errors/lib-es/helpers.js","webpack://mytonwallet/./node_modules/@ledgerhq/errors/lib-es/index.js","webpack://mytonwallet/./node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js","webpack://mytonwallet/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js","webpack://mytonwallet/./node_modules/@ledgerhq/hw-transport-webusb/lib-es/webusb.js","webpack://mytonwallet/./node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","webpack://mytonwallet/./node_modules/@ledgerhq/logs/lib-es/index.js","webpack://mytonwallet/./node_modules/@ton-community/ton-ledger/dist/TonTransport.js","webpack://mytonwallet/./node_modules/@ton-community/ton-ledger/dist/index.js","webpack://mytonwallet/./node_modules/@ton-community/ton-ledger/dist/utils/getInit.js","webpack://mytonwallet/./node_modules/@ton-community/ton-ledger/dist/utils/ledgerWriter.js","webpack://mytonwallet/./node_modules/@ton/core/dist/boc/BitReader.js","webpack://mytonwallet/./node_modules/@ton/core/dist/dict/Dictionary.js","webpack://mytonwallet/./node_modules/@ton/core/dist/types/SendMode.js","webpack://mytonwallet/./node_modules/events/events.js","webpack://mytonwallet/./node_modules/semver/classes/comparator.js","webpack://mytonwallet/./node_modules/semver/classes/range.js","webpack://mytonwallet/./node_modules/semver/classes/semver.js","webpack://mytonwallet/./node_modules/semver/functions/clean.js","webpack://mytonwallet/./node_modules/semver/functions/cmp.js","webpack://mytonwallet/./node_modules/semver/functions/coerce.js","webpack://mytonwallet/./node_modules/semver/functions/compare-build.js","webpack://mytonwallet/./node_modules/semver/functions/compare-loose.js","webpack://mytonwallet/./node_modules/semver/functions/compare.js","webpack://mytonwallet/./node_modules/semver/functions/diff.js","webpack://mytonwallet/./node_modules/semver/functions/eq.js","webpack://mytonwallet/./node_modules/semver/functions/gt.js","webpack://mytonwallet/./node_modules/semver/functions/gte.js","webpack://mytonwallet/./node_modules/semver/functions/inc.js","webpack://mytonwallet/./node_modules/semver/functions/lt.js","webpack://mytonwallet/./node_modules/semver/functions/lte.js","webpack://mytonwallet/./node_modules/semver/functions/major.js","webpack://mytonwallet/./node_modules/semver/functions/minor.js","webpack://mytonwallet/./node_modules/semver/functions/neq.js","webpack://mytonwallet/./node_modules/semver/functions/parse.js","webpack://mytonwallet/./node_modules/semver/functions/patch.js","webpack://mytonwallet/./node_modules/semver/functions/prerelease.js","webpack://mytonwallet/./node_modules/semver/functions/rcompare.js","webpack://mytonwallet/./node_modules/semver/functions/rsort.js","webpack://mytonwallet/./node_modules/semver/functions/satisfies.js","webpack://mytonwallet/./node_modules/semver/functions/sort.js","webpack://mytonwallet/./node_modules/semver/functions/valid.js","webpack://mytonwallet/./node_modules/semver/index.js","webpack://mytonwallet/./node_modules/semver/internal/constants.js","webpack://mytonwallet/./node_modules/semver/internal/debug.js","webpack://mytonwallet/./node_modules/semver/internal/identifiers.js","webpack://mytonwallet/./node_modules/semver/internal/parse-options.js","webpack://mytonwallet/./node_modules/semver/internal/re.js","webpack://mytonwallet/./node_modules/semver/node_modules/lru-cache/index.js","webpack://mytonwallet/./node_modules/semver/node_modules/yallist/iterator.js","webpack://mytonwallet/./node_modules/semver/node_modules/yallist/yallist.js","webpack://mytonwallet/./node_modules/semver/ranges/gtr.js","webpack://mytonwallet/./node_modules/semver/ranges/intersects.js","webpack://mytonwallet/./node_modules/semver/ranges/ltr.js","webpack://mytonwallet/./node_modules/semver/ranges/max-satisfying.js","webpack://mytonwallet/./node_modules/semver/ranges/min-satisfying.js","webpack://mytonwallet/./node_modules/semver/ranges/min-version.js","webpack://mytonwallet/./node_modules/semver/ranges/outside.js","webpack://mytonwallet/./node_modules/semver/ranges/simplify.js","webpack://mytonwallet/./node_modules/semver/ranges/subset.js","webpack://mytonwallet/./node_modules/semver/ranges/to-comparators.js","webpack://mytonwallet/./node_modules/semver/ranges/valid.js","webpack://mytonwallet/./node_modules/teslabot/dist/index.js","webpack://mytonwallet/./node_modules/teslabot/dist/iterator/createAsyncIterator.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/AsyncLock.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/ConcurrencyPool.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/InvalidateSync.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/Queue.js","webpack://mytonwallet/./node_modules/teslabot/dist/sync/SyncValue.js","webpack://mytonwallet/./node_modules/teslabot/dist/timer/asyncTimeout.js","webpack://mytonwallet/./node_modules/teslabot/dist/timer/backoff.js","webpack://mytonwallet/./node_modules/teslabot/dist/timer/delay.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nconst Tag = 0x05;\nfunction asUInt16BE(value) {\n    const b = Buffer.alloc(2);\n    b.writeUInt16BE(value, 0);\n    return b;\n}\nconst initialAcc = {\n    data: Buffer.alloc(0),\n    dataLength: 0,\n    sequence: 0,\n};\n/**\n * Object to handle HID frames (encoding and decoding)\n *\n * @param channel\n * @param packetSize The HID protocol packet size in bytes (usually 64)\n */\nconst createHIDframing = (channel, packetSize) => {\n    return {\n        /**\n         * Frames/encodes an APDU message into HID USB packets/frames\n         *\n         * @param apdu The APDU message to send, in a Buffer containing [cla, ins, p1, p2, data length, data(if not empty)]\n         * @returns an array of HID USB frames ready to be sent\n         */\n        makeBlocks(apdu) {\n            // Encodes the APDU length in 2 bytes before the APDU itself.\n            // The length is measured as the number of bytes.\n            // As the size of the APDU `data` should have been added in 1 byte just before `data`,\n            // the minimum size of an APDU is 5 bytes.\n            let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n            const blockSize = packetSize - 5;\n            const nbBlocks = Math.ceil(data.length / blockSize);\n            // Fills data with 0-padding\n            data = Buffer.concat([data, Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0)]);\n            const blocks = [];\n            for (let i = 0; i < nbBlocks; i++) {\n                const head = Buffer.alloc(5);\n                head.writeUInt16BE(channel, 0);\n                head.writeUInt8(Tag, 2);\n                head.writeUInt16BE(i, 3);\n                // `slice` and not `subarray`: this might not be a Node Buffer, but probably only a Uint8Array\n                const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n                blocks.push(Buffer.concat([head, chunk]));\n            }\n            return blocks;\n        },\n        /**\n         * Reduces HID USB packets/frames to one response.\n         *\n         * @param acc The value resulting from (accumulating) the previous call of reduceResponse.\n         *   On first call initialized to `initialAcc`. The accumulator enables handling multi-frames messages.\n         * @param chunk Current chunk to reduce into accumulator\n         * @returns An accumulator value updated with the current chunk\n         */\n        reduceResponse(acc, chunk) {\n            let { data, dataLength, sequence } = acc || initialAcc;\n            if (chunk.readUInt16BE(0) !== channel) {\n                throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n            }\n            if (chunk.readUInt8(2) !== Tag) {\n                throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n            }\n            if (chunk.readUInt16BE(3) !== sequence) {\n                throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n            }\n            // Gets the total length of the response from the 1st frame\n            if (!acc) {\n                dataLength = chunk.readUInt16BE(5);\n            }\n            sequence++;\n            // The total length on the 1st frame takes 2 more bytes\n            const chunkData = chunk.slice(acc ? 5 : 7);\n            data = Buffer.concat([data, chunkData]);\n            // Removes any 0 padding\n            if (data.length > dataLength) {\n                data = data.slice(0, dataLength);\n            }\n            return {\n                data,\n                dataLength,\n                sequence,\n            };\n        },\n        /**\n         * Returns the response message that has been reduced from the HID USB frames\n         *\n         * @param acc The accumulator\n         * @returns A Buffer containing the cleaned response message, or null if no response message, or undefined if the\n         *   accumulator is incorrect (message length is not valid)\n         */\n        getReducedResult(acc) {\n            if (acc && acc.dataLength === acc.data.length) {\n                return acc.data;\n            }\n        },\n    };\n};\nexport default createHIDframing;\n//# sourceMappingURL=hid-framing.js.map","import semver from \"semver\";\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\nexport var DeviceModelId;\n(function (DeviceModelId) {\n    DeviceModelId[\"blue\"] = \"blue\";\n    DeviceModelId[\"nanoS\"] = \"nanoS\";\n    DeviceModelId[\"nanoSP\"] = \"nanoSP\";\n    DeviceModelId[\"nanoX\"] = \"nanoX\";\n    DeviceModelId[\"stax\"] = \"stax\";\n})(DeviceModelId || (DeviceModelId = {}));\nconst devices = {\n    [DeviceModelId.blue]: {\n        id: DeviceModelId.blue,\n        productName: \"Ledger Blue\",\n        productIdMM: 0x00,\n        legacyUsbProductId: 0x0000,\n        usbOnly: true,\n        memorySize: 480 * 1024,\n        masks: [0x31000000, 0x31010000],\n        getBlockSize: (_firwareVersion) => 4 * 1024,\n    },\n    [DeviceModelId.nanoS]: {\n        id: DeviceModelId.nanoS,\n        productName: \"Ledger Nano S\",\n        productIdMM: 0x10,\n        legacyUsbProductId: 0x0001,\n        usbOnly: true,\n        memorySize: 320 * 1024,\n        masks: [0x31100000],\n        getBlockSize: (firmwareVersion) => { var _a; return semver.lt((_a = semver.coerce(firmwareVersion)) !== null && _a !== void 0 ? _a : \"\", \"2.0.0\") ? 4 * 1024 : 2 * 1024; },\n    },\n    [DeviceModelId.nanoSP]: {\n        id: DeviceModelId.nanoSP,\n        productName: \"Ledger Nano S Plus\",\n        productIdMM: 0x50,\n        legacyUsbProductId: 0x0005,\n        usbOnly: true,\n        memorySize: 1536 * 1024,\n        masks: [0x33100000],\n        getBlockSize: (_firmwareVersion) => 32,\n    },\n    [DeviceModelId.nanoX]: {\n        id: DeviceModelId.nanoX,\n        productName: \"Ledger Nano X\",\n        productIdMM: 0x40,\n        legacyUsbProductId: 0x0004,\n        usbOnly: false,\n        memorySize: 2 * 1024 * 1024,\n        masks: [0x33000000],\n        getBlockSize: (_firwareVersion) => 4 * 1024,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n            },\n        ],\n    },\n    [DeviceModelId.stax]: {\n        id: DeviceModelId.stax,\n        productName: \"Ledger Stax\",\n        productIdMM: 0x60,\n        legacyUsbProductId: 0x0006,\n        usbOnly: false,\n        memorySize: 1536 * 1024,\n        masks: [0x33200000],\n        getBlockSize: (_firmwareVersion) => 32,\n        bluetoothSpec: [\n            {\n                serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n                notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n                writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n                writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n            },\n        ],\n    },\n};\nconst productMap = {\n    Blue: DeviceModelId.blue,\n    \"Nano S\": DeviceModelId.nanoS,\n    \"Nano S Plus\": DeviceModelId.nanoSP,\n    \"Nano X\": DeviceModelId.nanoX,\n    Stax: DeviceModelId.stax,\n};\nconst devicesList = Object.values(devices);\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n/**\n *\n */\nexport const getDeviceModel = (id) => {\n    const info = devices[id];\n    if (!info)\n        throw new Error(\"device '\" + id + \"' does not exist\");\n    return info;\n};\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (targetId) => {\n    const deviceModel = devicesList.find(({ masks }) => masks.find(mask => (targetId & 0xffff0000) === mask));\n    return deviceModel;\n};\n/**\n * From a given USB product id, return the deviceModel associated to it.\n *\n * The mapping from the product id is only based on the 2 most significant bytes.\n * For example, Stax is defined with a product id of 0x60ii, a product id 0x6011 would be mapped to it.\n */\nexport const identifyUSBProductId = (usbProductId) => {\n    const legacy = devicesList.find(d => d.legacyUsbProductId === usbProductId);\n    if (legacy)\n        return legacy;\n    const mm = usbProductId >> 8;\n    const deviceModel = devicesList.find(d => d.productIdMM === mm);\n    return deviceModel;\n};\nexport const identifyProductName = (productName) => {\n    const deviceModel = devicesList.find(d => d.id === productMap[productName]);\n    return deviceModel;\n};\nconst bluetoothServices = [];\nconst serviceUuidToInfos = {};\nfor (const id in devices) {\n    const deviceModel = devices[id];\n    const { bluetoothSpec } = deviceModel;\n    if (bluetoothSpec) {\n        for (let i = 0; i < bluetoothSpec.length; i++) {\n            const spec = bluetoothSpec[i];\n            bluetoothServices.push(spec.serviceUuid);\n            serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = Object.assign({ deviceModel }, spec);\n        }\n    }\n}\n/**\n *\n */\nexport const getBluetoothServiceUuids = () => bluetoothServices;\n/**\n *\n */\nexport const getInfosForServiceUuid = (uuid) => serviceUuidToInfos[uuid.toLowerCase()];\n//# sourceMappingURL=index.js.map","/* eslint-disable no-continue */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-prototype-builtins */\nconst errorClasses = {};\nconst deserializers = {};\nexport const addCustomErrorDeserializer = (name, deserializer) => {\n    deserializers[name] = deserializer;\n};\nexport const createCustomErrorClass = (name) => {\n    class CustomErrorClass extends Error {\n        constructor(message, fields, options) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            super(message || name, options);\n            // Set the prototype explicitly. See https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n            Object.setPrototypeOf(this, CustomErrorClass.prototype);\n            this.name = name;\n            if (fields) {\n                for (const k in fields) {\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    this[k] = fields[k];\n                }\n            }\n            if (options && isObject(options) && \"cause\" in options && !(\"cause\" in this)) {\n                // .cause was specified but the superconstructor\n                // did not create an instance property.\n                const cause = options.cause;\n                this.cause = cause;\n                if (\"stack\" in cause) {\n                    this.stack = this.stack + \"\\nCAUSE: \" + cause.stack;\n                }\n            }\n        }\n    }\n    errorClasses[name] = CustomErrorClass;\n    return CustomErrorClass;\n};\nfunction isObject(value) {\n    return typeof value === \"object\";\n}\n// inspired from https://github.com/programble/errio/blob/master/index.js\nexport const deserializeError = (object) => {\n    if (object && typeof object === \"object\") {\n        try {\n            if (typeof object.message === \"string\") {\n                const msg = JSON.parse(object.message);\n                if (msg.message && msg.name) {\n                    object = msg;\n                }\n            }\n        }\n        catch (e) {\n            // nothing\n        }\n        let error;\n        if (typeof object.name === \"string\") {\n            const { name } = object;\n            const des = deserializers[name];\n            if (des) {\n                error = des(object);\n            }\n            else {\n                let constructor = name === \"Error\" ? Error : errorClasses[name];\n                if (!constructor) {\n                    console.warn(\"deserializing an unknown class '\" + name + \"'\");\n                    constructor = createCustomErrorClass(name);\n                }\n                error = Object.create(constructor.prototype);\n                try {\n                    for (const prop in object) {\n                        if (object.hasOwnProperty(prop)) {\n                            error[prop] = object[prop];\n                        }\n                    }\n                }\n                catch (e) {\n                    // sometimes setting a property can fail (e.g. .name)\n                }\n            }\n        }\n        else {\n            if (typeof object.message === \"string\") {\n                error = new Error(object.message);\n            }\n        }\n        if (error && !error.stack && Error.captureStackTrace) {\n            Error.captureStackTrace(error, deserializeError);\n        }\n        return error;\n    }\n    return new Error(String(object));\n};\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\nexport const serializeError = (value) => {\n    if (!value)\n        return value;\n    if (typeof value === \"object\") {\n        return destroyCircular(value, []);\n    }\n    if (typeof value === \"function\") {\n        return `[Function: ${value.name || \"anonymous\"}]`;\n    }\n    return value;\n};\n// https://www.npmjs.com/package/destroy-circular\nfunction destroyCircular(from, seen) {\n    const to = {};\n    seen.push(from);\n    for (const key of Object.keys(from)) {\n        const value = from[key];\n        if (typeof value === \"function\") {\n            continue;\n        }\n        if (!value || typeof value !== \"object\") {\n            to[key] = value;\n            continue;\n        }\n        if (seen.indexOf(from[key]) === -1) {\n            to[key] = destroyCircular(from[key], seen.slice(0));\n            continue;\n        }\n        to[key] = \"[Circular]\";\n    }\n    if (typeof from.name === \"string\") {\n        to.name = from.name;\n    }\n    if (typeof from.message === \"string\") {\n        to.message = from.message;\n    }\n    if (typeof from.stack === \"string\") {\n        to.stack = from.stack;\n    }\n    return to;\n}\n//# sourceMappingURL=helpers.js.map","import { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer, } from \"./helpers\";\nexport { serializeError, deserializeError, createCustomErrorClass, addCustomErrorDeserializer };\nexport const AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\nexport const AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\nexport const AmountRequired = createCustomErrorClass(\"AmountRequired\");\nexport const BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\nexport const BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\nexport const CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\nexport const CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\nexport const ClaimRewardsFeesWarning = createCustomErrorClass(\"ClaimRewardsFeesWarning\");\nexport const CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\nexport const DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\nexport const DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\nexport const DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\nexport const DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\nexport const DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\nexport const DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\nexport const DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\nexport const DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\nexport const DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\nexport const DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const DeviceNeedsRestart = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\nexport const UnresponsiveDeviceError = createCustomErrorClass(\"UnresponsiveDeviceError\");\nexport const DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\nexport const DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\nexport const DeviceExtractOnboardingStateError = createCustomErrorClass(\"DeviceExtractOnboardingStateError\");\nexport const DeviceOnboardingStatePollingError = createCustomErrorClass(\"DeviceOnboardingStatePollingError\");\nexport const EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\nexport const EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\nexport const FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\nexport const FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\nexport const HardResetFail = createCustomErrorClass(\"HardResetFail\");\nexport const InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\nexport const InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\nexport const InvalidNonce = createCustomErrorClass(\"InvalidNonce\");\nexport const InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\nexport const LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\nexport const UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\nexport const LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\nexport const LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\nexport const LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\nexport const ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\nexport const ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\nexport const ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\nexport const ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\nexport const ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\nexport const ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\nexport const ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\nexport const ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\nexport const NetworkDown = createCustomErrorClass(\"NetworkDown\");\nexport const NetworkError = createCustomErrorClass(\"NetworkError\");\nexport const NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\nexport const NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\nexport const NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\nexport const NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\nexport const NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\nexport const NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\nexport const NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\nexport const NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\n// Error message specifically for the PTX swap flow\nexport const NotEnoughGasSwap = createCustomErrorClass(\"NotEnoughGasSwap\");\nexport const NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\nexport const GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\nexport const PriorityFeeTooLow = createCustomErrorClass(\"PriorityFeeTooLow\");\nexport const PriorityFeeTooHigh = createCustomErrorClass(\"PriorityFeeTooHigh\");\nexport const PriorityFeeHigherThanMaxFee = createCustomErrorClass(\"PriorityFeeHigherThanMaxFee\");\nexport const MaxFeeTooLow = createCustomErrorClass(\"MaxFeeTooLow\");\nexport const PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\nexport const PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\nexport const RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\nexport const RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\nexport const TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\nexport const UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\nexport const MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\nexport const RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\nexport const UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\nexport const UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\nexport const UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\nexport const UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\nexport const UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\nexport const UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\nexport const UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\nexport const UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\nexport const UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\nexport const UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\nexport const UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\nexport const ExpertModeRequired = createCustomErrorClass(\"ExpertModeRequired\");\nexport const TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\nexport const TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\nexport const TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\nexport const TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\nexport const TransactionHasBeenValidatedError = createCustomErrorClass(\"TransactionHasBeenValidatedError\");\nexport const TransportExchangeTimeoutError = createCustomErrorClass(\"TransportExchangeTimeoutError\");\nexport const DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\nexport const WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\nexport const WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\nexport const WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\nexport const WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\nexport const ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\nexport const CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\nexport const FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\nexport const FeeNotLoadedSwap = createCustomErrorClass(\"FeeNotLoadedSwap\");\nexport const FeeRequired = createCustomErrorClass(\"FeeRequired\");\nexport const FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\nexport const PendingOperation = createCustomErrorClass(\"PendingOperation\");\nexport const SyncError = createCustomErrorClass(\"SyncError\");\nexport const PairingFailed = createCustomErrorClass(\"PairingFailed\");\nexport const PeerRemovedPairing = createCustomErrorClass(\"PeerRemovedPairing\");\nexport const GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\nexport const LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\nexport const LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\nexport const FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\n// SpeedUp / Cancel EVM tx\nexport const ReplacementTransactionUnderpriced = createCustomErrorClass(\"ReplacementTransactionUnderpriced\");\n// Bitcoin family\nexport const OpReturnDataSizeLimit = createCustomErrorClass(\"OpReturnSizeLimit\");\nexport const DustLimit = createCustomErrorClass(\"DustLimit\");\n// Language\nexport const LanguageNotFound = createCustomErrorClass(\"LanguageNotFound\");\n// db stuff, no need to translate\nexport const NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\nexport const DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\nexport const DBNotReset = createCustomErrorClass(\"DBNotReset\");\n/**\n * Type of a Transport error used to represent all equivalent errors coming from all possible implementation of Transport\n */\nexport var HwTransportErrorType;\n(function (HwTransportErrorType) {\n    HwTransportErrorType[\"Unknown\"] = \"Unknown\";\n    HwTransportErrorType[\"LocationServicesDisabled\"] = \"LocationServicesDisabled\";\n    HwTransportErrorType[\"LocationServicesUnauthorized\"] = \"LocationServicesUnauthorized\";\n    HwTransportErrorType[\"BluetoothScanStartFailed\"] = \"BluetoothScanStartFailed\";\n})(HwTransportErrorType || (HwTransportErrorType = {}));\n/**\n * Represents an error coming from the usage of any Transport implementation.\n *\n * Needed to map a specific implementation error into an error that\n * can be managed by any code unaware of the specific Transport implementation\n * that was used.\n */\nexport class HwTransportError extends Error {\n    constructor(type, message) {\n        super(message);\n        this.name = \"HwTransportError\";\n        this.type = type;\n        // Needed as long as we target < ES6\n        Object.setPrototypeOf(this, HwTransportError.prototype);\n    }\n}\n/**\n * TransportError is used for any generic transport errors.\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\n */\nexport class TransportError extends Error {\n    constructor(message, id) {\n        const name = \"TransportError\";\n        super(message || name);\n        this.name = name;\n        this.message = message;\n        this.stack = new Error(message).stack;\n        this.id = id;\n    }\n}\naddCustomErrorDeserializer(\"TransportError\", e => new TransportError(e.message, e.id));\nexport const StatusCodes = {\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\n    CLA_NOT_SUPPORTED: 0x6e00,\n    CODE_BLOCKED: 0x9840,\n    CODE_NOT_INITIALIZED: 0x9802,\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\n    CONTRADICTION_INVALIDATION: 0x9810,\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\n    CUSTOM_IMAGE_BOOTLOADER: 0x662f,\n    CUSTOM_IMAGE_EMPTY: 0x662e,\n    FILE_ALREADY_EXISTS: 0x6a89,\n    FILE_NOT_FOUND: 0x9404,\n    GP_AUTH_FAILED: 0x6300,\n    HALTED: 0x6faa,\n    INCONSISTENT_FILE: 0x9408,\n    INCORRECT_DATA: 0x6a80,\n    INCORRECT_LENGTH: 0x6700,\n    INCORRECT_P1_P2: 0x6b00,\n    INS_NOT_SUPPORTED: 0x6d00,\n    DEVICE_NOT_ONBOARDED: 0x6d07,\n    DEVICE_NOT_ONBOARDED_2: 0x6611,\n    INVALID_KCV: 0x9485,\n    INVALID_OFFSET: 0x9402,\n    LICENSING: 0x6f42,\n    LOCKED_DEVICE: 0x5515,\n    MAX_VALUE_REACHED: 0x9850,\n    MEMORY_PROBLEM: 0x9240,\n    MISSING_CRITICAL_PARAMETER: 0x6800,\n    NO_EF_SELECTED: 0x9400,\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\n    OK: 0x9000,\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\n    TECHNICAL_PROBLEM: 0x6f00,\n    UNKNOWN_APDU: 0x6d02,\n    USER_REFUSED_ON_DEVICE: 0x5501,\n    NOT_ENOUGH_SPACE: 0x5102,\n};\nexport function getAltStatusMessage(code) {\n    switch (code) {\n        // improve text of most common errors\n        case 0x6700:\n            return \"Incorrect length\";\n        case 0x6800:\n            return \"Missing critical parameter\";\n        case 0x6982:\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\n        case 0x6985:\n            return \"Condition of use not satisfied (denied by the user?)\";\n        case 0x6a80:\n            return \"Invalid data received\";\n        case 0x6b00:\n            return \"Invalid parameter received\";\n        case 0x5515:\n            return \"Locked device\";\n    }\n    if (0x6f00 <= code && code <= 0x6fff) {\n        return \"Internal error, please report\";\n    }\n}\n/**\n * Error thrown when a device returned a non success status.\n * the error.statusCode is one of the `StatusCodes` exported by this library.\n */\nexport class TransportStatusError extends Error {\n    /**\n     * @param statusCode The error status code coming from a Transport implementation\n     * @param options containing:\n     *  - canBeMappedToChildError: enable the mapping of TransportStatusError to an error extending/inheriting from it\n     *  . Ex: LockedDeviceError. Default to true.\n     */\n    constructor(statusCode, { canBeMappedToChildError = true } = {}) {\n        const statusText = Object.keys(StatusCodes).find(k => StatusCodes[k] === statusCode) || \"UNKNOWN_ERROR\";\n        const smsg = getAltStatusMessage(statusCode) || statusText;\n        const statusCodeStr = statusCode.toString(16);\n        const message = `Ledger device: ${smsg} (0x${statusCodeStr})`;\n        super(message);\n        this.name = \"TransportStatusError\";\n        this.statusCode = statusCode;\n        this.statusText = statusText;\n        // Maps to a LockedDeviceError\n        if (canBeMappedToChildError && statusCode === StatusCodes.LOCKED_DEVICE) {\n            return new LockedDeviceError(message);\n        }\n    }\n}\nexport class LockedDeviceError extends TransportStatusError {\n    constructor(message) {\n        super(StatusCodes.LOCKED_DEVICE, { canBeMappedToChildError: false });\n        if (message) {\n            this.message = message;\n        }\n        this.name = \"LockedDeviceError\";\n    }\n}\naddCustomErrorDeserializer(\"TransportStatusError\", e => new TransportStatusError(e.statusCode));\n//# sourceMappingURL=index.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Transport from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportOpenUserCancelled, DisconnectedDeviceDuringOperation, DisconnectedDevice, TransportError, } from \"@ledgerhq/errors\";\nconst ledgerDevices = [\n    {\n        vendorId: ledgerUSBVendorId,\n    },\n];\nconst isSupported = () => Promise.resolve(!!(window.navigator && window.navigator.hid));\nconst getHID = () => {\n    // $FlowFixMe\n    const { hid } = navigator;\n    if (!hid)\n        throw new TransportError(\"navigator.hid is not supported\", \"HIDNotSupported\");\n    return hid;\n};\nfunction requestLedgerDevices() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const device = yield getHID().requestDevice({\n            filters: ledgerDevices,\n        });\n        if (Array.isArray(device))\n            return device;\n        return [device];\n    });\n}\nfunction getLedgerDevices() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const devices = yield getHID().getDevices();\n        return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n    });\n}\nfunction getFirstLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const existingDevices = yield getLedgerDevices();\n        if (existingDevices.length > 0)\n            return existingDevices[0];\n        const devices = yield requestLedgerDevices();\n        return devices[0];\n    });\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\nclass TransportWebHID extends Transport {\n    constructor(device) {\n        super();\n        this.channel = Math.floor(Math.random() * 0xffff);\n        this.packetSize = 64;\n        this.inputs = [];\n        this.read = () => {\n            if (this.inputs.length) {\n                return Promise.resolve(this.inputs.shift());\n            }\n            return new Promise(success => {\n                this.inputCallback = success;\n            });\n        };\n        this.onInputReport = (e) => {\n            const buffer = Buffer.from(e.data.buffer);\n            if (this.inputCallback) {\n                this.inputCallback(buffer);\n                this.inputCallback = null;\n            }\n            else {\n                this.inputs.push(buffer);\n            }\n        };\n        this._disconnectEmitted = false;\n        this._emitDisconnect = (e) => {\n            if (this._disconnectEmitted)\n                return;\n            this._disconnectEmitted = true;\n            this.emit(\"disconnect\", e);\n        };\n        /**\n         * Exchange with the device using APDU protocol.\n         * @param apdu\n         * @returns a promise of apdu response\n         */\n        this.exchange = (apdu) => __awaiter(this, void 0, void 0, function* () {\n            const b = yield this.exchangeAtomicImpl(() => __awaiter(this, void 0, void 0, function* () {\n                const { channel, packetSize } = this;\n                log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n                const framing = hidFraming(channel, packetSize);\n                // Write...\n                const blocks = framing.makeBlocks(apdu);\n                for (let i = 0; i < blocks.length; i++) {\n                    yield this.device.sendReport(0, blocks[i]);\n                }\n                // Read...\n                let result;\n                let acc;\n                while (!(result = framing.getReducedResult(acc))) {\n                    const buffer = yield this.read();\n                    acc = framing.reduceResponse(acc, buffer);\n                }\n                log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n                return result;\n            })).catch(e => {\n                if (e && e.message && e.message.includes(\"write\")) {\n                    this._emitDisconnect(e);\n                    throw new DisconnectedDeviceDuringOperation(e.message);\n                }\n                throw e;\n            });\n            return b;\n        });\n        this.device = device;\n        this.deviceModel =\n            typeof device.productId === \"number\" ? identifyUSBProductId(device.productId) : undefined;\n        device.addEventListener(\"inputreport\", this.onInputReport);\n    }\n    /**\n     * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n     */\n    static request() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const [device] = yield requestLedgerDevices();\n            return TransportWebHID.open(device);\n        });\n    }\n    /**\n     * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n     */\n    static openConnected() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const devices = yield getLedgerDevices();\n            if (devices.length === 0)\n                return null;\n            return TransportWebHID.open(devices[0]);\n        });\n    }\n    /**\n     * Create a Ledger transport with a HIDDevice\n     */\n    static open(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield device.open();\n            const transport = new TransportWebHID(device);\n            const onDisconnect = e => {\n                if (device === e.device) {\n                    getHID().removeEventListener(\"disconnect\", onDisconnect);\n                    transport._emitDisconnect(new DisconnectedDevice());\n                }\n            };\n            getHID().addEventListener(\"disconnect\", onDisconnect);\n            return transport;\n        });\n    }\n    /**\n     * Release the transport device\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.exchangeBusyPromise;\n            this.device.removeEventListener(\"inputreport\", this.onInputReport);\n            yield this.device.close();\n        });\n    }\n    setScrambleKey() { }\n}\n/**\n * Check if WebUSB transport is supported.\n */\nTransportWebHID.isSupported = isSupported;\n/**\n * List the WebUSB devices that was previously authorized by the user.\n */\nTransportWebHID.list = getLedgerDevices;\n/**\n * Actively listen to WebUSB devices and emit ONE device\n * that was either accepted before, if not it will trigger the native permission UI.\n *\n * Important: it must be called in the context of a UI click!\n */\nTransportWebHID.listen = (observer) => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(device => {\n        if (!device) {\n            observer.error(new TransportOpenUserCancelled(\"Access denied to use Ledger device\"));\n        }\n        else if (!unsubscribed) {\n            const deviceModel = typeof device.productId === \"number\"\n                ? identifyUSBProductId(device.productId)\n                : undefined;\n            observer.next({\n                type: \"add\",\n                descriptor: device,\n                deviceModel,\n            });\n            observer.complete();\n        }\n    }, error => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n    });\n    function unsubscribe() {\n        unsubscribed = true;\n    }\n    return {\n        unsubscribe,\n    };\n};\nexport default TransportWebHID;\n//# sourceMappingURL=TransportWebHID.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Transport from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/hid-framing\";\nimport { identifyUSBProductId } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport { TransportOpenUserCancelled, TransportInterfaceNotAvailable, TransportWebUSBGestureRequired, DisconnectedDeviceDuringOperation, DisconnectedDevice, } from \"@ledgerhq/errors\";\nimport { getLedgerDevices, getFirstLedgerDevice, requestLedgerDevice, isSupported } from \"./webusb\";\nconst configurationValue = 1;\nconst endpointNumber = 3;\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */\nclass TransportWebUSB extends Transport {\n    constructor(device, interfaceNumber) {\n        super();\n        this.channel = Math.floor(Math.random() * 0xffff);\n        this.packetSize = 64;\n        this._disconnectEmitted = false;\n        this._emitDisconnect = (e) => {\n            if (this._disconnectEmitted)\n                return;\n            this._disconnectEmitted = true;\n            this.emit(\"disconnect\", e);\n        };\n        this.device = device;\n        this.interfaceNumber = interfaceNumber;\n        this.deviceModel = identifyUSBProductId(device.productId);\n    }\n    /**\n     * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n     */\n    static request() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const device = yield requestLedgerDevice();\n            return TransportWebUSB.open(device);\n        });\n    }\n    /**\n     * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n     */\n    static openConnected() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const devices = yield getLedgerDevices();\n            if (devices.length === 0)\n                return null;\n            return TransportWebUSB.open(devices[0]);\n        });\n    }\n    /**\n     * Create a Ledger transport with a USBDevice\n     */\n    static open(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield device.open();\n            if (device.configuration === null) {\n                yield device.selectConfiguration(configurationValue);\n            }\n            yield gracefullyResetDevice(device);\n            const iface = device.configurations[0].interfaces.find(({ alternates }) => alternates.some(a => a.interfaceClass === 255));\n            if (!iface) {\n                throw new TransportInterfaceNotAvailable(\"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\");\n            }\n            const interfaceNumber = iface.interfaceNumber;\n            try {\n                yield device.claimInterface(interfaceNumber);\n            }\n            catch (e) {\n                yield device.close();\n                throw new TransportInterfaceNotAvailable(e.message);\n            }\n            const transport = new TransportWebUSB(device, interfaceNumber);\n            const onDisconnect = e => {\n                if (device === e.device) {\n                    // $FlowFixMe\n                    navigator.usb.removeEventListener(\"disconnect\", onDisconnect);\n                    transport._emitDisconnect(new DisconnectedDevice());\n                }\n            };\n            // $FlowFixMe\n            navigator.usb.addEventListener(\"disconnect\", onDisconnect);\n            return transport;\n        });\n    }\n    /**\n     * Release the transport device\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.exchangeBusyPromise;\n            yield this.device.releaseInterface(this.interfaceNumber);\n            yield gracefullyResetDevice(this.device);\n            yield this.device.close();\n        });\n    }\n    /**\n     * Exchange with the device using APDU protocol.\n     * @param apdu\n     * @returns a promise of apdu response\n     */\n    exchange(apdu) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const b = yield this.exchangeAtomicImpl(() => __awaiter(this, void 0, void 0, function* () {\n                const { channel, packetSize } = this;\n                log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n                const framing = hidFraming(channel, packetSize);\n                // Write...\n                const blocks = framing.makeBlocks(apdu);\n                for (let i = 0; i < blocks.length; i++) {\n                    yield this.device.transferOut(endpointNumber, blocks[i]);\n                }\n                // Read...\n                let result;\n                let acc;\n                while (!(result = framing.getReducedResult(acc))) {\n                    const r = yield this.device.transferIn(endpointNumber, packetSize);\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    const buffer = Buffer.from(r.data.buffer);\n                    acc = framing.reduceResponse(acc, buffer);\n                }\n                log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n                return result;\n            })).catch(e => {\n                if (e && e.message && e.message.includes(\"disconnected\")) {\n                    this._emitDisconnect(e);\n                    throw new DisconnectedDeviceDuringOperation(e.message);\n                }\n                throw e;\n            });\n            return b;\n        });\n    }\n    setScrambleKey() { }\n}\n/**\n * Check if WebUSB transport is supported.\n */\nTransportWebUSB.isSupported = isSupported;\n/**\n * List the WebUSB devices that was previously authorized by the user.\n */\nTransportWebUSB.list = getLedgerDevices;\n/**\n * Actively listen to WebUSB devices and emit ONE device\n * that was either accepted before, if not it will trigger the native permission UI.\n *\n * Important: it must be called in the context of a UI click!\n */\nTransportWebUSB.listen = (observer) => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(device => {\n        if (!unsubscribed) {\n            const deviceModel = identifyUSBProductId(device.productId);\n            observer.next({\n                type: \"add\",\n                descriptor: device,\n                deviceModel,\n            });\n            observer.complete();\n        }\n    }, error => {\n        if (window.DOMException && error instanceof window.DOMException && error.code === 18) {\n            observer.error(new TransportWebUSBGestureRequired(error.message));\n        }\n        else {\n            observer.error(new TransportOpenUserCancelled(error.message));\n        }\n    });\n    function unsubscribe() {\n        unsubscribed = true;\n    }\n    return {\n        unsubscribe,\n    };\n};\nexport default TransportWebUSB;\nfunction gracefullyResetDevice(device) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield device.reset();\n        }\n        catch (err) {\n            console.warn(err);\n        }\n    });\n}\n//# sourceMappingURL=TransportWebUSB.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\nconst ledgerDevices = [\n    {\n        vendorId: ledgerUSBVendorId,\n    },\n];\nexport function requestLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const device = yield navigator.usb.requestDevice({\n            filters: ledgerDevices,\n        });\n        return device;\n    });\n}\nexport function getLedgerDevices() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const devices = yield navigator.usb.getDevices();\n        return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n    });\n}\nexport function getFirstLedgerDevice() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const existingDevices = yield getLedgerDevices();\n        if (existingDevices.length > 0)\n            return existingDevices[0];\n        return requestLedgerDevice();\n    });\n}\nexport const isSupported = () => Promise.resolve(!!navigator && !!navigator.usb && typeof navigator.usb.getDevices === \"function\");\n//# sourceMappingURL=webusb.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport EventEmitter from \"events\";\nimport { TransportRaceCondition, TransportError, StatusCodes, getAltStatusMessage, TransportStatusError, } from \"@ledgerhq/errors\";\nimport { LocalTracer } from \"@ledgerhq/logs\";\nexport { TransportError, TransportStatusError, StatusCodes, getAltStatusMessage };\nconst DEFAULT_LOG_TYPE = \"transport\";\n/**\n * The Transport class defines a generic interface for communicating with a Ledger hardware wallet.\n * There are different kind of transports based on the technology (channels like U2F, HID, Bluetooth, Webusb) and environment (Node, Web,...).\n * It is an abstract class that needs to be implemented.\n */\nclass Transport {\n    constructor({ context, logType } = {}) {\n        this.exchangeTimeout = 30000;\n        this.unresponsiveTimeout = 15000;\n        this.deviceModel = null;\n        this._events = new EventEmitter();\n        /**\n         * Send data to the device using the higher level API.\n         *\n         * @param {number} cla - The instruction class for the command.\n         * @param {number} ins - The instruction code for the command.\n         * @param {number} p1 - The first parameter for the instruction.\n         * @param {number} p2 - The second parameter for the instruction.\n         * @param {Buffer} data - The data to be sent. Defaults to an empty buffer.\n         * @param {Array<number>} statusList - A list of acceptable status codes for the response. Defaults to [StatusCodes.OK].\n         * @param {Object} options - Contains optional options for the exchange function\n         *  - abortTimeoutMs: stop the send after a given timeout. Another timeout exists\n         *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n         * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n         */\n        this.send = (cla, ins, p1, p2, data = Buffer.alloc(0), statusList = [StatusCodes.OK], { abortTimeoutMs } = {}) => __awaiter(this, void 0, void 0, function* () {\n            const tracer = this.tracer.withUpdatedContext({ function: \"send\" });\n            if (data.length >= 256) {\n                tracer.trace(\"data.length exceeded 256 bytes limit\", { dataLength: data.length });\n                throw new TransportError(\"data.length exceed 256 bytes limit. Got: \" + data.length, \"DataLengthTooBig\");\n            }\n            tracer.trace(\"Starting an exchange\", { abortTimeoutMs });\n            const response = yield this.exchange(\n            // The size of the data is added in 1 byte just before `data`\n            Buffer.concat([Buffer.from([cla, ins, p1, p2]), Buffer.from([data.length]), data]), { abortTimeoutMs });\n            tracer.trace(\"Received response from exchange\");\n            const sw = response.readUInt16BE(response.length - 2);\n            if (!statusList.some(s => s === sw)) {\n                throw new TransportStatusError(sw);\n            }\n            return response;\n        });\n        this._appAPIlock = null;\n        this.tracer = new LocalTracer(logType !== null && logType !== void 0 ? logType : DEFAULT_LOG_TYPE, context);\n    }\n    /**\n     * Send data to the device using a low level API.\n     * It's recommended to use the \"send\" method for a higher level API.\n     * @param {Buffer} apdu - The data to send.\n     * @param {Object} options - Contains optional options for the exchange function\n     *  - abortTimeoutMs: stop the exchange after a given timeout. Another timeout exists\n     *    to detect unresponsive device (see `unresponsiveTimeout`). This timeout aborts the exchange.\n     * @returns {Promise<Buffer>} A promise that resolves with the response data from the device.\n     */\n    exchange(_apdu, { abortTimeoutMs: _abortTimeoutMs } = {}) {\n        throw new Error(\"exchange not implemented\");\n    }\n    /**\n     * Send apdus in batch to the device using a low level API.\n     * The default implementation is to call exchange for each apdu.\n     * @param {Array<Buffer>} apdus - array of apdus to send.\n     * @param {Observer<Buffer>} observer - an observer that will receive the response of each apdu.\n     * @returns {Subscription} A Subscription object on which you can call \".unsubscribe()\" to stop sending apdus.\n     */\n    exchangeBulk(apdus, observer) {\n        let unsubscribed = false;\n        const unsubscribe = () => {\n            unsubscribed = true;\n        };\n        const main = () => __awaiter(this, void 0, void 0, function* () {\n            if (unsubscribed)\n                return;\n            for (const apdu of apdus) {\n                const r = yield this.exchange(apdu);\n                if (unsubscribed)\n                    return;\n                const status = r.readUInt16BE(r.length - 2);\n                if (status !== StatusCodes.OK) {\n                    throw new TransportStatusError(status);\n                }\n                observer.next(r);\n            }\n        });\n        main().then(() => !unsubscribed && observer.complete(), e => !unsubscribed && observer.error(e));\n        return { unsubscribe };\n    }\n    /**\n     * Set the \"scramble key\" for the next data exchanges with the device.\n     * Each app can have a different scramble key and it is set internally during instantiation.\n     * @param {string} key - The scramble key to set.\n     * deprecated This method is no longer needed for modern transports and should be migrated away from.\n     * no @ before deprecated as it breaks documentationjs on version 14.0.2\n     * https://github.com/documentationjs/documentation/issues/1596\n     */\n    setScrambleKey(_key) { }\n    /**\n     * Close the connection with the device.\n     * @returns {Promise<void>} A promise that resolves when the transport is closed.\n     */\n    close() {\n        return Promise.resolve();\n    }\n    /**\n     * Listen for an event on the transport instance.\n     * Transport implementations may have specific events. Common events include:\n     * \"disconnect\" : triggered when the transport is disconnected.\n     * @param {string} eventName - The name of the event to listen for.\n     * @param {(...args: Array<any>) => any} cb - The callback function to be invoked when the event occurs.\n     */\n    on(eventName, cb) {\n        this._events.on(eventName, cb);\n    }\n    /**\n     * Stop listening to an event on an instance of transport.\n     */\n    off(eventName, cb) {\n        this._events.removeListener(eventName, cb);\n    }\n    emit(event, ...args) {\n        this._events.emit(event, ...args);\n    }\n    /**\n     * Enable or not logs of the binary exchange\n     */\n    setDebugMode() {\n        console.warn(\"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\");\n    }\n    /**\n     * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n     */\n    setExchangeTimeout(exchangeTimeout) {\n        this.exchangeTimeout = exchangeTimeout;\n    }\n    /**\n     * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n     */\n    setExchangeUnresponsiveTimeout(unresponsiveTimeout) {\n        this.unresponsiveTimeout = unresponsiveTimeout;\n    }\n    /**\n     * create() allows to open the first descriptor available or\n     * throw if there is none or if timeout is reached.\n     * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n     * @example\n    TransportFoo.create().then(transport => ...)\n     */\n    static create(openTimeout = 3000, listenTimeout) {\n        return new Promise((resolve, reject) => {\n            let found = false;\n            const sub = this.listen({\n                next: e => {\n                    found = true;\n                    if (sub)\n                        sub.unsubscribe();\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    this.open(e.descriptor, openTimeout).then(resolve, reject);\n                },\n                error: e => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    reject(e);\n                },\n                complete: () => {\n                    if (listenTimeoutId)\n                        clearTimeout(listenTimeoutId);\n                    if (!found) {\n                        reject(new TransportError(this.ErrorMessage_NoDeviceFound, \"NoDeviceFound\"));\n                    }\n                },\n            });\n            const listenTimeoutId = listenTimeout\n                ? setTimeout(() => {\n                    sub.unsubscribe();\n                    reject(new TransportError(this.ErrorMessage_ListenTimeout, \"ListenTimeout\"));\n                }, listenTimeout)\n                : null;\n        });\n    }\n    /**\n     * Wrapper to make an exchange \"atomic\" (blocking any other exchange)\n     *\n     * It also handles \"unresponsiveness\" by emitting \"unresponsive\" and \"responsive\" events.\n     *\n     * @param f The exchange job, using the transport to run\n     * @returns a Promise resolving with the output of the given job\n     */\n    exchangeAtomicImpl(f) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tracer = this.tracer.withUpdatedContext({ function: \"exchangeAtomicImpl\" });\n            tracer.trace(\"Starting an atomic APDU exchange\", {\n                unresponsiveTimeout: this.unresponsiveTimeout,\n            });\n            if (this.exchangeBusyPromise) {\n                tracer.trace(\"Atomic exchange is already busy\");\n                throw new TransportRaceCondition(\"An action was already pending on the Ledger device. Please deny or reconnect.\");\n            }\n            // Sets the atomic guard\n            let resolveBusy;\n            const busyPromise = new Promise(r => {\n                resolveBusy = r;\n            });\n            this.exchangeBusyPromise = busyPromise;\n            // The device unresponsiveness handler\n            let unresponsiveReached = false;\n            const timeout = setTimeout(() => {\n                tracer.trace(`Timeout reached, emitting Transport event \"unresponsive\"`, {\n                    unresponsiveTimeout: this.unresponsiveTimeout,\n                });\n                unresponsiveReached = true;\n                this.emit(\"unresponsive\");\n            }, this.unresponsiveTimeout);\n            try {\n                const res = yield f();\n                if (unresponsiveReached) {\n                    tracer.trace(\"Device was unresponsive, emitting responsive\");\n                    this.emit(\"responsive\");\n                }\n                return res;\n            }\n            finally {\n                tracer.trace(\"Finalize, clearing busy guard\");\n                clearTimeout(timeout);\n                if (resolveBusy)\n                    resolveBusy();\n                this.exchangeBusyPromise = null;\n            }\n        });\n    }\n    decorateAppAPIMethods(self, methods, scrambleKey) {\n        for (const methodName of methods) {\n            self[methodName] = this.decorateAppAPIMethod(methodName, self[methodName], self, scrambleKey);\n        }\n    }\n    decorateAppAPIMethod(methodName, f, ctx, scrambleKey) {\n        return (...args) => __awaiter(this, void 0, void 0, function* () {\n            const { _appAPIlock } = this;\n            if (_appAPIlock) {\n                return Promise.reject(new TransportError(\"Ledger Device is busy (lock \" + _appAPIlock + \")\", \"TransportLocked\"));\n            }\n            try {\n                this._appAPIlock = methodName;\n                this.setScrambleKey(scrambleKey);\n                return yield f.apply(ctx, args);\n            }\n            finally {\n                this._appAPIlock = null;\n            }\n        });\n    }\n    /**\n     * Sets the context used by the logging/tracing mechanism\n     *\n     * Useful when re-using (cached) the same Transport instance,\n     * but with a new tracing context.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    setTraceContext(context) {\n        this.tracer = this.tracer.withContext(context);\n    }\n    /**\n     * Updates the context used by the logging/tracing mechanism\n     *\n     * The update only overrides the key-value that are already defined in the current context.\n     *\n     * @param contextToAdd A TraceContext that will be added to the current context\n     */\n    updateTraceContext(contextToAdd) {\n        this.tracer.updateContext(contextToAdd);\n    }\n    /**\n     * Gets the tracing context of the transport instance\n     */\n    getTraceContext() {\n        return this.tracer.getContext();\n    }\n}\nTransport.ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\nTransport.ErrorMessage_NoDeviceFound = \"No Ledger device found\";\nexport default Transport;\n//# sourceMappingURL=Transport.js.map","let id = 0;\nconst subscribers = [];\n/**\n * Logs something\n *\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type, message, data) => {\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date(),\n    };\n    if (message)\n        obj.message = message;\n    if (data)\n        obj.data = data;\n    dispatch(obj);\n};\n/**\n * A simple tracer function, only expanding the existing log function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param context Anything representing the context where the log occurred\n */\nexport const trace = ({ type, message, data, context, }) => {\n    const obj = {\n        type,\n        id: String(++id),\n        date: new Date(),\n    };\n    if (message)\n        obj.message = message;\n    if (data)\n        obj.data = data;\n    if (context)\n        obj.context = context;\n    dispatch(obj);\n};\n/**\n * A simple tracer class, that can be used to avoid repetition when using the `trace` function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param type A given type (not level) for the current local tracer (\"hw\", \"withDevice\", etc.)\n * @param context Anything representing the context where the log occurred\n */\nexport class LocalTracer {\n    constructor(type, context) {\n        this.type = type;\n        this.context = context;\n    }\n    trace(message, data) {\n        trace({\n            type: this.type,\n            message,\n            data,\n            context: this.context,\n        });\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n    }\n    updateContext(contextToAdd) {\n        this.context = Object.assign(Object.assign({}, this.context), contextToAdd);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = type;\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `type`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */\n    withType(type) {\n        return new LocalTracer(type, this.context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with a new `context`\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     *\n     * @param context A TraceContext, that can undefined to reset the context\n     */\n    withContext(context) {\n        return new LocalTracer(this.type, context);\n    }\n    /**\n     * Create a new instance of the LocalTracer with an updated `context`,\n     * on which an additional context is merged with the existing one.\n     *\n     * It does not mutate the calling instance, but returns a new LocalTracer,\n     * following a simple builder pattern.\n     */\n    withUpdatedContext(contextToAdd) {\n        return new LocalTracer(this.type, Object.assign(Object.assign({}, this.context), contextToAdd));\n    }\n}\n/**\n * Adds a subscribers to the emitted logs.\n *\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb) => {\n    subscribers.push(cb);\n    return () => {\n        const i = subscribers.indexOf(cb);\n        if (i !== -1) {\n            // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n            subscribers[i] = subscribers[subscribers.length - 1];\n            subscribers.pop();\n        }\n    };\n};\nfunction dispatch(log) {\n    for (let i = 0; i < subscribers.length; i++) {\n        try {\n            subscribers[i](log);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n}\nif (typeof window !== \"undefined\") {\n    window.__ledgerLogsListen = listen;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonTransport = exports.parseMessage = exports.KNOWN_JETTONS = void 0;\nconst core_1 = require(\"@ton/core\");\nconst crypto_1 = require(\"@ton/crypto\");\nconst teslabot_1 = require(\"teslabot\");\nconst ledgerWriter_1 = require(\"./utils/ledgerWriter\");\nconst getInit_1 = require(\"./utils/getInit\");\nconst LEDGER_SYSTEM = 0xB0;\nconst LEDGER_CLA = 0xe0;\nconst INS_VERSION = 0x03;\nconst INS_ADDRESS = 0x05;\nconst INS_SIGN_TX = 0x06;\nconst INS_PROOF = 0x08;\nconst INS_SIGN_DATA = 0x09;\nconst INS_SETTINGS = 0x0A;\nconst DEFAULT_SUBWALLET_ID = 698983191;\nexports.KNOWN_JETTONS = [\n    {\n        symbol: 'USDT',\n        masterAddress: core_1.Address.parse('EQCxE6mUtQJKFnGfaROTKOt1lZbDiiX1kCixRv7Nw2Id_sDs'),\n    },\n    {\n        symbol: 'NOT',\n        masterAddress: core_1.Address.parse('EQAvlWFDxGF2lXm67y4yzC17wYKD9A0guwPkMs1gOsM__NOT'),\n    },\n    {\n        symbol: 'tsTON',\n        masterAddress: core_1.Address.parse('EQC98_qAmNEptUtPc7W6xdHh_ZHrBUFpw5Ft_IzNU20QAJav'),\n    },\n    {\n        symbol: 'wsTON',\n        masterAddress: core_1.Address.parse('EQB0SoxuGDx5qjVt0P_bPICFeWdFLBmVopHhjgfs0q-wsTON'),\n    },\n    {\n        symbol: 'hTON',\n        masterAddress: core_1.Address.parse('EQDPdq8xjAhytYqfGSX8KcFWIReCufsB9Wdg0pLlYSO_h76w'),\n    },\n    {\n        symbol: 'stTON',\n        masterAddress: core_1.Address.parse('EQDNhy-nxYFgUqzfUzImBEP67JqsyMIcyk2S5_RwNNEYku0k'),\n    },\n    {\n        symbol: 'STAKED',\n        masterAddress: core_1.Address.parse('EQCqC6EhRJ_tpWngKxL6dV0k6DSnRUrs9GSVkLbfdCqsj6TE'),\n    },\n];\nconst dnsWalletKey = Buffer.from([0xe8, 0xd4, 0x40, 0x50, 0x87, 0x3d, 0xba, 0x86, 0x5a, 0xa7, 0xc1, 0x70, 0xab, 0x4c, 0xce, 0x64,\n    0xd9, 0x08, 0x39, 0xa3, 0x4d, 0xcf, 0xd6, 0xcf, 0x71, 0xd1, 0x4e, 0x02, 0x05, 0x44, 0x3b, 0x1b]);\nfunction normalizeQueryId(qid) {\n    return qid === 0n ? null : qid;\n}\nfunction parseMessage(cell, opts) {\n    const params = {\n        disallowUnsafe: false,\n        disallowModification: false,\n        encodeJettonBurnEthAddressAsHex: true,\n        ...opts,\n    };\n    if (cell.hash().equals(new core_1.Cell().hash())) {\n        return undefined;\n    }\n    let s = cell.beginParse();\n    try {\n        const op = s.loadUint(32);\n        switch (op) {\n            case 0: {\n                const str = s.loadStringTail();\n                s.endParse();\n                if (str.length > 120) {\n                    throw new Error('Comment must be at most 120 ASCII characters long');\n                }\n                for (const c of str) {\n                    if (c.charCodeAt(0) < 0x20 || c.charCodeAt(0) >= 0x7f) {\n                        throw new Error('Comment must only contain printable ASCII characters');\n                    }\n                }\n                return {\n                    type: 'comment',\n                    text: str,\n                };\n            }\n            case 0x0f8a7ea5: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const amount = s.loadCoins();\n                const destination = s.loadAddress();\n                const responseDestination = s.loadAddress();\n                const customPayload = s.loadMaybeRef();\n                const forwardAmount = s.loadCoins();\n                let forwardPayload = null;\n                if (s.loadBit()) {\n                    forwardPayload = s.loadRef();\n                }\n                else {\n                    const p = s.asCell();\n                    s = new core_1.Cell().beginParse(); // clear the slice\n                    if (!p.hash().equals(new core_1.Cell().hash())) {\n                        if (params.disallowModification) {\n                            throw new Error('Jetton transfer message would be modified');\n                        }\n                        forwardPayload = p;\n                    }\n                }\n                s.endParse();\n                return {\n                    type: 'jetton-transfer',\n                    queryId,\n                    amount,\n                    destination,\n                    responseDestination,\n                    customPayload,\n                    forwardAmount,\n                    forwardPayload,\n                    knownJetton: null,\n                };\n            }\n            case 0x5fcc3d14: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const newOwner = s.loadAddress();\n                const responseDestination = s.loadAddress();\n                const customPayload = s.loadMaybeRef();\n                const forwardAmount = s.loadCoins();\n                let forwardPayload = null;\n                if (s.loadBit()) {\n                    forwardPayload = s.loadRef();\n                }\n                else {\n                    const p = s.asCell();\n                    s = new core_1.Cell().beginParse(); // clear the slice\n                    if (!p.hash().equals(new core_1.Cell().hash())) {\n                        if (params.disallowModification) {\n                            throw new Error('Jetton transfer message would be modified');\n                        }\n                        forwardPayload = p;\n                    }\n                }\n                s.endParse();\n                return {\n                    type: 'nft-transfer',\n                    queryId,\n                    newOwner,\n                    responseDestination,\n                    customPayload,\n                    forwardAmount,\n                    forwardPayload,\n                };\n            }\n            case 0x595f07bc: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const amount = s.loadCoins();\n                const responseDestination = s.loadAddress();\n                let customPayload = s.loadMaybeRef();\n                s.endParse();\n                if (params.encodeJettonBurnEthAddressAsHex && customPayload !== null && customPayload.bits.length === 160 && customPayload.refs.length === 0) {\n                    const cs = customPayload.beginParse();\n                    customPayload = cs.loadBuffer(20);\n                    cs.endParse();\n                }\n                return {\n                    type: 'jetton-burn',\n                    queryId,\n                    amount,\n                    responseDestination,\n                    customPayload,\n                };\n            }\n            case 0x7258a69b: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const address = s.loadAddress();\n                s.endParse();\n                return {\n                    type: 'add-whitelist',\n                    queryId,\n                    address,\n                };\n            }\n            case 0x1000: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const amount = s.loadCoins();\n                s.endParse();\n                return {\n                    type: 'single-nominator-withdraw',\n                    queryId,\n                    amount,\n                };\n            }\n            case 0x1001: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const address = s.loadAddress();\n                s.endParse();\n                return {\n                    type: 'single-nominator-change-validator',\n                    queryId,\n                    address,\n                };\n            }\n            case 0x47d54391: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                let appId = null;\n                if (s.remainingBits > 0) {\n                    appId = s.loadUintBig(64);\n                }\n                s.endParse();\n                return {\n                    type: 'tonstakers-deposit',\n                    queryId,\n                    appId,\n                };\n            }\n            case 0x69fb306c: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const votingAddress = s.loadAddress();\n                const expirationDate = s.loadUint(48);\n                const vote = s.loadBit();\n                const needConfirmation = s.loadBit();\n                s.endParse();\n                return {\n                    type: 'vote-for-proposal',\n                    queryId,\n                    votingAddress,\n                    expirationDate,\n                    vote,\n                    needConfirmation,\n                };\n            }\n            case 0x4eb1f0f9: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const key = s.loadBuffer(32);\n                if (key.equals(dnsWalletKey)) {\n                    if (s.remainingRefs > 0) {\n                        const vs = s.loadRef().beginParse();\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (!s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        const type = vs.loadUint(16);\n                        if (type !== 0x9fd3) {\n                            throw new Error('Wrong DNS record type');\n                        }\n                        const address = vs.loadAddress();\n                        const flags = vs.loadUint(8);\n                        if (flags > 1) {\n                            throw new Error('DNS wallet record must have flags 0 or 1');\n                        }\n                        let capabilities = (flags & 1) > 0 ? { isWallet: false } : null;\n                        if (capabilities !== null) {\n                            while (vs.loadBit()) {\n                                const cap = vs.loadUint(16);\n                                if (cap === 0x2177) {\n                                    if (capabilities.isWallet && params.disallowModification) {\n                                        throw new Error('DNS change record message would be modified');\n                                    }\n                                    capabilities.isWallet = true;\n                                }\n                                else {\n                                    throw new Error('Unknown DNS wallet record capability');\n                                }\n                            }\n                        }\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'wallet',\n                                value: {\n                                    address,\n                                    capabilities,\n                                },\n                            },\n                        };\n                    }\n                    else {\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'wallet',\n                                value: null,\n                            },\n                        };\n                    }\n                }\n                else {\n                    if (s.remainingRefs > 0) {\n                        const value = s.loadRef();\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (!s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'unknown',\n                                key,\n                                value,\n                            },\n                        };\n                    }\n                    else {\n                        if (s.remainingBits > 0 && !params.disallowModification) {\n                            // tolerate the Maybe bit\n                            if (s.loadBit())\n                                throw new Error('Incorrect change DNS record message');\n                        }\n                        s.endParse();\n                        return {\n                            type: 'change-dns-record',\n                            queryId,\n                            record: {\n                                type: 'unknown',\n                                key,\n                                value: null,\n                            },\n                        };\n                    }\n                }\n            }\n            case 0x8: {\n                const queryId = normalizeQueryId(s.loadUintBig(64));\n                const swapId = s.loadBuffer(32);\n                s.endParse();\n                return {\n                    type: 'token-bridge-pay-swap',\n                    queryId,\n                    swapId,\n                };\n            }\n        }\n        throw new Error('Unknown op: ' + op);\n    }\n    catch (e) {\n        if (params.disallowUnsafe) {\n            throw e;\n        }\n    }\n    return {\n        type: 'unsafe',\n        message: cell,\n    };\n}\nexports.parseMessage = parseMessage;\nfunction chunks(buf, n) {\n    const nc = Math.ceil(buf.length / n);\n    const cs = [];\n    for (let i = 0; i < nc; i++) {\n        cs.push(buf.subarray(i * n, (i + 1) * n));\n    }\n    return cs;\n}\nfunction processAddressFlags(opts) {\n    const bounceable = opts?.bounceable ?? true;\n    const testOnly = opts?.testOnly ?? false;\n    const chain = opts?.chain ?? 0;\n    const subwalletId = opts?.subwalletId ?? 698983191;\n    const walletVersion = opts?.walletVersion ?? 'v4';\n    let specifiers = undefined;\n    let flags = 0x00;\n    if (testOnly) {\n        flags |= 0x01;\n    }\n    if (chain === -1) {\n        flags |= 0x02;\n    }\n    if (subwalletId !== 698983191 || walletVersion !== 'v4') {\n        flags |= 0x04;\n        specifiers = {\n            subwalletId,\n            isV3R2: walletVersion === 'v3r2',\n        };\n    }\n    return { bounceable, testOnly, chain, flags, specifiers };\n}\nfunction convertPayload(input) {\n    let payload = null;\n    let hints = Buffer.concat([(0, ledgerWriter_1.writeUint8)(0)]);\n    if (input === undefined) {\n        return {\n            payload,\n            hints,\n        };\n    }\n    switch (input.type) {\n        case 'unsafe': {\n            payload = input.message;\n            break;\n        }\n        case 'comment': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x00),\n                (0, ledgerWriter_1.writeUint16)(Buffer.from(input.text).length),\n                Buffer.from(input.text)\n            ]);\n            payload = (0, core_1.beginCell)()\n                .storeUint(0, 32)\n                .storeBuffer(Buffer.from(input.text))\n                .endCell();\n            break;\n        }\n        case 'jetton-transfer':\n        case 'nft-transfer': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(input.type === 'jetton-transfer' ? 0x01 : 0x02)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(input.type === 'jetton-transfer' ? 0x0f8a7ea5 : 0x5fcc3d14, 32);\n            let d = Buffer.alloc(0);\n            let flags = 0;\n            if (input.queryId !== null) {\n                flags |= 1;\n            }\n            if (input.type === 'jetton-transfer' && input.knownJetton !== null) {\n                flags |= 2;\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(flags)]);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                b = b.storeUint(0, 64);\n            }\n            if (input.type === 'jetton-transfer') {\n                if (input.knownJetton !== null) {\n                    d = Buffer.concat([d, (0, ledgerWriter_1.writeUint16)(input.knownJetton.jettonId), (0, ledgerWriter_1.writeUint8)(input.knownJetton.workchain)]);\n                }\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.amount)]);\n                b = b.storeCoins(input.amount);\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.destination)]);\n                b = b.storeAddress(input.destination);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.newOwner)]);\n                b = b.storeAddress(input.newOwner);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.responseDestination)]);\n            b = b.storeAddress(input.responseDestination);\n            if (input.customPayload !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(input.customPayload)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.forwardAmount)]);\n            b = b.storeCoins(input.forwardAmount);\n            if (input.forwardPayload !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(input.forwardPayload)]);\n                b = b.storeMaybeRef(input.forwardPayload);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeMaybeRef(input.forwardPayload);\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'jetton-burn': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x03)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x595f07bc, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.amount)]);\n            b = b.storeCoins(input.amount);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.responseDestination)]);\n            b = b.storeAddress(input.responseDestination);\n            if (input.customPayload === null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            else if (input.customPayload instanceof core_1.Cell) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(input.customPayload)]);\n                b = b.storeMaybeRef(input.customPayload);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(2), (0, ledgerWriter_1.writeCellInline)(input.customPayload)]);\n                b = b.storeMaybeRef((0, core_1.beginCell)().storeBuffer(input.customPayload).endCell());\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'add-whitelist':\n        case 'single-nominator-change-validator': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(input.type === 'add-whitelist' ? 0x04 : 0x06)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(input.type === 'add-whitelist' ? 0x7258a69b : 0x1001, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.address)]);\n            b = b.storeAddress(input.address);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'single-nominator-withdraw': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x05)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x1000, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeVarUInt)(input.amount)]);\n            b = b.storeCoins(input.amount);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'tonstakers-deposit': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x07)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x47d54391, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            if (input.appId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.appId)]);\n                b = b.storeUint(input.appId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'vote-for-proposal': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x08)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x69fb306c, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.votingAddress)]);\n            b = b.storeAddress(input.votingAddress);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint48)(input.expirationDate)]);\n            b = b.storeUint(input.expirationDate, 48);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(input.vote ? 1 : 0), (0, ledgerWriter_1.writeUint8)(input.needConfirmation ? 1 : 0)]);\n            b = b.storeBit(input.vote).storeBit(input.needConfirmation);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'change-dns-record': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x09)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(0x4eb1f0f9, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            if (input.record.type === 'unknown' && input.record.key.length !== 32) {\n                throw new Error('DNS record key length must be 32 bytes long');\n            }\n            b = b.storeBuffer(input.record.type === 'wallet' ? (0, crypto_1.sha256_sync)('wallet') : input.record.key);\n            d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(input.record.value === null ? 0 : 1), (0, ledgerWriter_1.writeUint8)(input.record.type === 'wallet' ? 0 : 1)]);\n            if (input.record.type === 'wallet') {\n                if (input.record.value !== null) {\n                    d = Buffer.concat([d, (0, ledgerWriter_1.writeAddress)(input.record.value.address), (0, ledgerWriter_1.writeUint8)(input.record.value.capabilities === null ? 0 : 1)]);\n                    let rb = (0, core_1.beginCell)().storeUint(0x9fd3, 16).storeAddress(input.record.value.address).storeUint(input.record.value.capabilities === null ? 0 : 1, 8);\n                    if (input.record.value.capabilities !== null) {\n                        d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(input.record.value.capabilities.isWallet ? 1 : 0)]);\n                        if (input.record.value.capabilities.isWallet) {\n                            rb = rb.storeBit(true).storeUint(0x2177, 16);\n                        }\n                        rb = rb.storeBit(false);\n                    }\n                    b = b.storeRef(rb);\n                }\n            }\n            else {\n                d = Buffer.concat([d, input.record.key]);\n                if (input.record.value !== null) {\n                    d = Buffer.concat([d, (0, ledgerWriter_1.writeCellRef)(input.record.value)]);\n                    b = b.storeRef(input.record.value);\n                }\n            }\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        case 'token-bridge-pay-swap': {\n            hints = Buffer.concat([\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint32)(0x0A)\n            ]);\n            let b = (0, core_1.beginCell)()\n                .storeUint(8, 32);\n            let d = Buffer.alloc(0);\n            if (input.queryId !== null) {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint64)(input.queryId)]);\n                b = b.storeUint(input.queryId, 64);\n            }\n            else {\n                d = Buffer.concat([d, (0, ledgerWriter_1.writeUint8)(0)]);\n                b = b.storeUint(0, 64);\n            }\n            if (input.swapId.length !== 32) {\n                throw new Error('Token bridge swap ID must be 32 bytes long');\n            }\n            d = Buffer.concat([d, input.swapId]);\n            b = b.storeBuffer(input.swapId);\n            payload = b.endCell();\n            hints = Buffer.concat([\n                hints,\n                (0, ledgerWriter_1.writeUint16)(d.length),\n                d\n            ]);\n            break;\n        }\n        default: {\n            throw new Error('Unknown payload type: ' + input.type);\n        }\n    }\n    return {\n        payload,\n        hints,\n    };\n}\nclass TonTransport {\n    transport;\n    #lock = new teslabot_1.AsyncLock();\n    constructor(transport) {\n        this.transport = transport;\n    }\n    //\n    // Apps\n    //\n    async #getCurrentApp() {\n        return this.#lock.inLock(async () => {\n            let r = await this.transport.send(LEDGER_SYSTEM, 0x01, 0x00, 0x00, undefined, [0x9000]);\n            let data = r.slice(0, r.length - 2);\n            if (data[0] !== 0x01) {\n                throw Error('Invalid response');\n            }\n            let nameLength = data[1];\n            let name = data.slice(2, 2 + nameLength).toString();\n            let versionLength = data[2 + nameLength];\n            let version = data.slice(3 + nameLength, 3 + nameLength + versionLength).toString();\n            return { name, version };\n        });\n    }\n    async isAppOpen() {\n        return (await this.#getCurrentApp()).name === 'TON';\n    }\n    async getVersion() {\n        let loaded = await this.#doRequest(INS_VERSION, 0x00, 0x00, Buffer.alloc(0));\n        const [major, minor, patch] = loaded;\n        return `${major}.${minor}.${patch}`;\n    }\n    //\n    // Operations\n    //\n    async getAddress(path, opts) {\n        // Check path\n        validatePath(path);\n        // Resolve flags\n        const { bounceable, testOnly, chain, specifiers } = processAddressFlags(opts);\n        // Get public key\n        let response = await this.#doRequest(INS_ADDRESS, 0x00, 0x00, pathElementsToBuffer(path.map((v) => v + 0x80000000)));\n        if (response.length !== 32) {\n            throw Error('Invalid response');\n        }\n        // Contract\n        const contract = (0, getInit_1.getInit)(response, specifiers?.subwalletId ?? 698983191, specifiers?.isV3R2 ?? false);\n        const address = (0, core_1.contractAddress)(chain, contract);\n        return { address: address.toString({ bounceable, testOnly }), publicKey: response };\n    }\n    async validateAddress(path, opts) {\n        // Check path\n        validatePath(path);\n        // Resolve flags\n        const { bounceable, testOnly, chain, flags, specifiers } = processAddressFlags(opts);\n        let r = pathElementsToBuffer(path.map((v) => v + 0x80000000));\n        if (specifiers !== undefined) {\n            r = Buffer.concat([r, (0, ledgerWriter_1.writeUint8)(specifiers.isV3R2 ? 1 : 0), (0, ledgerWriter_1.writeUint32)(specifiers.subwalletId)]);\n        }\n        // Get public key\n        let response = await this.#doRequest(INS_ADDRESS, 0x01, flags, r);\n        if (response.length !== 32) {\n            throw Error('Invalid response');\n        }\n        // Contract\n        const contract = (0, getInit_1.getInit)(response, specifiers?.subwalletId ?? 698983191, specifiers?.isV3R2 ?? false);\n        const address = (0, core_1.contractAddress)(chain, contract);\n        return { address: address.toString({ bounceable, testOnly }), publicKey: response };\n    }\n    async getAddressProof(path, params, opts) {\n        // Check path\n        validatePath(path);\n        let publicKey = (await this.getAddress(path)).publicKey;\n        // Resolve flags\n        const { flags, specifiers } = processAddressFlags(opts);\n        let specifiersBuf = Buffer.alloc(0);\n        if (specifiers !== undefined) {\n            specifiersBuf = Buffer.concat([(0, ledgerWriter_1.writeUint8)(specifiers.isV3R2 ? 1 : 0), (0, ledgerWriter_1.writeUint32)(specifiers.subwalletId)]);\n        }\n        const domainBuf = Buffer.from(params.domain, 'utf-8');\n        const reqBuf = Buffer.concat([\n            pathElementsToBuffer(path.map((v) => v + 0x80000000)),\n            specifiersBuf,\n            (0, ledgerWriter_1.writeUint8)(domainBuf.length),\n            domainBuf,\n            (0, ledgerWriter_1.writeUint64)(BigInt(params.timestamp)),\n            params.payload,\n        ]);\n        // Get public key\n        let res = await this.#doRequest(INS_PROOF, 0x01, flags, reqBuf);\n        let signature = res.slice(1, 1 + 64);\n        let hash = res.slice(2 + 64, 2 + 64 + 32);\n        if (!(0, crypto_1.signVerify)(hash, signature, publicKey)) {\n            throw Error('Received signature is invalid');\n        }\n        return { signature, hash };\n    }\n    async signData(path, req, opts) {\n        validatePath(path);\n        const publicKey = (await this.getAddress(path)).publicKey;\n        const timestamp = opts?.timestamp ?? Math.floor(Date.now() / 1000);\n        let schema;\n        let data;\n        let cell;\n        switch (req.type) {\n            case 'plaintext': {\n                schema = 0x754bf91b;\n                data = Buffer.from(req.text, 'ascii');\n                cell = (0, core_1.beginCell)().storeStringTail(req.text).endCell();\n                break;\n            }\n            case 'app-data': {\n                if (req.address === undefined && req.domain === undefined) {\n                    throw new Error('At least one of `address` and `domain` must be set when using \\'app-data\\' request');\n                }\n                schema = 0x54b58535;\n                let b = (0, core_1.beginCell)();\n                let dp = [];\n                if (req.address !== undefined) {\n                    b.storeBit(1);\n                    b.storeAddress(req.address);\n                    dp.push((0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeAddress)(req.address));\n                }\n                else {\n                    b.storeBit(0);\n                    dp.push((0, ledgerWriter_1.writeUint8)(0));\n                }\n                if (req.domain !== undefined) {\n                    b.storeBit(1);\n                    let inner = (0, core_1.beginCell)();\n                    req.domain.split('.').reverse().forEach(p => {\n                        inner.storeBuffer(Buffer.from(p, 'ascii'));\n                        inner.storeUint(0, 8);\n                    });\n                    b.storeRef(inner);\n                    const db = Buffer.from(req.domain, 'ascii');\n                    dp.push((0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeUint8)(db.length), db);\n                }\n                else {\n                    b.storeBit(0);\n                    dp.push((0, ledgerWriter_1.writeUint8)(0));\n                }\n                b.storeRef(req.data);\n                dp.push((0, ledgerWriter_1.writeCellRef)(req.data));\n                if (req.ext !== undefined) {\n                    b.storeBit(1);\n                    b.storeRef(req.ext);\n                    dp.push((0, ledgerWriter_1.writeUint8)(1), (0, ledgerWriter_1.writeCellRef)(req.ext));\n                }\n                else {\n                    b.storeBit(0);\n                    dp.push((0, ledgerWriter_1.writeUint8)(0));\n                }\n                data = Buffer.concat(dp);\n                cell = b.endCell();\n                break;\n            }\n            default: {\n                throw new Error(`Sign data request type '${req.type}' not supported`);\n            }\n        }\n        const commonPart = Buffer.concat([\n            (0, ledgerWriter_1.writeUint32)(schema),\n            (0, ledgerWriter_1.writeUint64)(BigInt(timestamp)),\n        ]);\n        const pkg = Buffer.concat([\n            commonPart,\n            data,\n        ]);\n        await this.#doRequest(INS_SIGN_DATA, 0x00, 0x03, pathElementsToBuffer(path.map((v) => v + 0x80000000)));\n        const pkgCs = chunks(pkg, 255);\n        for (let i = 0; i < pkgCs.length - 1; i++) {\n            await this.#doRequest(INS_SIGN_DATA, 0x00, 0x02, pkgCs[i]);\n        }\n        const res = await this.#doRequest(INS_SIGN_DATA, 0x00, 0x00, pkgCs[pkgCs.length - 1]);\n        let signature = res.subarray(1, 1 + 64);\n        let hash = res.subarray(2 + 64, 2 + 64 + 32);\n        if (!hash.equals(cell.hash())) {\n            throw Error('Hash mismatch. Expected: ' + cell.hash().toString('hex') + ', got: ' + hash.toString('hex'));\n        }\n        if (!(0, crypto_1.signVerify)(Buffer.concat([commonPart, hash]), signature, publicKey)) {\n            throw Error('Received signature is invalid');\n        }\n        return {\n            signature,\n            cell,\n            timestamp,\n        };\n    }\n    signTransaction = async (path, transaction) => {\n        // Check path\n        validatePath(path);\n        //\n        // Fetch key\n        //\n        let publicKey = (await this.getAddress(path)).publicKey;\n        //\n        // Create package\n        //\n        let pkg = Buffer.concat([\n            (0, ledgerWriter_1.writeUint8)(transaction.walletSpecifiers === undefined ? 0 : 1), // tag\n        ]);\n        if (transaction.walletSpecifiers !== undefined) {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint32)(transaction.walletSpecifiers.subwalletId ?? DEFAULT_SUBWALLET_ID),\n                (0, ledgerWriter_1.writeUint8)(transaction.walletSpecifiers.includeWalletOp ? 1 : 0),\n            ]);\n        }\n        pkg = Buffer.concat([\n            pkg,\n            (0, ledgerWriter_1.writeUint32)(transaction.seqno),\n            (0, ledgerWriter_1.writeUint32)(transaction.timeout),\n            (0, ledgerWriter_1.writeVarUInt)(transaction.amount),\n            (0, ledgerWriter_1.writeAddress)(transaction.to),\n            (0, ledgerWriter_1.writeUint8)(transaction.bounce ? 1 : 0),\n            (0, ledgerWriter_1.writeUint8)(transaction.sendMode),\n        ]);\n        //\n        // State init\n        //\n        let stateInit = null;\n        if (transaction.stateInit) {\n            stateInit = (0, core_1.beginCell)()\n                .store((0, core_1.storeStateInit)(transaction.stateInit))\n                .endCell();\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint16)(stateInit.depth()),\n                stateInit.hash()\n            ]);\n        }\n        else {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(0)\n            ]);\n        }\n        //\n        // Payload\n        //\n        const { payload, hints } = convertPayload(transaction.payload);\n        if (payload) {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(1),\n                (0, ledgerWriter_1.writeUint16)(payload.depth()),\n                payload.hash(),\n                hints\n            ]);\n        }\n        else {\n            pkg = Buffer.concat([\n                pkg,\n                (0, ledgerWriter_1.writeUint8)(0),\n                (0, ledgerWriter_1.writeUint8)(0)\n            ]);\n        }\n        //\n        // Send package\n        //\n        await this.#doRequest(INS_SIGN_TX, 0x00, 0x03, pathElementsToBuffer(path.map((v) => v + 0x80000000)));\n        const pkgCs = chunks(pkg, 255);\n        for (let i = 0; i < pkgCs.length - 1; i++) {\n            await this.#doRequest(INS_SIGN_TX, 0x00, 0x02, pkgCs[i]);\n        }\n        let res = await this.#doRequest(INS_SIGN_TX, 0x00, 0x00, pkgCs[pkgCs.length - 1]);\n        //\n        // Parse response\n        //\n        let orderBuilder = (0, core_1.beginCell)()\n            .storeBit(0)\n            .storeBit(true)\n            .storeBit(transaction.bounce)\n            .storeBit(false)\n            .storeAddress(null)\n            .storeAddress(transaction.to)\n            .storeCoins(transaction.amount)\n            .storeBit(false)\n            .storeCoins(0)\n            .storeCoins(0)\n            .storeUint(0, 64)\n            .storeUint(0, 32);\n        // State Init\n        if (stateInit) {\n            orderBuilder = orderBuilder\n                .storeBit(true)\n                .storeBit(true) // Always in reference\n                .storeRef(stateInit);\n        }\n        else {\n            orderBuilder = orderBuilder\n                .storeBit(false);\n        }\n        // Payload\n        if (payload) {\n            orderBuilder = orderBuilder\n                .storeBit(true) // Always in reference\n                .storeRef(payload);\n        }\n        else {\n            orderBuilder = orderBuilder\n                .storeBit(false);\n        }\n        // Transfer message\n        let transferB = (0, core_1.beginCell)()\n            .storeUint(transaction.walletSpecifiers?.subwalletId ?? DEFAULT_SUBWALLET_ID, 32)\n            .storeUint(transaction.timeout, 32)\n            .storeUint(transaction.seqno, 32);\n        if (transaction.walletSpecifiers?.includeWalletOp ?? true) {\n            transferB = transferB.storeUint(0, 8);\n        }\n        let transfer = transferB.storeUint(transaction.sendMode, 8)\n            .storeRef(orderBuilder.endCell())\n            .endCell();\n        // Parse result\n        let signature = res.slice(1, 1 + 64);\n        let hash = res.slice(2 + 64, 2 + 64 + 32);\n        if (!hash.equals(transfer.hash())) {\n            throw Error('Hash mismatch. Expected: ' + transfer.hash().toString('hex') + ', got: ' + hash.toString('hex'));\n        }\n        if (!(0, crypto_1.signVerify)(hash, signature, publicKey)) {\n            throw Error('Received signature is invalid');\n        }\n        // Build a message\n        return (0, core_1.beginCell)()\n            .storeBuffer(signature)\n            .storeSlice(transfer.beginParse())\n            .endCell();\n    };\n    async getSettings() {\n        let loaded = await this.#doRequest(INS_SETTINGS, 0x00, 0x00, Buffer.alloc(0));\n        return {\n            blindSigningEnabled: (loaded[0] & 0x01) > 0,\n            expertMode: (loaded[0] & 0x02) > 0,\n        };\n    }\n    #doRequest = async (ins, p1, p2, data) => {\n        return this.#lock.inLock(async () => {\n            let r = await this.transport.send(LEDGER_CLA, ins, p1, p2, data);\n            return r.slice(0, r.length - 2);\n        });\n    };\n}\nexports.TonTransport = TonTransport;\n//\n// Utils\n//\nfunction validatePath(path) {\n    if (path.length < 6) {\n        throw Error('Path is too short');\n    }\n    if (path[0] !== 44) {\n        throw Error('First element of a path must be 44');\n    }\n    if (path[1] !== 607) {\n        throw Error('Second element of a path must be 607');\n    }\n    for (let p of path) {\n        if (p >= 0x80000000) {\n            throw Error('All path elements must be under 0x80000000');\n        }\n    }\n}\nfunction pathElementsToBuffer(paths) {\n    const buffer = Buffer.alloc(1 + paths.length * 4);\n    buffer[0] = paths.length;\n    paths.forEach((element, index) => {\n        buffer.writeUInt32BE(element, 1 + 4 * index);\n    });\n    return buffer;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KNOWN_JETTONS = exports.parseMessage = exports.TonTransport = void 0;\nvar TonTransport_1 = require(\"./TonTransport\");\nObject.defineProperty(exports, \"TonTransport\", { enumerable: true, get: function () { return TonTransport_1.TonTransport; } });\nObject.defineProperty(exports, \"parseMessage\", { enumerable: true, get: function () { return TonTransport_1.parseMessage; } });\nObject.defineProperty(exports, \"KNOWN_JETTONS\", { enumerable: true, get: function () { return TonTransport_1.KNOWN_JETTONS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInit = void 0;\nconst core_1 = require(\"@ton/core\");\nfunction getInit(publicKey, subwalletId, isV3R2) {\n    let data = (0, core_1.beginCell)()\n        .storeUint(0, 32) // Seqno\n        .storeUint(subwalletId, 32)\n        .storeBuffer(publicKey);\n    return {\n        code: isV3R2 ? core_1.Cell.fromBase64('te6cckEBAQEAcQAA3v8AIN0gggFMl7ohggEznLqxn3Gw7UTQ0x/THzHXC//jBOCk8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVBC9ba0=') : core_1.Cell.fromBase64('te6ccgECFAEAAtQAART/APSkE/S88sgLAQIBIAIDAgFIBAUE+PKDCNcYINMf0x/THwL4I7vyZO1E0NMf0x/T//QE0VFDuvKhUVG68qIF+QFUEGT5EPKj+AAkpMjLH1JAyx9SMMv/UhD0AMntVPgPAdMHIcAAn2xRkyDXSpbTB9QC+wDoMOAhwAHjACHAAuMAAcADkTDjDQOkyMsfEssfy/8QERITAubQAdDTAyFxsJJfBOAi10nBIJJfBOAC0x8hghBwbHVnvSKCEGRzdHK9sJJfBeAD+kAwIPpEAcjKB8v/ydDtRNCBAUDXIfQEMFyBAQj0Cm+hMbOSXwfgBdM/yCWCEHBsdWe6kjgw4w0DghBkc3RyupJfBuMNBgcCASAICQB4AfoA9AQw+CdvIjBQCqEhvvLgUIIQcGx1Z4MesXCAGFAEywUmzxZY+gIZ9ADLaRfLH1Jgyz8gyYBA+wAGAIpQBIEBCPRZMO1E0IEBQNcgyAHPFvQAye1UAXKwjiOCEGRzdHKDHrFwgBhQBcsFUAPPFiP6AhPLassfyz/JgED7AJJfA+ICASAKCwBZvSQrb2omhAgKBrkPoCGEcNQICEekk30pkQzmkD6f+YN4EoAbeBAUiYcVnzGEAgFYDA0AEbjJftRNDXCx+AA9sp37UTQgQFA1yH0BDACyMoHy//J0AGBAQj0Cm+hMYAIBIA4PABmtznaiaEAga5Drhf/AABmvHfaiaEAQa5DrhY/AAG7SB/oA1NQi+QAFyMoHFcv/ydB3dIAYyMsFywIizxZQBfoCFMtrEszMyXP7AMhAFIEBCPRR8qcCAHCBAQjXGPoA0z/IVCBHgQEI9FHyp4IQbm90ZXB0gBjIywXLAlAGzxZQBPoCFMtqEssfyz/Jc/sAAgBsgQEI1xj6ANM/MFIkgQEI9Fnyp4IQZHN0cnB0gBjIywXLAlAFzxZQA/oCE8tqyx8Syz/Jc/sAAAr0AMntVA=='),\n        data: isV3R2 ? data.endCell() : data.storeBit(0).endCell(),\n    };\n}\nexports.getInit = getInit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeCellInline = exports.writeCellRef = exports.writeAddress = exports.writeUint8 = exports.writeVarUInt = exports.writeUint64 = exports.writeUint48 = exports.writeUint16 = exports.writeUint32 = void 0;\nconst core_1 = require(\"@ton/core\");\nfunction writeUint32(value) {\n    let b = Buffer.alloc(4);\n    b.writeUint32BE(value, 0);\n    return b;\n}\nexports.writeUint32 = writeUint32;\nfunction writeUint16(value) {\n    let b = Buffer.alloc(2);\n    b.writeUint16BE(value, 0);\n    return b;\n}\nexports.writeUint16 = writeUint16;\nfunction writeUint48(value) {\n    let b = Buffer.alloc(6);\n    b.writeUint16BE(value >> 32, 0);\n    b.writeUint32BE(value & ((1 << 32) - 1), 2);\n    return b;\n}\nexports.writeUint48 = writeUint48;\nfunction writeUint64(value) {\n    return (0, core_1.beginCell)().storeUint(value, 64).endCell().beginParse().loadBuffer(8);\n}\nexports.writeUint64 = writeUint64;\nfunction writeVarUInt(value) {\n    const sizeBytes = value === 0n ? 0 : Math.ceil((value.toString(2).length) / 8);\n    return (0, core_1.beginCell)().storeUint(sizeBytes, 8).storeUint(value, sizeBytes * 8).endCell().beginParse().loadBuffer(1 + sizeBytes);\n}\nexports.writeVarUInt = writeVarUInt;\nfunction writeUint8(value) {\n    let b = Buffer.alloc(1);\n    b[0] = value;\n    return b;\n}\nexports.writeUint8 = writeUint8;\nfunction writeAddress(address) {\n    return Buffer.concat([\n        writeUint8(address.workChain === -1 ? 0xff : address.workChain),\n        address.hash\n    ]);\n}\nexports.writeAddress = writeAddress;\nfunction writeCellRef(ref) {\n    return Buffer.concat([\n        writeUint16(ref.depth()),\n        ref.hash()\n    ]);\n}\nexports.writeCellRef = writeCellRef;\nfunction writeCellInline(bytes) {\n    return Buffer.concat([\n        writeUint8(bytes.length),\n        bytes,\n    ]);\n}\nexports.writeCellInline = writeCellInline;\n","\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitReader = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst ExternalAddress_1 = require(\"../address/ExternalAddress\");\n/**\n * Class for reading bit strings\n */\nclass BitReader {\n    constructor(bits, offset = 0) {\n        this._checkpoints = [];\n        this._bits = bits;\n        this._offset = offset;\n    }\n    /**\n     * Offset in source bit string\n     */\n    get offset() {\n        return this._offset;\n    }\n    /**\n     * Number of bits remaining\n     */\n    get remaining() {\n        return this._bits.length - this._offset;\n    }\n    /**\n     * Skip bits\n     * @param bits number of bits to skip\n     */\n    skip(bits) {\n        if (bits < 0 || this._offset + bits > this._bits.length) {\n            throw new Error(`Index ${this._offset + bits} is out of bounds`);\n        }\n        this._offset += bits;\n    }\n    /**\n     * Reset to the beginning or latest checkpoint\n     */\n    reset() {\n        if (this._checkpoints.length > 0) {\n            this._offset = this._checkpoints.pop();\n        }\n        else {\n            this._offset = 0;\n        }\n    }\n    /**\n     * Save checkpoint\n     */\n    save() {\n        this._checkpoints.push(this._offset);\n    }\n    /**\n     * Load a single bit\n     * @returns true if the bit is set, false otherwise\n     */\n    loadBit() {\n        let r = this._bits.at(this._offset);\n        this._offset++;\n        return r;\n    }\n    /**\n     * Preload bit\n     * @returns true if the bit is set, false otherwise\n     */\n    preloadBit() {\n        return this._bits.at(this._offset);\n    }\n    /**\n     * Load bit string\n     * @param bits number of bits to read\n     * @returns new bitstring\n     */\n    loadBits(bits) {\n        let r = this._bits.substring(this._offset, bits);\n        this._offset += bits;\n        return r;\n    }\n    /**\n     * Preload bit string\n     * @param bits number of bits to read\n     * @returns new bitstring\n     */\n    preloadBits(bits) {\n        return this._bits.substring(this._offset, bits);\n    }\n    /**\n     * Load buffer\n     * @param bytes number of bytes\n     * @returns new buffer\n     */\n    loadBuffer(bytes) {\n        let buf = this._preloadBuffer(bytes, this._offset);\n        this._offset += bytes * 8;\n        return buf;\n    }\n    /**\n     * Preload buffer\n     * @param bytes number of bytes\n     * @returns new buffer\n     */\n    preloadBuffer(bytes) {\n        return this._preloadBuffer(bytes, this._offset);\n    }\n    /**\n     * Load uint value\n     * @param bits uint bits\n     * @returns read value as number\n     */\n    loadUint(bits) {\n        return Number(this.loadUintBig(bits));\n    }\n    /**\n     * Load uint value as bigint\n     * @param bits uint bits\n     * @returns read value as bigint\n     */\n    loadUintBig(bits) {\n        let loaded = this.preloadUintBig(bits);\n        this._offset += bits;\n        return loaded;\n    }\n    /**\n     * Preload uint value\n     * @param bits uint bits\n     * @returns read value as number\n     */\n    preloadUint(bits) {\n        return Number(this._preloadUint(bits, this._offset));\n    }\n    /**\n     * Preload uint value as bigint\n     * @param bits uint bits\n     * @returns read value as bigint\n     */\n    preloadUintBig(bits) {\n        return this._preloadUint(bits, this._offset);\n    }\n    /**\n     * Load int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    loadInt(bits) {\n        let res = this._preloadInt(bits, this._offset);\n        this._offset += bits;\n        return Number(res);\n    }\n    /**\n     * Load int value as bigint\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    loadIntBig(bits) {\n        let res = this._preloadInt(bits, this._offset);\n        this._offset += bits;\n        return res;\n    }\n    /**\n     * Preload int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    preloadInt(bits) {\n        return Number(this._preloadInt(bits, this._offset));\n    }\n    /**\n     * Preload int value\n     * @param bits int bits\n     * @returns read value as bigint\n     */\n    preloadIntBig(bits) {\n        return this._preloadInt(bits, this._offset);\n    }\n    /**\n     * Load varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarUint(bits) {\n        let size = Number(this.loadUint(bits));\n        return Number(this.loadUintBig(size * 8));\n    }\n    /**\n     * Load varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarUintBig(bits) {\n        let size = Number(this.loadUint(bits));\n        return this.loadUintBig(size * 8);\n    }\n    /**\n     * Preload varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarUint(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return Number(this._preloadUint(size * 8, this._offset + bits));\n    }\n    /**\n     * Preload varuint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarUintBig(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return this._preloadUint(size * 8, this._offset + bits);\n    }\n    /**\n     * Load varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarInt(bits) {\n        let size = Number(this.loadUint(bits));\n        return Number(this.loadIntBig(size * 8));\n    }\n    /**\n     * Load varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    loadVarIntBig(bits) {\n        let size = Number(this.loadUint(bits));\n        return this.loadIntBig(size * 8);\n    }\n    /**\n     * Preload varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarInt(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return Number(this._preloadInt(size * 8, this._offset + bits));\n    }\n    /**\n     * Preload varint value\n     * @param bits number of bits to read the size\n     * @returns read value as bigint\n     */\n    preloadVarIntBig(bits) {\n        let size = Number(this._preloadUint(bits, this._offset));\n        return this._preloadInt(size * 8, this._offset + bits);\n    }\n    /**\n     * Load coins value\n     * @returns read value as bigint\n     */\n    loadCoins() {\n        return this.loadVarUintBig(4);\n    }\n    /**\n     * Preload coins value\n     * @returns read value as bigint\n     */\n    preloadCoins() {\n        return this.preloadVarUintBig(4);\n    }\n    /**\n     * Load Address\n     * @returns Address\n     */\n    loadAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address: \" + type);\n        }\n    }\n    /**\n     * Load internal address\n     * @returns Address or null\n     */\n    loadMaybeAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Load external address\n     * @returns ExternalAddress\n     */\n    loadExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Load external address\n     * @returns ExternalAddress or null\n     */\n    loadMaybeExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else {\n            throw new Error(\"Invalid address\");\n        }\n    }\n    /**\n     * Read address of any type\n     * @returns Address or ExternalAddress or null\n     */\n    loadAddressAny() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type === 0) {\n            this._offset += 2;\n            return null;\n        }\n        else if (type === 2) {\n            return this._loadInternalAddress();\n        }\n        else if (type === 1) {\n            return this._loadExternalAddress();\n        }\n        else if (type === 3) {\n            throw Error('Unsupported');\n        }\n        else {\n            throw Error('Unreachable');\n        }\n    }\n    /**\n     * Load bit string that was padded to make it byte alligned. Used in BOC serialization\n     * @param bytes number of bytes to read\n     */\n    loadPaddedBits(bits) {\n        // Check that number of bits is byte alligned\n        if (bits % 8 !== 0) {\n            throw new Error(\"Invalid number of bits\");\n        }\n        // Skip padding\n        let length = bits;\n        while (true) {\n            if (this._bits.at(this._offset + length - 1)) {\n                length--;\n                break;\n            }\n            else {\n                length--;\n            }\n        }\n        // Read substring\n        let r = this._bits.substring(this._offset, length);\n        this._offset += bits;\n        return r;\n    }\n    /**\n     * Clone BitReader\n     */\n    clone() {\n        return new BitReader(this._bits, this._offset);\n    }\n    /**\n     * Preload int from specific offset\n     * @param bits bits to preload\n     * @param offset offset to start from\n     * @returns read value as bigint\n     */\n    _preloadInt(bits, offset) {\n        if (bits == 0) {\n            return 0n;\n        }\n        let sign = this._bits.at(offset);\n        let res = 0n;\n        for (let i = 0; i < bits - 1; i++) {\n            if (this._bits.at(offset + 1 + i)) {\n                res += 1n << BigInt(bits - i - 1 - 1);\n            }\n        }\n        if (sign) {\n            res = res - (1n << BigInt(bits - 1));\n        }\n        return res;\n    }\n    /**\n     * Preload uint from specific offset\n     * @param bits bits to preload\n     * @param offset offset to start from\n     * @returns read value as bigint\n     */\n    _preloadUint(bits, offset) {\n        if (bits == 0) {\n            return 0n;\n        }\n        let res = 0n;\n        for (let i = 0; i < bits; i++) {\n            if (this._bits.at(offset + i)) {\n                res += 1n << BigInt(bits - i - 1);\n            }\n        }\n        return res;\n    }\n    _preloadBuffer(bytes, offset) {\n        // Try to load fast\n        let fastBuffer = this._bits.subbuffer(offset, bytes * 8);\n        if (fastBuffer) {\n            return fastBuffer;\n        }\n        // Load slow\n        let buf = Buffer.alloc(bytes);\n        for (let i = 0; i < bytes; i++) {\n            buf[i] = Number(this._preloadUint(8, offset + i * 8));\n        }\n        return buf;\n    }\n    _loadInternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type !== 2) {\n            throw Error('Invalid address');\n        }\n        // No Anycast supported\n        if (this._preloadUint(1, this._offset + 2) !== 0n) {\n            throw Error('Invalid address');\n        }\n        // Read address\n        let wc = Number(this._preloadInt(8, this._offset + 3));\n        let hash = this._preloadBuffer(32, this._offset + 11);\n        // Update offset\n        this._offset += 267;\n        return new Address_1.Address(wc, hash);\n    }\n    _loadExternalAddress() {\n        let type = Number(this._preloadUint(2, this._offset));\n        if (type !== 1) {\n            throw Error('Invalid address');\n        }\n        // Load length\n        let bits = Number(this._preloadUint(9, this._offset + 2));\n        // Load address\n        let value = this._preloadUint(bits, this._offset + 11);\n        // Update offset\n        this._offset += 11 + bits;\n        return new ExternalAddress_1.ExternalAddress(value, bits);\n    }\n}\nexports.BitReader = BitReader;\n","\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionary = void 0;\nconst Address_1 = require(\"../address/Address\");\nconst Builder_1 = require(\"../boc/Builder\");\nconst Cell_1 = require(\"../boc/Cell\");\nconst BitString_1 = require(\"../boc/BitString\");\nconst generateMerkleProof_1 = require(\"./generateMerkleProof\");\nconst generateMerkleUpdate_1 = require(\"./generateMerkleUpdate\");\nconst parseDict_1 = require(\"./parseDict\");\nconst serializeDict_1 = require(\"./serializeDict\");\nconst internalKeySerializer_1 = require(\"./utils/internalKeySerializer\");\nclass Dictionary {\n    /**\n     * Create an empty map\n     * @param key key type\n     * @param value value type\n     * @returns Dictionary<K, V>\n     */\n    static empty(key, value) {\n        if (key && value) {\n            return new Dictionary(new Map(), key, value);\n        }\n        else {\n            return new Dictionary(new Map(), null, null);\n        }\n    }\n    /**\n     * Load dictionary from slice\n     * @param key key description\n     * @param value value description\n     * @param src slice\n     * @returns Dictionary<K, V>\n     */\n    static load(key, value, sc) {\n        let slice;\n        if (sc instanceof Cell_1.Cell) {\n            if (sc.isExotic) {\n                return Dictionary.empty(key, value);\n            }\n            slice = sc.beginParse();\n        }\n        else {\n            slice = sc;\n        }\n        let cell = slice.loadMaybeRef();\n        if (cell && !cell.isExotic) {\n            return Dictionary.loadDirect(key, value, cell.beginParse());\n        }\n        else {\n            return Dictionary.empty(key, value);\n        }\n    }\n    /**\n     * Low level method for rare dictionaries from system contracts.\n     * Loads dictionary from slice directly without going to the ref.\n     *\n     * @param key key description\n     * @param value value description\n     * @param sc slice\n     * @returns Dictionary<K, V>\n     */\n    static loadDirect(key, value, sc) {\n        if (!sc) {\n            return Dictionary.empty(key, value);\n        }\n        let slice;\n        if (sc instanceof Cell_1.Cell) {\n            slice = sc.beginParse();\n        }\n        else {\n            slice = sc;\n        }\n        let values = (0, parseDict_1.parseDict)(slice, key.bits, value.parse);\n        let prepare = new Map();\n        for (let [k, v] of values) {\n            prepare.set((0, internalKeySerializer_1.serializeInternalKey)(key.parse(k)), v);\n        }\n        return new Dictionary(prepare, key, value);\n    }\n    constructor(values, key, value) {\n        this._key = key;\n        this._value = value;\n        this._map = values;\n    }\n    get size() {\n        return this._map.size;\n    }\n    get(key) {\n        return this._map.get((0, internalKeySerializer_1.serializeInternalKey)(key));\n    }\n    has(key) {\n        return this._map.has((0, internalKeySerializer_1.serializeInternalKey)(key));\n    }\n    set(key, value) {\n        this._map.set((0, internalKeySerializer_1.serializeInternalKey)(key), value);\n        return this;\n    }\n    delete(key) {\n        const k = (0, internalKeySerializer_1.serializeInternalKey)(key);\n        return this._map.delete(k);\n    }\n    clear() {\n        this._map.clear();\n    }\n    *[Symbol.iterator]() {\n        for (const [k, v] of this._map) {\n            const key = (0, internalKeySerializer_1.deserializeInternalKey)(k);\n            yield [key, v];\n        }\n    }\n    keys() {\n        return Array.from(this._map.keys()).map((v) => (0, internalKeySerializer_1.deserializeInternalKey)(v));\n    }\n    values() {\n        return Array.from(this._map.values());\n    }\n    store(builder, key, value) {\n        if (this._map.size === 0) {\n            builder.storeBit(0);\n        }\n        else {\n            // Resolve serializer\n            let resolvedKey = this._key;\n            if (key !== null && key !== undefined) {\n                resolvedKey = key;\n            }\n            let resolvedValue = this._value;\n            if (value !== null && value !== undefined) {\n                resolvedValue = value;\n            }\n            if (!resolvedKey) {\n                throw Error('Key serializer is not defined');\n            }\n            if (!resolvedValue) {\n                throw Error('Value serializer is not defined');\n            }\n            // Prepare map\n            let prepared = new Map();\n            for (const [k, v] of this._map) {\n                prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);\n            }\n            // Store\n            builder.storeBit(1);\n            let dd = (0, Builder_1.beginCell)();\n            (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, dd);\n            builder.storeRef(dd.endCell());\n        }\n    }\n    storeDirect(builder, key, value) {\n        if (this._map.size === 0) {\n            throw Error('Cannot store empty dictionary directly');\n        }\n        // Resolve serializer\n        let resolvedKey = this._key;\n        if (key !== null && key !== undefined) {\n            resolvedKey = key;\n        }\n        let resolvedValue = this._value;\n        if (value !== null && value !== undefined) {\n            resolvedValue = value;\n        }\n        if (!resolvedKey) {\n            throw Error('Key serializer is not defined');\n        }\n        if (!resolvedValue) {\n            throw Error('Value serializer is not defined');\n        }\n        // Prepare map\n        let prepared = new Map();\n        for (const [k, v] of this._map) {\n            prepared.set(resolvedKey.serialize((0, internalKeySerializer_1.deserializeInternalKey)(k)), v);\n        }\n        // Store\n        (0, serializeDict_1.serializeDict)(prepared, resolvedKey.bits, resolvedValue.serialize, builder);\n    }\n    generateMerkleProof(key) {\n        return (0, generateMerkleProof_1.generateMerkleProof)(this, key, this._key);\n    }\n    generateMerkleUpdate(key, newValue) {\n        return (0, generateMerkleUpdate_1.generateMerkleUpdate)(this, key, this._key, newValue);\n    }\n}\nexports.Dictionary = Dictionary;\nDictionary.Keys = {\n    /**\n     * Standard address key\n     * @returns DictionaryKey<Address>\n     */\n    Address: () => {\n        return createAddressKey();\n    },\n    /**\n     * Create standard big integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<bigint>\n     */\n    BigInt: (bits) => {\n        return createBigIntKey(bits);\n    },\n    /**\n     * Create integer key\n     * @param bits bits of integer\n     * @returns DictionaryKey<number>\n     */\n    Int: (bits) => {\n        return createIntKey(bits);\n    },\n    /**\n     * Create standard unsigned big integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<bigint>\n     */\n    BigUint: (bits) => {\n        return createBigUintKey(bits);\n    },\n    /**\n     * Create standard unsigned integer key\n     * @param bits number of bits\n     * @returns DictionaryKey<number>\n     */\n    Uint: (bits) => {\n        return createUintKey(bits);\n    },\n    /**\n     * Create standard buffer key\n     * @param bytes number of bytes of a buffer\n     * @returns DictionaryKey<Buffer>\n     */\n    Buffer: (bytes) => {\n        return createBufferKey(bytes);\n    },\n    /**\n     * Create BitString key\n     * @param bits key length\n     * @returns DictionaryKey<BitString>\n     * Point is that Buffer has to be 8 bit aligned,\n     * while key is TVM dictionary doesn't have to be\n     * aligned at all.\n     */\n    BitString: (bits) => {\n        return createBitStringKey(bits);\n    }\n};\nDictionary.Values = {\n    /**\n     * Create standard integer value\n     * @returns DictionaryValue<bigint>\n     */\n    BigInt: (bits) => {\n        return createBigIntValue(bits);\n    },\n    /**\n     * Create standard integer value\n     * @returns DictionaryValue<number>\n     */\n    Int: (bits) => {\n        return createIntValue(bits);\n    },\n    /**\n     * Create big var int\n     * @param bits nubmer of header bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigVarInt: (bits) => {\n        return createBigVarIntValue(bits);\n    },\n    /**\n     * Create standard unsigned integer value\n     * @param bits number of bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigUint: (bits) => {\n        return createBigUintValue(bits);\n    },\n    /**\n     * Create standard unsigned integer value\n     * @param bits number of bits\n     * @returns DictionaryValue<bigint>\n     */\n    Uint: (bits) => {\n        return createUintValue(bits);\n    },\n    /**\n     * Create big var int\n     * @param bits nubmer of header bits\n     * @returns DictionaryValue<bigint>\n     */\n    BigVarUint: (bits) => {\n        return createBigVarUintValue(bits);\n    },\n    /**\n     * Create standard boolean value\n     * @returns DictionaryValue<boolean>\n     */\n    Bool: () => {\n        return createBooleanValue();\n    },\n    /**\n     * Create standard address value\n     * @returns DictionaryValue<Address>\n     */\n    Address: () => {\n        return createAddressValue();\n    },\n    /**\n     * Create standard cell value\n     * @returns DictionaryValue<Cell>\n     */\n    Cell: () => {\n        return createCellValue();\n    },\n    /**\n     * Create Builder value\n     * @param bytes number of bytes of a buffer\n     * @returns DictionaryValue<Builder>\n     */\n    Buffer: (bytes) => {\n        return createBufferValue(bytes);\n    },\n    /**\n     * Create BitString value\n     * @param requested bit length\n     * @returns DictionaryValue<BitString>\n     * Point is that Buffer is not applicable\n     * when length is not 8 bit alligned.\n     */\n    BitString: (bits) => {\n        return createBitStringValue(bits);\n    },\n    /**\n     * Create dictionary value\n     * @param key\n     * @param value\n     */\n    Dictionary: (key, value) => {\n        return createDictionaryValue(key, value);\n    }\n};\n//\n// Keys and Values\n//\nfunction createAddressKey() {\n    return {\n        bits: 267,\n        serialize: (src) => {\n            if (!Address_1.Address.isAddress(src)) {\n                throw Error('Key is not an address');\n            }\n            return (0, Builder_1.beginCell)().storeAddress(src).endCell().beginParse().preloadUintBig(267);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, 267).endCell().beginParse().loadAddress();\n        }\n    };\n}\nfunction createBigIntKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'bigint') {\n                throw Error('Key is not a bigint');\n            }\n            return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadIntBig(bits);\n        }\n    };\n}\nfunction createIntKey(bits) {\n    return {\n        bits: bits,\n        serialize: (src) => {\n            if (typeof src !== 'number') {\n                throw Error('Key is not a number');\n            }\n            if (!Number.isSafeInteger(src)) {\n                throw Error('Key is not a safe integer: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeInt(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadInt(bits);\n        }\n    };\n}\nfunction createBigUintKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'bigint') {\n                throw Error('Key is not a bigint');\n            }\n            if (src < 0) {\n                throw Error('Key is negative: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        }\n    };\n}\nfunction createUintKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (typeof src !== 'number') {\n                throw Error('Key is not a number');\n            }\n            if (!Number.isSafeInteger(src)) {\n                throw Error('Key is not a safe integer: ' + src);\n            }\n            if (src < 0) {\n                throw Error('Key is negative: ' + src);\n            }\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return Number((0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadUint(bits));\n        }\n    };\n}\nfunction createBufferKey(bytes) {\n    return {\n        bits: bytes * 8,\n        serialize: (src) => {\n            if (!Buffer.isBuffer(src)) {\n                throw Error('Key is not a buffer');\n            }\n            return (0, Builder_1.beginCell)().storeBuffer(src).endCell().beginParse().loadUintBig(bytes * 8);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bytes * 8).endCell().beginParse().loadBuffer(bytes);\n        }\n    };\n}\nfunction createBitStringKey(bits) {\n    return {\n        bits,\n        serialize: (src) => {\n            if (!BitString_1.BitString.isBitString(src))\n                throw Error('Key is not a BitString');\n            return (0, Builder_1.beginCell)().storeBits(src).endCell().beginParse().loadUintBig(bits);\n        },\n        parse: (src) => {\n            return (0, Builder_1.beginCell)().storeUint(src, bits).endCell().beginParse().loadBits(bits);\n        }\n    };\n}\nfunction createIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadInt(bits);\n        }\n    };\n}\nfunction createBigIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadIntBig(bits);\n        }\n    };\n}\nfunction createBigVarIntValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeVarInt(src, bits);\n        },\n        parse: (src) => {\n            return src.loadVarIntBig(bits);\n        }\n    };\n}\nfunction createBigVarUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeVarUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadVarUintBig(bits);\n        }\n    };\n}\nfunction createUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadUint(bits);\n        }\n    };\n}\nfunction createBigUintValue(bits) {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeUint(src, bits);\n        },\n        parse: (src) => {\n            return src.loadUintBig(bits);\n        }\n    };\n}\nfunction createBooleanValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeBit(src);\n        },\n        parse: (src) => {\n            return src.loadBit();\n        }\n    };\n}\nfunction createAddressValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeAddress(src);\n        },\n        parse: (src) => {\n            return src.loadAddress();\n        }\n    };\n}\nfunction createCellValue() {\n    return {\n        serialize: (src, buidler) => {\n            buidler.storeRef(src);\n        },\n        parse: (src) => {\n            return src.loadRef();\n        }\n    };\n}\nfunction createDictionaryValue(key, value) {\n    return {\n        serialize: (src, buidler) => {\n            src.store(buidler);\n        },\n        parse: (src) => {\n            return Dictionary.load(key, value, src);\n        }\n    };\n}\nfunction createBufferValue(size) {\n    return {\n        serialize: (src, buidler) => {\n            if (src.length !== size) {\n                throw Error('Invalid buffer size');\n            }\n            buidler.storeBuffer(src);\n        },\n        parse: (src) => {\n            return src.loadBuffer(size);\n        }\n    };\n}\nfunction createBitStringValue(bits) {\n    return {\n        serialize: (src, builder) => {\n            if (src.length !== bits) {\n                throw Error('Invalid BitString size');\n            }\n            builder.storeBits(src);\n        },\n        parse: (src) => {\n            return src.loadBits(bits);\n        }\n    };\n}\n","\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendMode = void 0;\nvar SendMode;\n(function (SendMode) {\n    SendMode[SendMode[\"CARRY_ALL_REMAINING_BALANCE\"] = 128] = \"CARRY_ALL_REMAINING_BALANCE\";\n    SendMode[SendMode[\"CARRY_ALL_REMAINING_INCOMING_VALUE\"] = 64] = \"CARRY_ALL_REMAINING_INCOMING_VALUE\";\n    SendMode[SendMode[\"DESTROY_ACCOUNT_IF_ZERO\"] = 32] = \"DESTROY_ACCOUNT_IF_ZERO\";\n    SendMode[SendMode[\"PAY_GAS_SEPARATELY\"] = 1] = \"PAY_GAS_SEPARATELY\";\n    SendMode[SendMode[\"IGNORE_ERRORS\"] = 2] = \"IGNORE_ERRORS\";\n    SendMode[SendMode[\"NONE\"] = 0] = \"NONE\";\n})(SendMode || (exports.SendMode = SendMode = {}));\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncTimeout = exports.minimumDelay = exports.delay = exports.exponentialBackoffDelay = exports.createBackoff = exports.BoundedConcurrencyPool = exports.UnboundedConcurrencyPool = exports.Queue = exports.SyncValue = exports.InvalidateSync = exports.AsyncLock = exports.createAsyncIterator = void 0;\nvar createAsyncIterator_1 = require(\"./iterator/createAsyncIterator\");\nObject.defineProperty(exports, \"createAsyncIterator\", { enumerable: true, get: function () { return createAsyncIterator_1.createAsyncIterator; } });\nvar AsyncLock_1 = require(\"./sync/AsyncLock\");\nObject.defineProperty(exports, \"AsyncLock\", { enumerable: true, get: function () { return AsyncLock_1.AsyncLock; } });\nvar InvalidateSync_1 = require(\"./sync/InvalidateSync\");\nObject.defineProperty(exports, \"InvalidateSync\", { enumerable: true, get: function () { return InvalidateSync_1.InvalidateSync; } });\nvar SyncValue_1 = require(\"./sync/SyncValue\");\nObject.defineProperty(exports, \"SyncValue\", { enumerable: true, get: function () { return SyncValue_1.SyncValue; } });\nvar Queue_1 = require(\"./sync/Queue\");\nObject.defineProperty(exports, \"Queue\", { enumerable: true, get: function () { return Queue_1.Queue; } });\nvar ConcurrencyPool_1 = require(\"./sync/ConcurrencyPool\");\nObject.defineProperty(exports, \"UnboundedConcurrencyPool\", { enumerable: true, get: function () { return ConcurrencyPool_1.UnboundedConcurrencyPool; } });\nObject.defineProperty(exports, \"BoundedConcurrencyPool\", { enumerable: true, get: function () { return ConcurrencyPool_1.BoundedConcurrencyPool; } });\nvar backoff_1 = require(\"./timer/backoff\");\nObject.defineProperty(exports, \"createBackoff\", { enumerable: true, get: function () { return backoff_1.createBackoff; } });\nObject.defineProperty(exports, \"exponentialBackoffDelay\", { enumerable: true, get: function () { return backoff_1.exponentialBackoffDelay; } });\nvar delay_1 = require(\"./timer/delay\");\nObject.defineProperty(exports, \"delay\", { enumerable: true, get: function () { return delay_1.delay; } });\nObject.defineProperty(exports, \"minimumDelay\", { enumerable: true, get: function () { return delay_1.minimumDelay; } });\nvar asyncTimeout_1 = require(\"./timer/asyncTimeout\");\nObject.defineProperty(exports, \"asyncTimeout\", { enumerable: true, get: function () { return asyncTimeout_1.asyncTimeout; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAsyncIterator = void 0;\nfunction createAsyncIterator(onExit) {\n    let events = [];\n    let resolvers = [];\n    const getValue = () => {\n        return new Promise((resolve => {\n            if (events.length > 0) {\n                let val = events.shift();\n                if (val === null) {\n                    resolve({ value: undefined, done: true });\n                }\n                else {\n                    resolve({ value: val, done: false });\n                }\n            }\n            else {\n                resolvers.push(resolve);\n            }\n        }));\n    };\n    let onReturn = () => {\n        events = [];\n        resolvers = [];\n        onExit();\n        return Promise.resolve({ value: undefined, done: true });\n    };\n    return {\n        [Symbol.asyncIterator]() {\n            return {\n                next() {\n                    return getValue();\n                },\n                return: onReturn,\n                throw(error) {\n                    return Promise.reject(error);\n                }\n            };\n        },\n        push(data) {\n            if (resolvers.length > 0) {\n                resolvers.shift()({\n                    value: data,\n                    done: false\n                });\n            }\n            else {\n                events.push(data);\n            }\n        },\n        complete() {\n            if (resolvers.length > 0) {\n                resolvers.shift()({\n                    value: null,\n                    done: true\n                });\n            }\n            else {\n                events.push(null);\n            }\n        }\n    };\n}\nexports.createAsyncIterator = createAsyncIterator;\n//# sourceMappingURL=createAsyncIterator.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AsyncLock = void 0;\nclass AsyncLock {\n    constructor() {\n        this.permits = 1;\n        this.promiseResolverQueue = [];\n    }\n    inLock(func) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.lock();\n                return yield func();\n            }\n            finally {\n                this.unlock();\n            }\n        });\n    }\n    lock() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.permits > 0) {\n                this.permits = this.permits - 1;\n                return;\n            }\n            yield new Promise(resolve => this.promiseResolverQueue.push(resolve));\n        });\n    }\n    unlock() {\n        this.permits += 1;\n        if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n            throw new Error('this.permits should never be > 0 when there is someone waiting.');\n        }\n        else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n            // If there is someone else waiting, immediately consume the permit that was released\n            // at the beginning of this function and let the waiting function resume.\n            this.permits -= 1;\n            const nextResolver = this.promiseResolverQueue.shift();\n            // Resolve on the next tick\n            if (nextResolver) {\n                setTimeout(() => {\n                    nextResolver(true);\n                }, 0);\n            }\n        }\n    }\n}\nexports.AsyncLock = AsyncLock;\n//# sourceMappingURL=AsyncLock.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _BoundedConcurrencyPool_inFlight;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BoundedConcurrencyPool = exports.UnboundedConcurrencyPool = void 0;\nexports.UnboundedConcurrencyPool = {\n    run: (src) => {\n        return src();\n    }\n};\nclass BoundedConcurrencyPool {\n    constructor(concurrencyFactor) {\n        this.pending = [];\n        _BoundedConcurrencyPool_inFlight.set(this, 0);\n        if (typeof concurrencyFactor === 'number') {\n            this.concurrencyFactor = () => concurrencyFactor;\n        }\n        else {\n            this.concurrencyFactor = concurrencyFactor;\n        }\n    }\n    run(src) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (__classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\") >= this.concurrencyFactor()) {\n                yield new Promise((resolve) => this.pending.push(resolve));\n            }\n            __classPrivateFieldSet(this, _BoundedConcurrencyPool_inFlight, (_a = __classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\"), _a++, _a), \"f\");\n            try {\n                let res = yield src();\n                return res;\n            }\n            finally {\n                __classPrivateFieldSet(this, _BoundedConcurrencyPool_inFlight, (_b = __classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\"), _b--, _b), \"f\");\n                if (this.pending.length > 0) {\n                    let p = this.pending[0];\n                    this.pending.shift();\n                    p();\n                }\n            }\n        });\n    }\n    get inFlight() {\n        return __classPrivateFieldGet(this, _BoundedConcurrencyPool_inFlight, \"f\");\n    }\n    get inQueue() {\n        return this.pending.length;\n    }\n}\nexports.BoundedConcurrencyPool = BoundedConcurrencyPool;\n_BoundedConcurrencyPool_inFlight = new WeakMap();\n//# sourceMappingURL=ConcurrencyPool.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidateSync = void 0;\nconst backoff_1 = require(\"../timer/backoff\");\nclass InvalidateSync {\n    constructor(command, opts) {\n        this._invalidated = false;\n        this._invalidatedDouble = false;\n        this._stopped = false;\n        this._doSync = () => __awaiter(this, void 0, void 0, function* () {\n            yield this._backoff(() => __awaiter(this, void 0, void 0, function* () {\n                if (this._stopped) {\n                    return;\n                }\n                yield this._command();\n            }));\n            if (this._stopped) {\n                return;\n            }\n            if (this._invalidatedDouble) {\n                this._invalidatedDouble = false;\n                this._doSync();\n            }\n            else {\n                this._invalidated = false;\n            }\n        });\n        this._backoff = opts && opts.backoff ? opts.backoff : (0, backoff_1.createBackoff)();\n        this._command = command;\n    }\n    invalidate() {\n        if (this._stopped) {\n            return;\n        }\n        if (!this._invalidated) {\n            this._invalidated = true;\n            this._invalidatedDouble = false;\n            this._doSync();\n        }\n        if (!this._invalidatedDouble) {\n            this._invalidatedDouble = true;\n        }\n    }\n    stop() {\n        if (this._stopped) {\n            return;\n        }\n        this._stopped = true;\n    }\n}\nexports.InvalidateSync = InvalidateSync;\n//# sourceMappingURL=InvalidateSync.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Queue = void 0;\nclass Queue {\n    constructor() {\n        this.q = [];\n        this.awaiters = [];\n        this.push = (item) => {\n            // If queue is not empty\n            if (this.q.length > 0) {\n                this.q.push(item);\n                return;\n            }\n            // If queue is empty and there are awaiters\n            if (this.awaiters.length > 0) {\n                this.awaiters.shift()(item);\n                return;\n            }\n            // No awaiters and not empty queue\n            this.q.push(item);\n        };\n        this.get = () => __awaiter(this, void 0, void 0, function* () {\n            if (this.q.length > 0) {\n                return this.q.shift();\n            }\n            return yield new Promise((resolver) => this.awaiters.push(resolver));\n        });\n        this.getOptional = () => {\n            if (this.q.length > 0) {\n                return this.q.shift();\n            }\n            else {\n                return null;\n            }\n        };\n    }\n    get isEmpty() {\n        return this.q.length === 0;\n    }\n}\nexports.Queue = Queue;\n//# sourceMappingURL=Queue.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SyncValue = void 0;\nconst InvalidateSync_1 = require(\"./InvalidateSync\");\nclass SyncValue {\n    constructor(initial, updater, opts) {\n        this._value = initial;\n        this._updater = updater;\n        this._sync = new InvalidateSync_1.InvalidateSync(() => __awaiter(this, void 0, void 0, function* () {\n            yield this._updater(this._value);\n        }), opts);\n    }\n    get value() {\n        return this._value;\n    }\n    set value(v) {\n        if (!Object.is(v, this._value)) {\n            this._value = v;\n            this._sync.invalidate();\n        }\n    }\n}\nexports.SyncValue = SyncValue;\n//# sourceMappingURL=SyncValue.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.asyncTimeout = void 0;\nfunction asyncTimeout(src, timeout) {\n    return new Promise((resolve, reject) => {\n        // Callbacks\n        let timer = null;\n        function abort(err) {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            reject(err);\n        }\n        function complete(value) {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve(value);\n        }\n        // Timeout\n        timer = setTimeout(() => {\n            abort(new Error('Request timeout'));\n        }, timeout);\n        // Source\n        src.then(complete);\n        src.catch(abort);\n    });\n}\nexports.asyncTimeout = asyncTimeout;\n//# sourceMappingURL=asyncTimeout.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBackoff = exports.exponentialBackoffDelay = void 0;\nconst delay_1 = require(\"./delay\");\nfunction exponentialBackoffDelay(currentFailureCount, minDelay, maxDelay, maxFailureCount) {\n    let maxDelayRet = minDelay + ((maxDelay - minDelay) / maxFailureCount) * Math.max(currentFailureCount, maxFailureCount);\n    return Math.round(Math.random() * maxDelayRet);\n}\nexports.exponentialBackoffDelay = exponentialBackoffDelay;\nfunction createBackoff(opts) {\n    return (callback) => __awaiter(this, void 0, void 0, function* () {\n        let currentFailureCount = 0;\n        const minDelay = opts && opts.minDelay !== undefined ? opts.minDelay : 250;\n        const maxDelay = opts && opts.maxDelay !== undefined ? opts.maxDelay : 1000;\n        const maxFailureCount = opts && opts.maxFailureCount !== undefined ? opts.maxFailureCount : 50;\n        while (true) {\n            try {\n                return yield callback();\n            }\n            catch (e) {\n                if (currentFailureCount < maxFailureCount) {\n                    currentFailureCount++;\n                }\n                if (opts && opts.onError) {\n                    opts.onError(e, currentFailureCount);\n                }\n                let waitForRequest = exponentialBackoffDelay(currentFailureCount, minDelay, maxDelay, maxFailureCount);\n                yield (0, delay_1.delay)(waitForRequest);\n            }\n        }\n    });\n}\nexports.createBackoff = createBackoff;\n//# sourceMappingURL=backoff.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.minimumDelay = exports.delay = void 0;\nfunction delay(ms) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    });\n}\nexports.delay = delay;\nfunction minimumDelay(ms, src) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let start = Date.now();\n        let r = yield src;\n        let d = ms - (Date.now() - start);\n        if (d > 0) {\n            yield delay(d);\n        }\n        return r;\n    });\n}\nexports.minimumDelay = minimumDelay;\n//# sourceMappingURL=delay.js.map"],"names":[],"sourceRoot":""}